/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/index";
exports.ids = ["pages/index"];
exports.modules = {

/***/ "./common/helpers.ts":
/*!***************************!*\
  !*** ./common/helpers.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"customSort\": () => (/* binding */ customSort),\n/* harmony export */   \"defaultDescription\": () => (/* binding */ defaultDescription),\n/* harmony export */   \"defaultTitle\": () => (/* binding */ defaultTitle),\n/* harmony export */   \"getBaseUrl\": () => (/* binding */ getBaseUrl),\n/* harmony export */   \"getCharacterColor\": () => (/* binding */ getCharacterColor),\n/* harmony export */   \"getDescription\": () => (/* binding */ getDescription),\n/* harmony export */   \"getTitle\": () => (/* binding */ getTitle),\n/* harmony export */   \"itemSpoilerFilter\": () => (/* binding */ itemSpoilerFilter),\n/* harmony export */   \"verifyQueryParam\": () => (/* binding */ verifyQueryParam)\n/* harmony export */ });\n/* harmony import */ var _data_games__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/games */ \"./data/games.ts\");\n\nconst defaultDescription = \"Gloomhaven Card Browser is a tool for viewing Ability, Item, Monster, and Event cards from the games Gloomhaven, Frosthaven, Forgotten Circles, Jaws of the Lion, Crimson Circles, and Trail of Ashes\";\nconst defaultTitle = \"Gloomhaven Card Browser\";\nfunction getBaseUrl() {\n    return \"https://raw.githubusercontent.com/cmlenius/gloomhaven-card-browser/images/images/\";\n}\nconst articles = new Set([\n    \"a\",\n    \"an\",\n    \"and\",\n    \"of\",\n    \"the\"\n]);\nconst toTitleCase = (phrase)=>{\n    return phrase.toString().toLowerCase().split(\" \").map((word, i)=>i !== 0 && articles.has(word) ? word : word.charAt(0).toUpperCase() + word.slice(1)\n    ).join(\" \");\n};\nfunction getDescription(game, subject, cards) {\n    const gameName = _data_games__WEBPACK_IMPORTED_MODULE_0__.games.find((g)=>g.id === game\n    )?.name;\n    const description = gameName + \" \" + subject + \"; \" + cards.map((c)=>toTitleCase(c.name)\n    ).join(\", \");\n    if (!gameName || !subject || !cards || cards.length == 0 || description.trim() == \"\") return defaultDescription;\n    return description.trim();\n}\nfunction getTitle(game, subject) {\n    const gameName = _data_games__WEBPACK_IMPORTED_MODULE_0__.games.find((g)=>g.id === game\n    )?.name;\n    const title = gameName + \" \" + subject;\n    if (!gameName || !subject || title.trim() == \"\") return defaultTitle;\n    return title.trim();\n}\nfunction verifyQueryParam(param, defaultValue) {\n    if (!param) return defaultValue;\n    if (param instanceof Array) return param[0];\n    return param;\n}\nfunction getCharacterColor(char) {\n    const defaultColour = \"#432423\";\n    return defaultColour;\n}\nfunction customSort(order, direction) {\n    return (a, b)=>{\n        let sort = 1;\n        if (a[order] > b[order]) {\n            sort = 1;\n        } else if (a[order] < b[order]) {\n            sort = -1;\n        } else {\n            return a.name > b.name ? 1 : -1;\n        }\n        return direction === \"asc\" ? sort : -1 * sort;\n    };\n}\nfunction itemSpoilerFilter(spoilers) {\n    return (card)=>{\n        if (spoilers.items.includes(card.id)) {\n            return true;\n        }\n        return false;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21tb24vaGVscGVycy50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQXNDO0FBRy9CLE1BQU1DLGtCQUFrQixHQUM3Qix1TUFBdU0sQ0FBQztBQUNuTSxNQUFNQyxZQUFZLEdBQUcseUJBQXlCLENBQUM7QUFFL0MsU0FBU0MsVUFBVSxHQUFXO0lBQ25DLE9BQU8sbUZBQW1GLENBQUM7Q0FDNUY7QUFFRCxNQUFNQyxRQUFRLEdBQUcsSUFBSUMsR0FBRyxDQUFDO0lBQUMsR0FBRztJQUFFLElBQUk7SUFBRSxLQUFLO0lBQUUsSUFBSTtJQUFFLEtBQUs7Q0FBQyxDQUFDO0FBQ3pELE1BQU1DLFdBQVcsR0FBRyxDQUFDQyxNQUF1QixHQUFLO0lBQy9DLE9BQU9BLE1BQU0sQ0FDVkMsUUFBUSxFQUFFLENBQ1ZDLFdBQVcsRUFBRSxDQUNiQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQ1ZDLEdBQUcsQ0FBQyxDQUFDQyxJQUFJLEVBQUVDLENBQUMsR0FDWEEsQ0FBQyxLQUFLLENBQUMsSUFBSVQsUUFBUSxDQUFDVSxHQUFHLENBQUNGLElBQUksQ0FBQyxHQUN6QkEsSUFBSSxHQUNKQSxJQUFJLENBQUNHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQ0MsV0FBVyxFQUFFLEdBQUdKLElBQUksQ0FBQ0ssS0FBSyxDQUFDLENBQUMsQ0FBQztJQUFBLENBQ2pELENBQ0FDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztDQUNkO0FBRU0sU0FBU0MsY0FBYyxDQUM1QkMsSUFBWSxFQUNaQyxPQUFlLEVBQ2ZDLEtBQWEsRUFDTDtJQUNSLE1BQU1DLFFBQVEsR0FBR3ZCLG1EQUFVLENBQUMsQ0FBQ3lCLENBQUMsR0FBS0EsQ0FBQyxDQUFDQyxFQUFFLEtBQUtOLElBQUk7SUFBQSxDQUFDLEVBQUVPLElBQUk7SUFDdkQsTUFBTUMsV0FBVyxHQUNmTCxRQUFRLEdBQ1IsR0FBRyxHQUNIRixPQUFPLEdBQ1AsSUFBSSxHQUNKQyxLQUFLLENBQUNYLEdBQUcsQ0FBQyxDQUFDa0IsQ0FBQyxHQUFLdkIsV0FBVyxDQUFDdUIsQ0FBQyxDQUFDRixJQUFJLENBQUM7SUFBQSxDQUFDLENBQUNULElBQUksQ0FBQyxJQUFJLENBQUM7SUFFbEQsSUFDRSxDQUFDSyxRQUFRLElBQ1QsQ0FBQ0YsT0FBTyxJQUNSLENBQUNDLEtBQUssSUFDTkEsS0FBSyxDQUFDUSxNQUFNLElBQUksQ0FBQyxJQUNqQkYsV0FBVyxDQUFDRyxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBRXhCLE9BQU85QixrQkFBa0IsQ0FBQztJQUU1QixPQUFPMkIsV0FBVyxDQUFDRyxJQUFJLEVBQUUsQ0FBQztDQUMzQjtBQUVNLFNBQVNDLFFBQVEsQ0FBQ1osSUFBWSxFQUFFQyxPQUFlLEVBQVU7SUFDOUQsTUFBTUUsUUFBUSxHQUFHdkIsbURBQVUsQ0FBQyxDQUFDeUIsQ0FBQyxHQUFLQSxDQUFDLENBQUNDLEVBQUUsS0FBS04sSUFBSTtJQUFBLENBQUMsRUFBRU8sSUFBSTtJQUN2RCxNQUFNTSxLQUFLLEdBQUdWLFFBQVEsR0FBRyxHQUFHLEdBQUdGLE9BQU87SUFFdEMsSUFBSSxDQUFDRSxRQUFRLElBQUksQ0FBQ0YsT0FBTyxJQUFJWSxLQUFLLENBQUNGLElBQUksRUFBRSxJQUFJLEVBQUUsRUFBRSxPQUFPN0IsWUFBWSxDQUFDO0lBRXJFLE9BQU8rQixLQUFLLENBQUNGLElBQUksRUFBRSxDQUFDO0NBQ3JCO0FBRU0sU0FBU0csZ0JBQWdCLENBQzlCQyxLQUErQixFQUMvQkMsWUFBcUIsRUFDTjtJQUNmLElBQUksQ0FBQ0QsS0FBSyxFQUFFLE9BQU9DLFlBQVksQ0FBQztJQUNoQyxJQUFJRCxLQUFLLFlBQVlFLEtBQUssRUFBRSxPQUFPRixLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDNUMsT0FBT0EsS0FBSyxDQUFDO0NBQ2Q7QUFFTSxTQUFTRyxpQkFBaUIsQ0FBQ0MsSUFBWSxFQUFVO0lBQ3RELE1BQU1DLGFBQWEsR0FBRyxTQUFTO0lBQy9CLE9BQU9BLGFBQWEsQ0FBQztDQUN0QjtBQU1NLFNBQVNDLFVBQVUsQ0FDeEJDLEtBQWEsRUFDYkMsU0FBaUIsRUFDNkI7SUFDOUMsT0FBTyxDQUFDQyxDQUFDLEVBQUVDLENBQUMsR0FBSztRQUNmLElBQUlDLElBQUksR0FBRyxDQUFDO1FBQ1osSUFBSUYsQ0FBQyxDQUFDRixLQUFLLENBQUMsR0FBR0csQ0FBQyxDQUFDSCxLQUFLLENBQUMsRUFBRTtZQUN2QkksSUFBSSxHQUFHLENBQUMsQ0FBQztTQUNWLE1BQU0sSUFBSUYsQ0FBQyxDQUFDRixLQUFLLENBQUMsR0FBR0csQ0FBQyxDQUFDSCxLQUFLLENBQUMsRUFBRTtZQUM5QkksSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDO1NBQ1gsTUFBTTtZQUNMLE9BQU9GLENBQUMsQ0FBQ2pCLElBQUksR0FBR2tCLENBQUMsQ0FBQ2xCLElBQUksR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7U0FDakM7UUFDRCxPQUFPZ0IsU0FBUyxLQUFLLEtBQUssR0FBR0csSUFBSSxHQUFHLENBQUMsQ0FBQyxHQUFHQSxJQUFJLENBQUM7S0FDL0MsQ0FBQztDQUNIO0FBRU0sU0FBU0MsaUJBQWlCLENBQUNDLFFBQWtCLEVBQTJCO0lBQzdFLE9BQU8sQ0FBQ0MsSUFBSSxHQUFLO1FBQ2YsSUFBSUQsUUFBUSxDQUFDRSxLQUFLLENBQUNDLFFBQVEsQ0FBQ0YsSUFBSSxDQUFDdkIsRUFBRSxDQUFDLEVBQUU7WUFDcEMsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUNELE9BQU8sS0FBSyxDQUFDO0tBQ2QsQ0FBQztDQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ2xvb21oYXZlbi1jYXJkLWJyb3dzZXIvLi9jb21tb24vaGVscGVycy50cz9hOTczIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdhbWVzIH0gZnJvbSBcIi4uL2RhdGEvZ2FtZXNcIjtcbmltcG9ydCB7IENhcmQsIEl0ZW0sIFNwb2lsZXJzIH0gZnJvbSBcIi4vdHlwZXNcIjtcblxuZXhwb3J0IGNvbnN0IGRlZmF1bHREZXNjcmlwdGlvbiA9XG4gIFwiR2xvb21oYXZlbiBDYXJkIEJyb3dzZXIgaXMgYSB0b29sIGZvciB2aWV3aW5nIEFiaWxpdHksIEl0ZW0sIE1vbnN0ZXIsIGFuZCBFdmVudCBjYXJkcyBmcm9tIHRoZSBnYW1lcyBHbG9vbWhhdmVuLCBGcm9zdGhhdmVuLCBGb3Jnb3R0ZW4gQ2lyY2xlcywgSmF3cyBvZiB0aGUgTGlvbiwgQ3JpbXNvbiBDaXJjbGVzLCBhbmQgVHJhaWwgb2YgQXNoZXNcIjtcbmV4cG9ydCBjb25zdCBkZWZhdWx0VGl0bGUgPSBcIkdsb29taGF2ZW4gQ2FyZCBCcm93c2VyXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRCYXNlVXJsKCk6IHN0cmluZyB7XG4gIHJldHVybiBcImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9jbWxlbml1cy9nbG9vbWhhdmVuLWNhcmQtYnJvd3Nlci9pbWFnZXMvaW1hZ2VzL1wiO1xufVxuXG5jb25zdCBhcnRpY2xlcyA9IG5ldyBTZXQoW1wiYVwiLCBcImFuXCIsIFwiYW5kXCIsIFwib2ZcIiwgXCJ0aGVcIl0pO1xuY29uc3QgdG9UaXRsZUNhc2UgPSAocGhyYXNlOiBzdHJpbmcgfCBudW1iZXIpID0+IHtcbiAgcmV0dXJuIHBocmFzZVxuICAgIC50b1N0cmluZygpXG4gICAgLnRvTG93ZXJDYXNlKClcbiAgICAuc3BsaXQoXCIgXCIpXG4gICAgLm1hcCgod29yZCwgaSkgPT5cbiAgICAgIGkgIT09IDAgJiYgYXJ0aWNsZXMuaGFzKHdvcmQpXG4gICAgICAgID8gd29yZFxuICAgICAgICA6IHdvcmQuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyB3b3JkLnNsaWNlKDEpXG4gICAgKVxuICAgIC5qb2luKFwiIFwiKTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXREZXNjcmlwdGlvbihcbiAgZ2FtZTogc3RyaW5nLFxuICBzdWJqZWN0OiBzdHJpbmcsXG4gIGNhcmRzOiBDYXJkW11cbik6IHN0cmluZyB7XG4gIGNvbnN0IGdhbWVOYW1lID0gZ2FtZXMuZmluZCgoZykgPT4gZy5pZCA9PT0gZ2FtZSk/Lm5hbWU7XG4gIGNvbnN0IGRlc2NyaXB0aW9uID1cbiAgICBnYW1lTmFtZSArXG4gICAgXCIgXCIgK1xuICAgIHN1YmplY3QgK1xuICAgIFwiOyBcIiArXG4gICAgY2FyZHMubWFwKChjKSA9PiB0b1RpdGxlQ2FzZShjLm5hbWUpKS5qb2luKFwiLCBcIik7XG5cbiAgaWYgKFxuICAgICFnYW1lTmFtZSB8fFxuICAgICFzdWJqZWN0IHx8XG4gICAgIWNhcmRzIHx8XG4gICAgY2FyZHMubGVuZ3RoID09IDAgfHxcbiAgICBkZXNjcmlwdGlvbi50cmltKCkgPT0gXCJcIlxuICApXG4gICAgcmV0dXJuIGRlZmF1bHREZXNjcmlwdGlvbjtcblxuICByZXR1cm4gZGVzY3JpcHRpb24udHJpbSgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0VGl0bGUoZ2FtZTogc3RyaW5nLCBzdWJqZWN0OiBzdHJpbmcpOiBzdHJpbmcge1xuICBjb25zdCBnYW1lTmFtZSA9IGdhbWVzLmZpbmQoKGcpID0+IGcuaWQgPT09IGdhbWUpPy5uYW1lO1xuICBjb25zdCB0aXRsZSA9IGdhbWVOYW1lICsgXCIgXCIgKyBzdWJqZWN0O1xuXG4gIGlmICghZ2FtZU5hbWUgfHwgIXN1YmplY3QgfHwgdGl0bGUudHJpbSgpID09IFwiXCIpIHJldHVybiBkZWZhdWx0VGl0bGU7XG5cbiAgcmV0dXJuIHRpdGxlLnRyaW0oKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHZlcmlmeVF1ZXJ5UGFyYW0oXG4gIHBhcmFtOiBzdHJpbmcgfCBzdHJpbmdbXSB8IG51bGwsXG4gIGRlZmF1bHRWYWx1ZT86IHN0cmluZ1xuKTogc3RyaW5nIHwgbnVsbCB7XG4gIGlmICghcGFyYW0pIHJldHVybiBkZWZhdWx0VmFsdWU7XG4gIGlmIChwYXJhbSBpbnN0YW5jZW9mIEFycmF5KSByZXR1cm4gcGFyYW1bMF07XG4gIHJldHVybiBwYXJhbTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldENoYXJhY3RlckNvbG9yKGNoYXI6IHN0cmluZyk6IHN0cmluZyB7XG4gIGNvbnN0IGRlZmF1bHRDb2xvdXIgPSBcIiM0MzI0MjNcIjtcbiAgcmV0dXJuIGRlZmF1bHRDb2xvdXI7XG59XG5cbmludGVyZmFjZSBTZWFyY2hSZXN1bHQge1xuICBuYW1lOiBudW1iZXIgfCBzdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjdXN0b21Tb3J0KFxuICBvcmRlcjogc3RyaW5nLFxuICBkaXJlY3Rpb246IHN0cmluZ1xuKTogKGE6IFNlYXJjaFJlc3VsdCwgYjogU2VhcmNoUmVzdWx0KSA9PiBudW1iZXIge1xuICByZXR1cm4gKGEsIGIpID0+IHtcbiAgICBsZXQgc29ydCA9IDE7XG4gICAgaWYgKGFbb3JkZXJdID4gYltvcmRlcl0pIHtcbiAgICAgIHNvcnQgPSAxO1xuICAgIH0gZWxzZSBpZiAoYVtvcmRlcl0gPCBiW29yZGVyXSkge1xuICAgICAgc29ydCA9IC0xO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gYS5uYW1lID4gYi5uYW1lID8gMSA6IC0xO1xuICAgIH1cbiAgICByZXR1cm4gZGlyZWN0aW9uID09PSBcImFzY1wiID8gc29ydCA6IC0xICogc29ydDtcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGl0ZW1TcG9pbGVyRmlsdGVyKHNwb2lsZXJzOiBTcG9pbGVycyk6IChpdGVtOiBJdGVtKSA9PiBib29sZWFuIHtcbiAgcmV0dXJuIChjYXJkKSA9PiB7XG4gICAgaWYgKHNwb2lsZXJzLml0ZW1zLmluY2x1ZGVzKGNhcmQuaWQpKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9O1xufVxuIl0sIm5hbWVzIjpbImdhbWVzIiwiZGVmYXVsdERlc2NyaXB0aW9uIiwiZGVmYXVsdFRpdGxlIiwiZ2V0QmFzZVVybCIsImFydGljbGVzIiwiU2V0IiwidG9UaXRsZUNhc2UiLCJwaHJhc2UiLCJ0b1N0cmluZyIsInRvTG93ZXJDYXNlIiwic3BsaXQiLCJtYXAiLCJ3b3JkIiwiaSIsImhhcyIsImNoYXJBdCIsInRvVXBwZXJDYXNlIiwic2xpY2UiLCJqb2luIiwiZ2V0RGVzY3JpcHRpb24iLCJnYW1lIiwic3ViamVjdCIsImNhcmRzIiwiZ2FtZU5hbWUiLCJmaW5kIiwiZyIsImlkIiwibmFtZSIsImRlc2NyaXB0aW9uIiwiYyIsImxlbmd0aCIsInRyaW0iLCJnZXRUaXRsZSIsInRpdGxlIiwidmVyaWZ5UXVlcnlQYXJhbSIsInBhcmFtIiwiZGVmYXVsdFZhbHVlIiwiQXJyYXkiLCJnZXRDaGFyYWN0ZXJDb2xvciIsImNoYXIiLCJkZWZhdWx0Q29sb3VyIiwiY3VzdG9tU29ydCIsIm9yZGVyIiwiZGlyZWN0aW9uIiwiYSIsImIiLCJzb3J0IiwiaXRlbVNwb2lsZXJGaWx0ZXIiLCJzcG9pbGVycyIsImNhcmQiLCJpdGVtcyIsImluY2x1ZGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./common/helpers.ts\n");

/***/ }),

/***/ "./components/CardList.tsx":
/*!*********************************!*\
  !*** ./components/CardList.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_infinite_scroller__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-infinite-scroller */ \"react-infinite-scroller\");\n/* harmony import */ var react_infinite_scroller__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_infinite_scroller__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @fortawesome/react-fontawesome */ \"@fortawesome/react-fontawesome\");\n/* harmony import */ var _fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ \"@fortawesome/free-solid-svg-icons\");\n/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _common_helpers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/helpers */ \"./common/helpers.ts\");\n\n\n\n\n\n\nconst CARDS_PER_PAGE = 12;\nconst Empty = ()=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"empty\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_3__.FontAwesomeIcon, {\n                icon: _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_4__.faBan,\n                height: \"48px\"\n            }, void 0, false, {\n                fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n                lineNumber: 14,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: \"No Results\"\n            }, void 0, false, {\n                fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n                lineNumber: 15,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: \"Check your spoiler settings or try changing your search & filters\"\n            }, void 0, false, {\n                fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n                lineNumber: 16,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n        lineNumber: 13,\n        columnNumber: 5\n    }, undefined);\n};\nconst Card = ({ card , horizontal , showId  })=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: horizontal ? \"card-horizontal\" : \"card\",\n        children: [\n            showId && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"card-id\",\n                children: card.id\n            }, void 0, false, {\n                fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n                lineNumber: 32,\n                columnNumber: 18\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"card-inner\",\n                style: {\n                    paddingTop: horizontal ? \"66%\" : \"150%\"\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"card-img-front\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            \"aria-hidden\": \"true\",\n                            className: \"invisible\",\n                            children: card.name\n                        }, void 0, false, {\n                            fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n                            lineNumber: 38,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                            alt: String(card.name),\n                            className: \"card-img\",\n                            src: (0,_common_helpers__WEBPACK_IMPORTED_MODULE_5__.getBaseUrl)() + card.image\n                        }, card.image, false, {\n                            fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n                            lineNumber: 41,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n                    lineNumber: 37,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n                lineNumber: 33,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n        lineNumber: 31,\n        columnNumber: 5\n    }, undefined);\n};\nconst FlipCard = ({ card , horizontal , showId  })=>{\n    const { 0: flipped , 1: setFlipped  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const handleBtnClick = ()=>{\n        setFlipped(!flipped);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: horizontal ? \"card-horizontal\" : \"card\",\n        children: [\n            showId && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"card-id\",\n                children: card.id\n            }, void 0, false, {\n                fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n                lineNumber: 62,\n                columnNumber: 18\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: `card-inner ${flipped ? \"card-inner-flipped\" : \"\"}`,\n                style: {\n                    paddingTop: horizontal ? \"66%\" : \"150%\"\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"card-img-front\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                \"aria-hidden\": \"true\",\n                                className: \"invisible\",\n                                children: card.name\n                            }, void 0, false, {\n                                fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n                                lineNumber: 68,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                alt: String(card.name),\n                                className: \"card-img\",\n                                src: (0,_common_helpers__WEBPACK_IMPORTED_MODULE_5__.getBaseUrl)() + card.image\n                            }, card.image + \"-front\", false, {\n                                fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n                                lineNumber: 71,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n                        lineNumber: 67,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"card-img-back\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                \"aria-hidden\": \"true\",\n                                className: \"invisible\",\n                                children: card.name\n                            }, void 0, false, {\n                                fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n                                lineNumber: 79,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                alt: String(card.name),\n                                className: \"card-img\",\n                                src: (0,_common_helpers__WEBPACK_IMPORTED_MODULE_5__.getBaseUrl)() + card.imageBack\n                            }, card.image + \"-back\", false, {\n                                fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n                                lineNumber: 82,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n                        lineNumber: 78,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n                lineNumber: 63,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: `${flipped ? \"card-flip-btn-back\" : \"card-flip-btn\"}`,\n                onClick: handleBtnClick,\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_3__.FontAwesomeIcon, {\n                    className: `${flipped ? \"card-flip-svg-back\" : \"card-flip-svg\"}`,\n                    icon: _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_4__.faArrowsRotate,\n                    height: \"48px\"\n                }, void 0, false, {\n                    fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n                    lineNumber: 94,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n                lineNumber: 90,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n        lineNumber: 61,\n        columnNumber: 5\n    }, undefined);\n};\nconst CardList = ({ cardList , horizontal , showId  })=>{\n    const { 0: data , 1: setData  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(cardList.slice(0, CARDS_PER_PAGE));\n    const loadMore = (page)=>{\n        setData(cardList?.slice(0, (page + 1) * CARDS_PER_PAGE));\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setData(cardList?.slice(0, CARDS_PER_PAGE));\n    }, [\n        cardList\n    ]);\n    if (data?.length === 0) return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Empty, {}, void 0, false, {\n        fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n        lineNumber: 121,\n        columnNumber: 34\n    }, undefined);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((react_infinite_scroller__WEBPACK_IMPORTED_MODULE_2___default()), {\n        className: \"card-list\",\n        hasMore: data?.length < cardList.length,\n        loader: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h4\", {\n            children: \"Loading...\"\n        }, 0, false, void 0, void 0),\n        loadMore: loadMore,\n        pageStart: 0,\n        children: [\n            data?.map((card, idx)=>card.imageBack ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(FlipCard, {\n                    card: card,\n                    horizontal: horizontal,\n                    showId: showId\n                }, idx, false, {\n                    fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n                    lineNumber: 133,\n                    columnNumber: 11\n                }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Card, {\n                    card: card,\n                    horizontal: horizontal,\n                    showId: showId\n                }, idx, false, {\n                    fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n                    lineNumber: 140,\n                    columnNumber: 11\n                }, undefined)\n            ),\n            [\n                ...Array(4)\n            ].map((_, idx)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: horizontal ? \"card-horizontal\" : \"card\"\n                }, idx, false, {\n                    fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n                    lineNumber: 144,\n                    columnNumber: 9\n                }, undefined)\n            )\n        ]\n    }, void 0, true, {\n        fileName: \"/home/nrichman/projects/fh-party-items/components/CardList.tsx\",\n        lineNumber: 124,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CardList);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/CardList.tsx\n");

/***/ }),

/***/ "./components/Dropdown.tsx":
/*!*********************************!*\
  !*** ./components/Dropdown.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DropdownNav\": () => (/* binding */ DropdownNav),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nconst DropdownNav = ({ href , options , value  })=>{\n    const { 0: isHovered , 1: setIsHovered  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const currentOption = options.find((o)=>o.id === value\n    )?.name || \"Unknown\";\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: `dropdownnav ${isHovered ? \"dropdownnav-hover\" : \"\"}`,\n        onMouseEnter: ()=>setIsHovered(true)\n        ,\n        onMouseLeave: ()=>setIsHovered(false)\n        ,\n        onClick: ()=>setIsHovered(true)\n        ,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"dropdownnav-anchor\",\n                children: currentOption\n            }, void 0, false, {\n                fileName: \"/home/nrichman/projects/fh-party-items/components/Dropdown.tsx\",\n                lineNumber: 24,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"dropdownnav-content\",\n                children: options.map((opt)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                        href: href(opt.id),\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                            className: \"dropdownnav-option\",\n                            onClick: (e)=>{\n                                e.stopPropagation();\n                                setTimeout(()=>setIsHovered(false)\n                                , 200);\n                            },\n                            children: opt.name\n                        }, void 0, false, {\n                            fileName: \"/home/nrichman/projects/fh-party-items/components/Dropdown.tsx\",\n                            lineNumber: 28,\n                            columnNumber: 13\n                        }, undefined)\n                    }, opt.id, false, {\n                        fileName: \"/home/nrichman/projects/fh-party-items/components/Dropdown.tsx\",\n                        lineNumber: 27,\n                        columnNumber: 11\n                    }, undefined)\n                )\n            }, value, false, {\n                fileName: \"/home/nrichman/projects/fh-party-items/components/Dropdown.tsx\",\n                lineNumber: 25,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/nrichman/projects/fh-party-items/components/Dropdown.tsx\",\n        lineNumber: 18,\n        columnNumber: 5\n    }, undefined);\n};\nconst Dropdown = ({ onChange , options , value  })=>{\n    const handleOptionChange = (event)=>{\n        onChange(event.target.value);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"dropdown\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n            className: \"dropdown-anchor\",\n            onChange: handleOptionChange,\n            value: value,\n            children: options.map((opt, idx)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                    value: opt.id,\n                    children: opt.name\n                }, idx, false, {\n                    fileName: \"/home/nrichman/projects/fh-party-items/components/Dropdown.tsx\",\n                    lineNumber: 57,\n                    columnNumber: 11\n                }, undefined)\n            )\n        }, void 0, false, {\n            fileName: \"/home/nrichman/projects/fh-party-items/components/Dropdown.tsx\",\n            lineNumber: 51,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/home/nrichman/projects/fh-party-items/components/Dropdown.tsx\",\n        lineNumber: 50,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Dropdown);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0Ryb3Bkb3duLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQWlDO0FBQ0o7QUFXdEIsTUFBTUUsV0FBVyxHQUFHLENBQUMsRUFBRUMsSUFBSSxHQUFFQyxPQUFPLEdBQUVDLEtBQUssR0FBaUIsR0FBSztJQUN0RSxNQUFNLEVBYlIsR0FhU0MsU0FBUyxHQWJsQixHQWFvQkMsWUFBWSxNQUFJUCwrQ0FBUSxDQUFDLEtBQUssQ0FBQztJQUNqRCxNQUFNUSxhQUFhLEdBQUdKLE9BQU8sQ0FBQ0ssSUFBSSxDQUFDLENBQUNDLENBQUMsR0FBS0EsQ0FBQyxDQUFDQyxFQUFFLEtBQUtOLEtBQUs7SUFBQSxDQUFDLEVBQUVPLElBQUksSUFBSSxTQUFTO0lBRTVFLHFCQUNFLDhEQUFDQyxLQUFHO1FBQ0ZDLFNBQVMsRUFBRSxDQUFDLFlBQVksRUFBRVIsU0FBUyxHQUFHLG1CQUFtQixHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQ2hFUyxZQUFZLEVBQUUsSUFBTVIsWUFBWSxDQUFDLElBQUksQ0FBQztRQUFBO1FBQ3RDUyxZQUFZLEVBQUUsSUFBTVQsWUFBWSxDQUFDLEtBQUssQ0FBQztRQUFBO1FBQ3ZDVSxPQUFPLEVBQUUsSUFBTVYsWUFBWSxDQUFDLElBQUksQ0FBQztRQUFBOzswQkFFakMsOERBQUNNLEtBQUc7Z0JBQUNDLFNBQVMsRUFBQyxvQkFBb0I7MEJBQUVOLGFBQWE7Ozs7O3lCQUFPOzBCQUN6RCw4REFBQ0ssS0FBRztnQkFBQ0MsU0FBUyxFQUFDLHFCQUFxQjswQkFDakNWLE9BQU8sQ0FBQ2MsR0FBRyxDQUFDLENBQUNDLEdBQUcsaUJBQ2YsOERBQUNsQixrREFBSTt3QkFBY0UsSUFBSSxFQUFFQSxJQUFJLENBQUNnQixHQUFHLENBQUNSLEVBQUUsQ0FBQztrQ0FDbkMsNEVBQUNTLEdBQUM7NEJBQ0FOLFNBQVMsRUFBQyxvQkFBb0I7NEJBQzlCRyxPQUFPLEVBQUUsQ0FBQ0ksQ0FBQyxHQUFLO2dDQUNkQSxDQUFDLENBQUNDLGVBQWUsRUFBRSxDQUFDO2dDQUNwQkMsVUFBVSxDQUFDLElBQU1oQixZQUFZLENBQUMsS0FBSyxDQUFDO2dDQUFBLEVBQUUsR0FBRyxDQUFDLENBQUM7NkJBQzVDO3NDQUVBWSxHQUFHLENBQUNQLElBQUk7Ozs7O3FDQUNQO3VCQVRLTyxHQUFHLENBQUNSLEVBQUU7Ozs7aUNBVVY7Z0JBQ1IsQ0FBQztlQWJzQ04sS0FBSzs7Ozt5QkFjekM7Ozs7OztpQkFDRixDQUNOO0NBQ0gsQ0FBQztBQUVGLE1BQU1tQixRQUFRLEdBQUcsQ0FBQyxFQUFFQyxRQUFRLEdBQUVyQixPQUFPLEdBQUVDLEtBQUssR0FBaUIsR0FBSztJQUNoRSxNQUFNcUIsa0JBQWtCLEdBQUcsQ0FBQ0MsS0FBMkMsR0FBSztRQUMxRUYsUUFBUSxDQUFDRSxLQUFLLENBQUNDLE1BQU0sQ0FBQ3ZCLEtBQUssQ0FBQyxDQUFDO0tBQzlCO0lBRUQscUJBQ0UsOERBQUNRLEtBQUc7UUFBQ0MsU0FBUyxFQUFDLFVBQVU7a0JBQ3ZCLDRFQUFDZSxRQUFNO1lBQ0xmLFNBQVMsRUFBQyxpQkFBaUI7WUFDM0JXLFFBQVEsRUFBRUMsa0JBQWtCO1lBQzVCckIsS0FBSyxFQUFFQSxLQUFLO3NCQUVYRCxPQUFPLENBQUNjLEdBQUcsQ0FBQyxDQUFDQyxHQUFHLEVBQUVXLEdBQUcsaUJBQ3BCLDhEQUFDQyxRQUFNO29CQUFXMUIsS0FBSyxFQUFFYyxHQUFHLENBQUNSLEVBQUU7OEJBQzVCUSxHQUFHLENBQUNQLElBQUk7bUJBREVrQixHQUFHOzs7OzZCQUVQO1lBQ1YsQ0FBQzs7Ozs7cUJBQ0s7Ozs7O2lCQUNMLENBQ047Q0FDSDtBQUVELGlFQUFlTixRQUFRLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nbG9vbWhhdmVuLWNhcmQtYnJvd3Nlci8uL2NvbXBvbmVudHMvRHJvcGRvd24udHN4PzA2MDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcblxuaW1wb3J0IHsgT3B0aW9uIH0gZnJvbSBcIi4uL2NvbW1vbi90eXBlc1wiO1xuXG50eXBlIERyb3Bkb3duUHJvcHMgPSB7XG4gIG9uQ2hhbmdlPzogKHM6IHN0cmluZykgPT4gdm9pZDtcbiAgaHJlZj86IChzOiBzdHJpbmcpID0+IHN0cmluZztcbiAgb3B0aW9uczogT3B0aW9uW107XG4gIHZhbHVlOiBzdHJpbmc7XG59O1xuXG5leHBvcnQgY29uc3QgRHJvcGRvd25OYXYgPSAoeyBocmVmLCBvcHRpb25zLCB2YWx1ZSB9OiBEcm9wZG93blByb3BzKSA9PiB7XG4gIGNvbnN0IFtpc0hvdmVyZWQsIHNldElzSG92ZXJlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IGN1cnJlbnRPcHRpb24gPSBvcHRpb25zLmZpbmQoKG8pID0+IG8uaWQgPT09IHZhbHVlKT8ubmFtZSB8fCBcIlVua25vd25cIjtcblxuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIGNsYXNzTmFtZT17YGRyb3Bkb3dubmF2ICR7aXNIb3ZlcmVkID8gXCJkcm9wZG93bm5hdi1ob3ZlclwiIDogXCJcIn1gfVxuICAgICAgb25Nb3VzZUVudGVyPXsoKSA9PiBzZXRJc0hvdmVyZWQodHJ1ZSl9XG4gICAgICBvbk1vdXNlTGVhdmU9eygpID0+IHNldElzSG92ZXJlZChmYWxzZSl9XG4gICAgICBvbkNsaWNrPXsoKSA9PiBzZXRJc0hvdmVyZWQodHJ1ZSl9XG4gICAgPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJkcm9wZG93bm5hdi1hbmNob3JcIj57Y3VycmVudE9wdGlvbn08L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZHJvcGRvd25uYXYtY29udGVudFwiIGtleT17dmFsdWV9PlxuICAgICAgICB7b3B0aW9ucy5tYXAoKG9wdCkgPT4gKFxuICAgICAgICAgIDxMaW5rIGtleT17b3B0LmlkfSBocmVmPXtocmVmKG9wdC5pZCl9PlxuICAgICAgICAgICAgPGFcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZHJvcGRvd25uYXYtb3B0aW9uXCJcbiAgICAgICAgICAgICAgb25DbGljaz17KGUpID0+IHtcbiAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gc2V0SXNIb3ZlcmVkKGZhbHNlKSwgMjAwKTtcbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge29wdC5uYW1lfVxuICAgICAgICAgICAgPC9hPlxuICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgKSl9XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmNvbnN0IERyb3Bkb3duID0gKHsgb25DaGFuZ2UsIG9wdGlvbnMsIHZhbHVlIH06IERyb3Bkb3duUHJvcHMpID0+IHtcbiAgY29uc3QgaGFuZGxlT3B0aW9uQ2hhbmdlID0gKGV2ZW50OiBSZWFjdC5DaGFuZ2VFdmVudDxIVE1MU2VsZWN0RWxlbWVudD4pID0+IHtcbiAgICBvbkNoYW5nZShldmVudC50YXJnZXQudmFsdWUpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJkcm9wZG93blwiPlxuICAgICAgPHNlbGVjdFxuICAgICAgICBjbGFzc05hbWU9XCJkcm9wZG93bi1hbmNob3JcIlxuICAgICAgICBvbkNoYW5nZT17aGFuZGxlT3B0aW9uQ2hhbmdlfVxuICAgICAgICB2YWx1ZT17dmFsdWV9XG4gICAgICA+XG4gICAgICAgIHtvcHRpb25zLm1hcCgob3B0LCBpZHgpID0+IChcbiAgICAgICAgICA8b3B0aW9uIGtleT17aWR4fSB2YWx1ZT17b3B0LmlkfT5cbiAgICAgICAgICAgIHtvcHQubmFtZX1cbiAgICAgICAgICA8L29wdGlvbj5cbiAgICAgICAgKSl9XG4gICAgICA8L3NlbGVjdD5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IERyb3Bkb3duO1xuIl0sIm5hbWVzIjpbInVzZVN0YXRlIiwiTGluayIsIkRyb3Bkb3duTmF2IiwiaHJlZiIsIm9wdGlvbnMiLCJ2YWx1ZSIsImlzSG92ZXJlZCIsInNldElzSG92ZXJlZCIsImN1cnJlbnRPcHRpb24iLCJmaW5kIiwibyIsImlkIiwibmFtZSIsImRpdiIsImNsYXNzTmFtZSIsIm9uTW91c2VFbnRlciIsIm9uTW91c2VMZWF2ZSIsIm9uQ2xpY2siLCJtYXAiLCJvcHQiLCJhIiwiZSIsInN0b3BQcm9wYWdhdGlvbiIsInNldFRpbWVvdXQiLCJEcm9wZG93biIsIm9uQ2hhbmdlIiwiaGFuZGxlT3B0aW9uQ2hhbmdlIiwiZXZlbnQiLCJ0YXJnZXQiLCJzZWxlY3QiLCJpZHgiLCJvcHRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/Dropdown.tsx\n");

/***/ }),

/***/ "./components/Layout.tsx":
/*!*******************************!*\
  !*** ./components/Layout.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/head */ \"next/head\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_script__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/script */ \"next/script\");\n/* harmony import */ var next_script__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_script__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/router */ \"next/router\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _common_helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/helpers */ \"./common/helpers.ts\");\n\n\n\n\n\nconst TopBar = ()=>{\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_3__.useRouter)();\n    const path = router.asPath.split(\"/\");\n    let cardType = path.length >= 3 ? path[2] : null;\n    if (cardType) {\n        cardType = cardType.split(\"?\")[0];\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"nav\", {\n        className: \"topbar\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"topbar-inner\"\n        }, void 0, false, {\n            fileName: \"/home/nrichman/projects/fh-party-items/components/Layout.tsx\",\n            lineNumber: 21,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/home/nrichman/projects/fh-party-items/components/Layout.tsx\",\n        lineNumber: 20,\n        columnNumber: 5\n    }, undefined);\n};\nconst Layout = ({ children , description , title  })=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_1___default()), {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                        children: title || _common_helpers__WEBPACK_IMPORTED_MODULE_4__.defaultTitle\n                    }, void 0, false, {\n                        fileName: \"/home/nrichman/projects/fh-party-items/components/Layout.tsx\",\n                        lineNumber: 38,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"description\",\n                        content: description || _common_helpers__WEBPACK_IMPORTED_MODULE_4__.defaultDescription\n                    }, void 0, false, {\n                        fileName: \"/home/nrichman/projects/fh-party-items/components/Layout.tsx\",\n                        lineNumber: 39,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"google-site-verification\",\n                        content: \"dyv7-lOXQn9xEOYXMD6s0oQYUYuQzTGN-KkjuPlILxg\"\n                    }, void 0, false, {\n                        fileName: \"/home/nrichman/projects/fh-party-items/components/Layout.tsx\",\n                        lineNumber: 40,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"icon\",\n                        href: \"/logo.png\"\n                    }, void 0, false, {\n                        fileName: \"/home/nrichman/projects/fh-party-items/components/Layout.tsx\",\n                        lineNumber: 44,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/nrichman/projects/fh-party-items/components/Layout.tsx\",\n                lineNumber: 37,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_script__WEBPACK_IMPORTED_MODULE_2___default()), {\n                src: \"https://www.googletagmanager.com/gtag/js?id=G-FFL6ZJNJ4T\",\n                strategy: \"afterInteractive\"\n            }, void 0, false, {\n                fileName: \"/home/nrichman/projects/fh-party-items/components/Layout.tsx\",\n                lineNumber: 46,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_script__WEBPACK_IMPORTED_MODULE_2___default()), {\n                id: \"google-analytics\",\n                strategy: \"afterInteractive\",\n                children: `\n          window.dataLayer = window.dataLayer || [];\n          function gtag(){window.dataLayer.push(arguments);}\n          gtag(\"js\", new Date());\n          gtag(\"config\", \"G-FFL6ZJNJ4T\");\n        `\n            }, void 0, false, {\n                fileName: \"/home/nrichman/projects/fh-party-items/components/Layout.tsx\",\n                lineNumber: 50,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(TopBar, {}, void 0, false, {\n                fileName: \"/home/nrichman/projects/fh-party-items/components/Layout.tsx\",\n                lineNumber: 58,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n                className: \"main\",\n                children: children\n            }, void 0, false, {\n                fileName: \"/home/nrichman/projects/fh-party-items/components/Layout.tsx\",\n                lineNumber: 59,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Layout);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0xheW91dC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBQTZCO0FBQ0k7QUFDTztBQUtiO0FBRTNCLE1BQU1LLE1BQU0sR0FBRyxJQUFNO0lBQ25CLE1BQU1DLE1BQU0sR0FBR0osc0RBQVMsRUFBRTtJQUUxQixNQUFNSyxJQUFJLEdBQUdELE1BQU0sQ0FBQ0UsTUFBTSxDQUFDQyxLQUFLLENBQUMsR0FBRyxDQUFDO0lBQ3JDLElBQUlDLFFBQVEsR0FBR0gsSUFBSSxDQUFDSSxNQUFNLElBQUksQ0FBQyxHQUFHSixJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSTtJQUNoRCxJQUFJRyxRQUFRLEVBQUU7UUFDWkEsUUFBUSxHQUFHQSxRQUFRLENBQUNELEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNuQztJQUVELHFCQUNFLDhEQUFDRyxLQUFHO1FBQUNDLFNBQVMsRUFBQyxRQUFRO2tCQUNyQiw0RUFBQ0MsS0FBRztZQUFDRCxTQUFTLEVBQUMsY0FBYzs7Ozs7cUJBRXZCOzs7OztpQkFDRixDQUNOO0NBQ0g7QUFRRCxNQUFNRSxNQUFNLEdBQUcsQ0FBQyxFQUFFQyxRQUFRLEdBQUVDLFdBQVcsR0FBRUMsS0FBSyxHQUFlLEdBQUs7SUFDaEUscUJBQ0U7OzBCQUNFLDhEQUFDbEIsa0RBQUk7O2tDQUNILDhEQUFDa0IsT0FBSztrQ0FBRUEsS0FBSyxJQUFJZCx5REFBWTs7Ozs7aUNBQVM7a0NBQ3RDLDhEQUFDZSxNQUFJO3dCQUFDQyxJQUFJLEVBQUMsYUFBYTt3QkFBQ0MsT0FBTyxFQUFFSixXQUFXLElBQUlkLCtEQUFrQjs7Ozs7aUNBQUk7a0NBQ3ZFLDhEQUFDZ0IsTUFBSTt3QkFDSEMsSUFBSSxFQUFDLDBCQUEwQjt3QkFDL0JDLE9BQU8sRUFBQyw2Q0FBNkM7Ozs7O2lDQUNyRDtrQ0FDRiw4REFBQ0MsTUFBSTt3QkFBQ0MsR0FBRyxFQUFDLE1BQU07d0JBQUNDLElBQUksRUFBQyxXQUFXOzs7OztpQ0FBRzs7Ozs7O3lCQUMvQjswQkFDUCw4REFBQ3ZCLG9EQUFNO2dCQUNMd0IsR0FBRyxFQUFDLDBEQUEwRDtnQkFDOURDLFFBQVEsRUFBQyxrQkFBa0I7Ozs7O3lCQUMzQjswQkFDRiw4REFBQ3pCLG9EQUFNO2dCQUFDMEIsRUFBRSxFQUFDLGtCQUFrQjtnQkFBQ0QsUUFBUSxFQUFDLGtCQUFrQjswQkFDdEQsQ0FBQzs7Ozs7UUFLRixDQUFDOzs7Ozt5QkFDTTswQkFDVCw4REFBQ3JCLE1BQU07Ozs7eUJBQUc7MEJBQ1YsOERBQUN1QixNQUFJO2dCQUFDZixTQUFTLEVBQUMsTUFBTTswQkFBRUcsUUFBUTs7Ozs7eUJBQVE7O29CQUN2QyxDQUNIO0NBQ0g7QUFFRCxpRUFBZUQsTUFBTSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ2xvb21oYXZlbi1jYXJkLWJyb3dzZXIvLi9jb21wb25lbnRzL0xheW91dC50c3g/M2M4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSGVhZCBmcm9tIFwibmV4dC9oZWFkXCI7XG5pbXBvcnQgU2NyaXB0IGZyb20gXCJuZXh0L3NjcmlwdFwiO1xuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSBcIm5leHQvcm91dGVyXCI7XG5cbmltcG9ydCB7XG4gIGRlZmF1bHREZXNjcmlwdGlvbixcbiAgZGVmYXVsdFRpdGxlLFxufSBmcm9tIFwiLi4vY29tbW9uL2hlbHBlcnNcIjtcblxuY29uc3QgVG9wQmFyID0gKCkgPT4ge1xuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcblxuICBjb25zdCBwYXRoID0gcm91dGVyLmFzUGF0aC5zcGxpdChcIi9cIik7XG4gIGxldCBjYXJkVHlwZSA9IHBhdGgubGVuZ3RoID49IDMgPyBwYXRoWzJdIDogbnVsbDtcbiAgaWYgKGNhcmRUeXBlKSB7XG4gICAgY2FyZFR5cGUgPSBjYXJkVHlwZS5zcGxpdChcIj9cIilbMF07XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxuYXYgY2xhc3NOYW1lPVwidG9wYmFyXCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInRvcGJhci1pbm5lclwiPlxuICAgICAgICB7LyogSGVhZGVyIENvbnRlbnQgZ29lcyBoZXJlKi99XG4gICAgICA8L2Rpdj5cbiAgICA8L25hdj5cbiAgKTtcbn07XG5cbnR5cGUgTGF5b3V0UHJvcHMgPSB7XG4gIGNoaWxkcmVuPzogUmVhY3QuUmVhY3ROb2RlO1xuICBkZXNjcmlwdGlvbj86IHN0cmluZztcbiAgdGl0bGU/OiBzdHJpbmc7XG59O1xuXG5jb25zdCBMYXlvdXQgPSAoeyBjaGlsZHJlbiwgZGVzY3JpcHRpb24sIHRpdGxlIH06IExheW91dFByb3BzKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxIZWFkPlxuICAgICAgICA8dGl0bGU+e3RpdGxlIHx8IGRlZmF1bHRUaXRsZX08L3RpdGxlPlxuICAgICAgICA8bWV0YSBuYW1lPVwiZGVzY3JpcHRpb25cIiBjb250ZW50PXtkZXNjcmlwdGlvbiB8fCBkZWZhdWx0RGVzY3JpcHRpb259IC8+XG4gICAgICAgIDxtZXRhXG4gICAgICAgICAgbmFtZT1cImdvb2dsZS1zaXRlLXZlcmlmaWNhdGlvblwiXG4gICAgICAgICAgY29udGVudD1cImR5djctbE9YUW45eEVPWVhNRDZzMG9RWVVZdVF6VEdOLUtranVQbElMeGdcIlxuICAgICAgICAvPlxuICAgICAgICA8bGluayByZWw9XCJpY29uXCIgaHJlZj1cIi9sb2dvLnBuZ1wiIC8+XG4gICAgICA8L0hlYWQ+XG4gICAgICA8U2NyaXB0XG4gICAgICAgIHNyYz1cImh0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL2d0YWcvanM/aWQ9Ry1GRkw2WkpOSjRUXCJcbiAgICAgICAgc3RyYXRlZ3k9XCJhZnRlckludGVyYWN0aXZlXCJcbiAgICAgIC8+XG4gICAgICA8U2NyaXB0IGlkPVwiZ29vZ2xlLWFuYWx5dGljc1wiIHN0cmF0ZWd5PVwiYWZ0ZXJJbnRlcmFjdGl2ZVwiPlxuICAgICAgICB7YFxuICAgICAgICAgIHdpbmRvdy5kYXRhTGF5ZXIgPSB3aW5kb3cuZGF0YUxheWVyIHx8IFtdO1xuICAgICAgICAgIGZ1bmN0aW9uIGd0YWcoKXt3aW5kb3cuZGF0YUxheWVyLnB1c2goYXJndW1lbnRzKTt9XG4gICAgICAgICAgZ3RhZyhcImpzXCIsIG5ldyBEYXRlKCkpO1xuICAgICAgICAgIGd0YWcoXCJjb25maWdcIiwgXCJHLUZGTDZaSk5KNFRcIik7XG4gICAgICAgIGB9XG4gICAgICA8L1NjcmlwdD5cbiAgICAgIDxUb3BCYXIgLz5cbiAgICAgIDxtYWluIGNsYXNzTmFtZT1cIm1haW5cIj57Y2hpbGRyZW59PC9tYWluPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgTGF5b3V0O1xuIl0sIm5hbWVzIjpbIkhlYWQiLCJTY3JpcHQiLCJ1c2VSb3V0ZXIiLCJkZWZhdWx0RGVzY3JpcHRpb24iLCJkZWZhdWx0VGl0bGUiLCJUb3BCYXIiLCJyb3V0ZXIiLCJwYXRoIiwiYXNQYXRoIiwic3BsaXQiLCJjYXJkVHlwZSIsImxlbmd0aCIsIm5hdiIsImNsYXNzTmFtZSIsImRpdiIsIkxheW91dCIsImNoaWxkcmVuIiwiZGVzY3JpcHRpb24iLCJ0aXRsZSIsIm1ldGEiLCJuYW1lIiwiY29udGVudCIsImxpbmsiLCJyZWwiLCJocmVmIiwic3JjIiwic3RyYXRlZ3kiLCJpZCIsIm1haW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/Layout.tsx\n");

/***/ }),

/***/ "./components/Sort.tsx":
/*!*****************************!*\
  !*** ./components/Sort.tsx ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/router */ \"next/router\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _common_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/helpers */ \"./common/helpers.ts\");\n/* harmony import */ var _components_Dropdown__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/Dropdown */ \"./components/Dropdown.tsx\");\n\n\n\n\nconst sortDirectionOptions = [\n    {\n        id: \"asc\",\n        name: \"Asc\"\n    },\n    {\n        id: \"desc\",\n        name: \"Desc\"\n    }, \n];\nconst Sort = ({ sortOrderOptions  })=>{\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n    const query = router.query;\n    const handleSortOrderChange = (newOrder)=>{\n        router.push({\n            pathname: router.pathname,\n            query: {\n                ...query,\n                order: newOrder\n            }\n        });\n    };\n    const handleSortDirectionChange = (newDirection)=>{\n        router.push({\n            pathname: router.pathname,\n            query: {\n                ...query,\n                dir: newDirection\n            }\n        });\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"sort\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Dropdown__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                onChange: handleSortOrderChange,\n                options: sortOrderOptions,\n                value: (0,_common_helpers__WEBPACK_IMPORTED_MODULE_2__.verifyQueryParam)(query.order)\n            }, void 0, false, {\n                fileName: \"/home/nrichman/projects/fh-party-items/components/Sort.tsx\",\n                lineNumber: 41,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                style: {\n                    marginRight: \"8px\"\n                },\n                children: \":\"\n            }, void 0, false, {\n                fileName: \"/home/nrichman/projects/fh-party-items/components/Sort.tsx\",\n                lineNumber: 46,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Dropdown__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                onChange: handleSortDirectionChange,\n                options: sortDirectionOptions,\n                value: (0,_common_helpers__WEBPACK_IMPORTED_MODULE_2__.verifyQueryParam)(query.dir)\n            }, void 0, false, {\n                fileName: \"/home/nrichman/projects/fh-party-items/components/Sort.tsx\",\n                lineNumber: 47,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/nrichman/projects/fh-party-items/components/Sort.tsx\",\n        lineNumber: 40,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Sort);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1NvcnQudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUF3QztBQUdhO0FBQ1A7QUFPOUMsTUFBTUcsb0JBQW9CLEdBQTBCO0lBQ2xEO1FBQUVDLEVBQUUsRUFBRSxLQUFLO1FBQUVDLElBQUksRUFBRSxLQUFLO0tBQUU7SUFDMUI7UUFBRUQsRUFBRSxFQUFFLE1BQU07UUFBRUMsSUFBSSxFQUFFLE1BQU07S0FBRTtDQUM3QjtBQU1ELE1BQU1DLElBQUksR0FBRyxDQUFDLEVBQUVDLGdCQUFnQixHQUFhLEdBQUs7SUFDaEQsTUFBTUMsTUFBTSxHQUFHUixzREFBUyxFQUFFO0lBQzFCLE1BQU1TLEtBQUssR0FBR0QsTUFBTSxDQUFDQyxLQUFLO0lBRTFCLE1BQU1DLHFCQUFxQixHQUFHLENBQUNDLFFBQWdCLEdBQUs7UUFDbERILE1BQU0sQ0FBQ0ksSUFBSSxDQUFDO1lBQ1ZDLFFBQVEsRUFBRUwsTUFBTSxDQUFDSyxRQUFRO1lBQ3pCSixLQUFLLEVBQUU7Z0JBQUUsR0FBR0EsS0FBSztnQkFBRUssS0FBSyxFQUFFSCxRQUFRO2FBQUU7U0FDckMsQ0FBQyxDQUFDO0tBQ0o7SUFFRCxNQUFNSSx5QkFBeUIsR0FBRyxDQUFDQyxZQUFvQixHQUFLO1FBQzFEUixNQUFNLENBQUNJLElBQUksQ0FBQztZQUNWQyxRQUFRLEVBQUVMLE1BQU0sQ0FBQ0ssUUFBUTtZQUN6QkosS0FBSyxFQUFFO2dCQUFFLEdBQUdBLEtBQUs7Z0JBQUVRLEdBQUcsRUFBRUQsWUFBWTthQUFFO1NBQ3ZDLENBQUMsQ0FBQztLQUNKO0lBRUQscUJBQ0UsOERBQUNFLEtBQUc7UUFBQ0MsU0FBUyxFQUFDLE1BQU07OzBCQUNuQiw4REFBQ2pCLDREQUFRO2dCQUNQa0IsUUFBUSxFQUFFVixxQkFBcUI7Z0JBQy9CVyxPQUFPLEVBQUVkLGdCQUFnQjtnQkFDekJlLEtBQUssRUFBRXJCLGlFQUFnQixDQUFDUSxLQUFLLENBQUNLLEtBQUssQ0FBQzs7Ozs7eUJBQ3BDOzBCQUNGLDhEQUFDUyxNQUFJO2dCQUFDQyxLQUFLLEVBQUU7b0JBQUVDLFdBQVcsRUFBRSxLQUFLO2lCQUFFOzBCQUFFLEdBQUM7Ozs7O3lCQUFPOzBCQUM3Qyw4REFBQ3ZCLDREQUFRO2dCQUNQa0IsUUFBUSxFQUFFTCx5QkFBeUI7Z0JBQ25DTSxPQUFPLEVBQUVsQixvQkFBb0I7Z0JBQzdCbUIsS0FBSyxFQUFFckIsaUVBQWdCLENBQUNRLEtBQUssQ0FBQ1EsR0FBRyxDQUFDOzs7Ozt5QkFDbEM7Ozs7OztpQkFDRSxDQUNOO0NBQ0g7QUFFRCxpRUFBZVgsSUFBSSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ2xvb21oYXZlbi1jYXJkLWJyb3dzZXIvLi9jb21wb25lbnRzL1NvcnQudHN4PzNlZjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSBcIm5leHQvcm91dGVyXCI7XG5cbmltcG9ydCB7IE9wdGlvbiB9IGZyb20gXCIuLi9jb21tb24vdHlwZXNcIjtcbmltcG9ydCB7IHZlcmlmeVF1ZXJ5UGFyYW0gfSBmcm9tIFwiLi4vY29tbW9uL2hlbHBlcnNcIjtcbmltcG9ydCBEcm9wZG93biBmcm9tIFwiLi4vY29tcG9uZW50cy9Ecm9wZG93blwiO1xuXG50eXBlIFNvcnREaXJlY3Rpb25PcHRpb24gPSB7XG4gIGlkOiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbn07XG5cbmNvbnN0IHNvcnREaXJlY3Rpb25PcHRpb25zOiBTb3J0RGlyZWN0aW9uT3B0aW9uW10gPSBbXG4gIHsgaWQ6IFwiYXNjXCIsIG5hbWU6IFwiQXNjXCIgfSxcbiAgeyBpZDogXCJkZXNjXCIsIG5hbWU6IFwiRGVzY1wiIH0sXG5dO1xuXG50eXBlIFNvcnRQcm9wcyA9IHtcbiAgc29ydE9yZGVyT3B0aW9uczogT3B0aW9uW107XG59O1xuXG5jb25zdCBTb3J0ID0gKHsgc29ydE9yZGVyT3B0aW9ucyB9OiBTb3J0UHJvcHMpID0+IHtcbiAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XG4gIGNvbnN0IHF1ZXJ5ID0gcm91dGVyLnF1ZXJ5O1xuXG4gIGNvbnN0IGhhbmRsZVNvcnRPcmRlckNoYW5nZSA9IChuZXdPcmRlcjogc3RyaW5nKSA9PiB7XG4gICAgcm91dGVyLnB1c2goe1xuICAgICAgcGF0aG5hbWU6IHJvdXRlci5wYXRobmFtZSxcbiAgICAgIHF1ZXJ5OiB7IC4uLnF1ZXJ5LCBvcmRlcjogbmV3T3JkZXIgfSxcbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVTb3J0RGlyZWN0aW9uQ2hhbmdlID0gKG5ld0RpcmVjdGlvbjogc3RyaW5nKSA9PiB7XG4gICAgcm91dGVyLnB1c2goe1xuICAgICAgcGF0aG5hbWU6IHJvdXRlci5wYXRobmFtZSxcbiAgICAgIHF1ZXJ5OiB7IC4uLnF1ZXJ5LCBkaXI6IG5ld0RpcmVjdGlvbiB9LFxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJzb3J0XCI+XG4gICAgICA8RHJvcGRvd25cbiAgICAgICAgb25DaGFuZ2U9e2hhbmRsZVNvcnRPcmRlckNoYW5nZX1cbiAgICAgICAgb3B0aW9ucz17c29ydE9yZGVyT3B0aW9uc31cbiAgICAgICAgdmFsdWU9e3ZlcmlmeVF1ZXJ5UGFyYW0ocXVlcnkub3JkZXIpfVxuICAgICAgLz5cbiAgICAgIDxzcGFuIHN0eWxlPXt7IG1hcmdpblJpZ2h0OiBcIjhweFwiIH19Pjo8L3NwYW4+XG4gICAgICA8RHJvcGRvd25cbiAgICAgICAgb25DaGFuZ2U9e2hhbmRsZVNvcnREaXJlY3Rpb25DaGFuZ2V9XG4gICAgICAgIG9wdGlvbnM9e3NvcnREaXJlY3Rpb25PcHRpb25zfVxuICAgICAgICB2YWx1ZT17dmVyaWZ5UXVlcnlQYXJhbShxdWVyeS5kaXIpfVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFNvcnQ7XG4iXSwibmFtZXMiOlsidXNlUm91dGVyIiwidmVyaWZ5UXVlcnlQYXJhbSIsIkRyb3Bkb3duIiwic29ydERpcmVjdGlvbk9wdGlvbnMiLCJpZCIsIm5hbWUiLCJTb3J0Iiwic29ydE9yZGVyT3B0aW9ucyIsInJvdXRlciIsInF1ZXJ5IiwiaGFuZGxlU29ydE9yZGVyQ2hhbmdlIiwibmV3T3JkZXIiLCJwdXNoIiwicGF0aG5hbWUiLCJvcmRlciIsImhhbmRsZVNvcnREaXJlY3Rpb25DaGFuZ2UiLCJuZXdEaXJlY3Rpb24iLCJkaXIiLCJkaXYiLCJjbGFzc05hbWUiLCJvbkNoYW5nZSIsIm9wdGlvbnMiLCJ2YWx1ZSIsInNwYW4iLCJzdHlsZSIsIm1hcmdpblJpZ2h0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/Sort.tsx\n");

/***/ }),

/***/ "./data/games.ts":
/*!***********************!*\
  !*** ./data/games.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"games\": () => (/* binding */ games)\n/* harmony export */ });\nconst games = [\n    {\n        id: \"fh\",\n        name: \"Frosthaven\"\n    }, \n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9kYXRhL2dhbWVzLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFFTyxNQUFNQSxLQUFLLEdBQVc7SUFDM0I7UUFDRUMsRUFBRSxFQUFFLElBQUk7UUFDUkMsSUFBSSxFQUFFLFlBQVk7S0FDbkI7Q0FDRixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ2xvb21oYXZlbi1jYXJkLWJyb3dzZXIvLi9kYXRhL2dhbWVzLnRzPzhlMmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR2FtZSB9IGZyb20gXCIuLi9jb21tb24vdHlwZXNcIjtcblxuZXhwb3J0IGNvbnN0IGdhbWVzOiBHYW1lW10gPSBbXG4gIHtcbiAgICBpZDogXCJmaFwiLFxuICAgIG5hbWU6IFwiRnJvc3RoYXZlblwiLFxuICB9LFxuXTtcbiJdLCJuYW1lcyI6WyJnYW1lcyIsImlkIiwibmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./data/games.ts\n");

/***/ }),

/***/ "./data/item-cards.ts":
/*!****************************!*\
  !*** ./data/item-cards.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"itemCards\": () => (/* binding */ itemCards)\n/* harmony export */ });\nconst itemCards = {\n    fh: [\n        {\n            id: 1,\n            name: \"spyglass\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-001-spyglass.jpeg\",\n            cost: 0,\n            slot: \"head\",\n            spent: true\n        },\n        {\n            id: 2,\n            name: \"crude helmet\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-002-crude-helmet.jpeg\",\n            cost: 0,\n            slot: \"head\"\n        },\n        {\n            id: 3,\n            name: \"traveling cloak\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-003-traveling-cloak.jpeg\",\n            cost: 0,\n            slot: \"body\"\n        },\n        {\n            id: 4,\n            name: \"crude hide armor\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-004-crude-hide-armor.jpeg\",\n            cost: 0,\n            slot: \"body\",\n            spent: true\n        },\n        {\n            id: 5,\n            name: \"crude boots\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-005-crude-boots.jpeg\",\n            cost: 0,\n            slot: \"legs\",\n            spent: true\n        },\n        {\n            id: 6,\n            name: \"flexible slippers\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-006-flexible-slippers.jpeg\",\n            cost: 0,\n            slot: \"legs\",\n            spent: true\n        },\n        {\n            id: 7,\n            name: \"crude bow\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-007-crude-bow.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            spent: true\n        },\n        {\n            id: 8,\n            name: \"crude spear\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-008-crude-spear.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            spent: true\n        },\n        {\n            id: 9,\n            name: \"protective scepter\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-009-protective-scepter.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 10,\n            name: \"crude shield\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-010-crude-shield.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 11,\n            name: \"simple charm\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-011-simple-charm.jpeg\",\n            cost: 0,\n            slot: \"head\"\n        },\n        {\n            id: 12,\n            name: \"crude chain armor\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-012-crude-chain-armor.jpeg\",\n            cost: 0,\n            slot: \"body\",\n            spent: true\n        },\n        {\n            id: 13,\n            name: \"dancing slippers\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-013-dancing-slippers.jpeg\",\n            cost: 0,\n            slot: \"legs\",\n            spent: true\n        },\n        {\n            id: 14,\n            name: \"heavy sword\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-014-heavy-sword.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 15,\n            name: \"reinforced shield\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-015-reinforced-shield.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 16,\n            name: \"inspiring helmet\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-016-inspiring-helmet.jpeg\",\n            cost: 0,\n            slot: \"head\",\n            consumed: true\n        },\n        {\n            id: 17,\n            name: \"cured leather armor\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-017-cured-leather-armor.jpeg\",\n            cost: 0,\n            slot: \"body\",\n            spent: true\n        },\n        {\n            id: 18,\n            name: \"rough boots\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-018-rough-boots.jpeg\",\n            cost: 0,\n            slot: \"legs\",\n            spent: true\n        },\n        {\n            id: 19,\n            name: \"ringing hammer\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-019-ringing-hammer.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 20,\n            name: \"well-strung bow\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-020-well-strung-bow.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            spent: true\n        },\n        {\n            id: 21,\n            name: \"chain hood\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-021-chain-hood.jpeg\",\n            cost: 0,\n            slot: \"head\"\n        },\n        {\n            id: 22,\n            name: \"heavy chain armor\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-022-heavy-chain-armor.jpeg\",\n            cost: 0,\n            slot: \"body\",\n            spent: true\n        },\n        {\n            id: 23,\n            name: \"sturdy greaves\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-023-sturdy-greaves.jpeg\",\n            cost: 0,\n            slot: \"legs\",\n            spent: true\n        },\n        {\n            id: 24,\n            name: \"corrupted blade\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-024-corrupted-blade.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 25,\n            name: \"soothing scepter\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-025-soothing-scepter.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 26,\n            name: \"truesight lenses\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-026-truesight-lenses.jpeg\",\n            cost: 0,\n            slot: \"head\",\n            spent: true\n        },\n        {\n            id: 27,\n            name: \"cloak of warding\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-027-cloak-of-warding.jpeg\",\n            cost: 0,\n            slot: \"body\",\n            consumed: true\n        },\n        {\n            id: 28,\n            name: \"sturdy boots\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-028-sturdy-boots.jpeg\",\n            cost: 0,\n            slot: \"legs\",\n            spent: true\n        },\n        {\n            id: 29,\n            name: \"cleaving axe\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-029-cleaving-axe.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            spent: true\n        },\n        {\n            id: 30,\n            name: \"parrying gauntlet\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-030-parrying-gauntlet.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 31,\n            name: \"deathproof charm\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-031-deathproof-charm.jpeg\",\n            cost: 0,\n            slot: \"head\",\n            consumed: true\n        },\n        {\n            id: 32,\n            name: \"shell armor\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-032-shell-armor.jpeg\",\n            cost: 0,\n            slot: \"body\",\n            spent: true\n        },\n        {\n            id: 33,\n            name: \"volatile boots\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-033-volatile-boots.jpeg\",\n            imageBack: \"items/frosthaven/fh-033-volatile-boots-back.jpeg\",\n            cost: 0,\n            slot: \"legs\"\n        },\n        {\n            id: 34,\n            name: \"shrapnel bomb\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-034-shrapnel-bomb.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 35,\n            name: \"kite shield\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-035-kite-shield.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 36,\n            name: \"plumed helmet\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-036-plumed-helmet.jpeg\",\n            cost: 0,\n            slot: \"head\"\n        },\n        {\n            id: 37,\n            name: \"ghost cloak\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-037-ghost-cloak.jpeg\",\n            cost: 0,\n            slot: \"body\",\n            consumed: true\n        },\n        {\n            id: 38,\n            name: \"duelists shoes\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-038-duelists-shoes.jpeg\",\n            cost: 0,\n            slot: \"legs\",\n            spent: true\n        },\n        {\n            id: 39,\n            name: \"abyss axe\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-039-abyss-axe.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            spent: true\n        },\n        {\n            id: 40,\n            name: \"heartstrike bow\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-040-heartstrike-bow.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            spent: true\n        },\n        {\n            id: 41,\n            name: \"intricate charm\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-041-intricate-charm.jpeg\",\n            cost: 0,\n            slot: \"head\"\n        },\n        {\n            id: 42,\n            name: \"ornate armor\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-042-ornate-armor.jpeg\",\n            cost: 0,\n            slot: \"body\",\n            spent: true\n        },\n        {\n            id: 43,\n            name: \"kicking boots\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-043-kicking-boots.jpeg\",\n            cost: 0,\n            slot: \"legs\",\n            spent: true\n        },\n        {\n            id: 44,\n            name: \"sword of absolution\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-044-sword-of-absolution.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 45,\n            name: \"master scepter\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-045-master-scepter.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 46,\n            name: \"double-lens goggles\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-046-double-lens-goggles.jpeg\",\n            cost: 0,\n            slot: \"head\",\n            spent: true\n        },\n        {\n            id: 47,\n            name: \"robes of doom\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-047-robes-of-doom.jpeg\",\n            cost: 0,\n            slot: \"body\",\n            spent: true\n        },\n        {\n            id: 48,\n            name: \"living shoes\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-048-living-shoes.jpeg\",\n            cost: 0,\n            slot: \"legs\"\n        },\n        {\n            id: 49,\n            name: \"cruel dagger\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-049-cruel-dagger.jpeg\",\n            cost: 0,\n            slot: \"1h\"\n        },\n        {\n            id: 50,\n            name: \"shield of reciprocity\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-050-shield-of-reciprocity.jpeg\",\n            imageBack: \"items/frosthaven/fh-050-shield-of-reciprocity-back.jpeg\",\n            cost: 0,\n            slot: \"1h\"\n        },\n        {\n            id: 51,\n            name: \"spiked collar\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-051-spiked-collar.jpeg\",\n            cost: 0,\n            slot: \"head\",\n            spent: true\n        },\n        {\n            id: 52,\n            name: \"laser lens\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-052-laser-lens.jpeg\",\n            cost: 0,\n            slot: \"head\",\n            spent: true\n        },\n        {\n            id: 53,\n            name: \"hobnail boots\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-053-hobnail-boots.jpeg\",\n            cost: 0,\n            slot: \"legs\"\n        },\n        {\n            id: 54,\n            name: \"restful slippers\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-054-restful-slippers.jpeg\",\n            cost: 0,\n            slot: \"legs\",\n            spent: true\n        },\n        {\n            id: 55,\n            name: \"biting gauntlet\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-055-biting-gauntlet.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 56,\n            name: \"scavengers magnet\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-056-scavengers-magnet.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 57,\n            name: \"shovel\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-057-shovel.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 58,\n            name: \"slippery sword\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-058-slippery-sword.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 59,\n            name: \"charm of expertise\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-059-charm-of-expertise.jpeg\",\n            cost: 0,\n            slot: \"head\"\n        },\n        {\n            id: 60,\n            name: \"cloak of many pockets\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-060-cloak-of-many-pockets.jpeg\",\n            cost: 0,\n            slot: \"body\"\n        },\n        {\n            id: 61,\n            name: \"spiked shell\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-061-spiked-shell.jpeg\",\n            cost: 0,\n            slot: \"body\",\n            spent: true\n        },\n        {\n            id: 62,\n            name: \"everlasting boots\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-062-everlasting-boots.jpeg\",\n            cost: 0,\n            slot: \"legs\",\n            spent: true\n        },\n        {\n            id: 63,\n            name: \"shadow stompers\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-063-shadow-stompers.jpeg\",\n            cost: 0,\n            slot: \"legs\",\n            spent: true\n        },\n        {\n            id: 64,\n            name: \"detonator\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-064-detonator.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 65,\n            name: \"rust powder\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-065-rust-powder.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 66,\n            name: \"amulet of eternal life\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-066-amulet-of-eternal-life.jpeg\",\n            cost: 0,\n            slot: \"head\"\n        },\n        {\n            id: 67,\n            name: \"converging lenses\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-067-converging-lenses.jpeg\",\n            imageBack: \"items/frosthaven/fh-067-converging-lenses-back.jpeg\",\n            cost: 0,\n            slot: \"head\"\n        },\n        {\n            id: 68,\n            name: \"scaled armor\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-068-scaled-armor.jpeg\",\n            cost: 0,\n            slot: \"body\",\n            consumed: true\n        },\n        {\n            id: 69,\n            name: \"feathered cloak\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-069-feathered-cloak.jpeg\",\n            cost: 0,\n            slot: \"body\",\n            spent: true\n        },\n        {\n            id: 70,\n            name: \"aesther robe\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-070-aesther-robe.jpeg\",\n            cost: 0,\n            slot: \"body\"\n        },\n        {\n            id: 71,\n            name: \"bone boots\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-071-bone-boots.jpeg\",\n            cost: 0,\n            slot: \"legs\",\n            consumed: true\n        },\n        {\n            id: 72,\n            name: \"oak staff\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-072-oak-staff.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            spent: true\n        },\n        {\n            id: 73,\n            name: \"energizing baton\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-073-energizing-baton.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 74,\n            name: \"shock grenades\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-074-shock-grenades.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 75,\n            name: \"rose gauntlet\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-075-rose-gauntlet.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 76,\n            name: \"horn of command\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-076-horn-of-command.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 77,\n            name: \"chaos cannon\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-077-chaos-cannon.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 78,\n            name: \"balanced scales\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-078-balanced-scales.jpeg\",\n            imageBack: \"items/frosthaven/fh-078-balanced-scales-back.jpeg\",\n            cost: 0,\n            slot: \"1h\"\n        },\n        {\n            id: 79,\n            name: \"roasted fowl\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-079-roasted-fowl.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 80,\n            name: \"living stone\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-080-living-stone.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 81,\n            name: \"pain simulacrum\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-081-pain-simulacrum.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 82,\n            name: \"mechanical cube\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-082-mechanical-cube.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 83,\n            name: \"healing potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-083-healing-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 84,\n            name: \"stamina potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-084-stamina-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 85,\n            name: \"power potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-085-power-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 86,\n            name: \"element potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-086-element-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 87,\n            name: \"cure potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-087-cure-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 88,\n            name: \"fireshield potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-088-fireshield-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 89,\n            name: \"stoneskin potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-089-stoneskin-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 90,\n            name: \"muscle potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-090-muscle-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 91,\n            name: \"holy water\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-091-holy-water.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 92,\n            name: \"renewing potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-092-renewing-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 93,\n            name: \"glancing potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-093-glancing-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 94,\n            name: \"frenzy potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-094-frenzy-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 95,\n            name: \"poison vial\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-095-poison-vial.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 96,\n            name: \"flame vial\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-096-flame-vial.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 97,\n            name: \"explosive vial\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-097-explosive-vial.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 98,\n            name: \"unhealthy mixture\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-098-unhealthy-mixture.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 99,\n            name: \"major healing potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-099-major-healing-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 100,\n            name: \"major stamina potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-100-major-stamina-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 101,\n            name: \"major power potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-101-major-power-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 102,\n            name: \"major element potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-102-major-element-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 103,\n            name: \"major cure potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-103-major-cure-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 104,\n            name: \"swiftness potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-104-swiftness-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 105,\n            name: \"major fireshield potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-105-major-fireshield-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 106,\n            name: \"stonewall potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-106-stonewall-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 107,\n            name: \"vigor potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-107-vigor-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 108,\n            name: \"holy rain\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-108-holy-rain.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 109,\n            name: \"major renewing potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-109-major-renewing-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 110,\n            name: \"precision potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-110-precision-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 111,\n            name: \"major frenzy potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-111-major-frenzy-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 112,\n            name: \"hammer potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-112-hammer-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 113,\n            name: \"expertise potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-113-expertise-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 114,\n            name: \"foresight potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-114-foresight-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 115,\n            name: \"infusion potion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-115-infusion-potion.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 116,\n            name: \"plague flask\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-116-plague-flask.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 117,\n            name: \"inferno flask\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-117-inferno-flask.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 118,\n            name: \"fulminant flask\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-118-fulminant-flask.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 119,\n            name: \"deadly mixture\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-119-deadly-mixture.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 120,\n            name: \"amulet of life\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-120-amulet-of-life.jpeg\",\n            cost: 0,\n            slot: \"head\",\n            spent: true\n        },\n        {\n            id: 121,\n            name: \"circlet of elements\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-121-circlet-of-elements.jpeg\",\n            cost: 0,\n            slot: \"head\",\n            spent: true\n        },\n        {\n            id: 122,\n            name: \"wardens robes\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-122-wardens-robes.jpeg\",\n            cost: 0,\n            slot: \"body\",\n            spent: true\n        },\n        {\n            id: 123,\n            name: \"leather armor\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-123-leather-armor.jpeg\",\n            cost: 0,\n            slot: \"body\",\n            spent: true\n        },\n        {\n            id: 124,\n            name: \"winged shoes\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-124-winged-shoes.jpeg\",\n            cost: 0,\n            slot: \"legs\",\n            spent: true\n        },\n        {\n            id: 125,\n            name: \"boots of speed\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-125-boots-of-speed.jpeg\",\n            cost: 0,\n            slot: \"legs\",\n            spent: true\n        },\n        {\n            id: 126,\n            name: \"weighted net\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-126-weighted-net.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            spent: true\n        },\n        {\n            id: 127,\n            name: \"poison dagger\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-127-poison-dagger.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 128,\n            name: \"heater shield\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-128-heater-shield.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 129,\n            name: \"eagle-eye goggles\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-129-eagle-eye-goggles.jpeg\",\n            cost: 0,\n            slot: \"head\",\n            spent: true\n        },\n        {\n            id: 130,\n            name: \"iron helmet\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-130-iron-helmet.jpeg\",\n            cost: 0,\n            slot: \"head\"\n        },\n        {\n            id: 131,\n            name: \"chainmail\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-131-chainmail.jpeg\",\n            cost: 0,\n            slot: \"body\",\n            spent: true\n        },\n        {\n            id: 132,\n            name: \"cloak of pockets\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-132-cloak-of-pockets.jpeg\",\n            cost: 0,\n            slot: \"body\"\n        },\n        {\n            id: 133,\n            name: \"nimble legguards\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-133-nimble-legguards.jpeg\",\n            cost: 0,\n            slot: \"legs\",\n            spent: true\n        },\n        {\n            id: 134,\n            name: \"comfortable shoes\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-134-comfortable-shoes.jpeg\",\n            cost: 0,\n            slot: \"legs\"\n        },\n        {\n            id: 135,\n            name: \"armorbane bow\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-135-armorbane-bow.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            consumed: true\n        },\n        {\n            id: 136,\n            name: \"battle axe\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-136-battle-axe.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            consumed: true\n        },\n        {\n            id: 137,\n            name: \"tower shield\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-137-tower-shield.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 138,\n            name: \"heavy basinet\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-138-heavy-basinet.jpeg\",\n            cost: 0,\n            slot: \"head\"\n        },\n        {\n            id: 139,\n            name: \"horned helm\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-139-horned-helm.jpeg\",\n            cost: 0,\n            slot: \"head\"\n        },\n        {\n            id: 140,\n            name: \"mantle of summoning\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-140-mantle-of-summoning.jpeg\",\n            cost: 0,\n            slot: \"body\"\n        },\n        {\n            id: 141,\n            name: \"studded leather\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-141-studded-leather.jpeg\",\n            cost: 0,\n            slot: \"body\",\n            spent: true\n        },\n        {\n            id: 142,\n            name: \"boots of quickness\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-142-boots-of-quickness.jpeg\",\n            cost: 0,\n            slot: \"legs\",\n            spent: true\n        },\n        {\n            id: 143,\n            name: \"endurance footwraps\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-143-endurance-footwraps.jpeg\",\n            cost: 0,\n            slot: \"legs\"\n        },\n        {\n            id: 144,\n            name: \"staff of eminence\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-144-staff-of-eminence.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            spent: true\n        },\n        {\n            id: 145,\n            name: \"versatile dagger\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-145-versatile-dagger.jpeg\",\n            cost: 0,\n            slot: \"1h\"\n        },\n        {\n            id: 146,\n            name: \"hooked chain\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-146-hooked-chain.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            spent: true\n        },\n        {\n            id: 147,\n            name: \"mask of terror\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-147-mask-of-terror.jpeg\",\n            cost: 0,\n            slot: \"head\"\n        },\n        {\n            id: 148,\n            name: \"circlet of sanctity\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-148-circlet-of-sanctity.jpeg\",\n            imageBack: \"items/frosthaven/fh-148-circlet-of-sanctity-back.jpeg\",\n            cost: 0,\n            slot: \"head\"\n        },\n        {\n            id: 149,\n            name: \"platemail\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-149-platemail.jpeg\",\n            cost: 0,\n            slot: \"body\",\n            spent: true\n        },\n        {\n            id: 150,\n            name: \"robes of the oak\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-150-robes-of-the-oak.jpeg\",\n            cost: 0,\n            slot: \"body\",\n            spent: true\n        },\n        {\n            id: 151,\n            name: \"serene sandals\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-151-serene-sandals.jpeg\",\n            cost: 0,\n            slot: \"legs\"\n        },\n        {\n            id: 152,\n            name: \"steel sabatons\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-152-steel-sabatons.jpeg\",\n            cost: 0,\n            slot: \"legs\"\n        },\n        {\n            id: 153,\n            name: \"long spear\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-153-long-spear.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            spent: true\n        },\n        {\n            id: 154,\n            name: \"volatile bomb\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-154-volatile-bomb.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            consumed: true\n        },\n        {\n            id: 155,\n            name: \"wall shield\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-155-wall-shield.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            spent: true\n        },\n        {\n            id: 156,\n            name: \"moon earring\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-156-moon-earring.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 157,\n            name: \"steel ring\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-157-steel-ring.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 158,\n            name: \"deep earth brooch\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-158-deep-earth-brooch.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 159,\n            name: \"glorious bracelet\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-159-glorious-bracelet.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 160,\n            name: \"sun earring\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-160-sun-earring.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 161,\n            name: \"strategists ring\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-161-strategists-ring.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 162,\n            name: \"howling ice brooch\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-162-howling-ice-brooch.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 163,\n            name: \"stunning bracelet\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-163-stunning-bracelet.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 164,\n            name: \"star earring\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-164-star-earring.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 165,\n            name: \"ring of haste\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-165-ring-of-haste.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 166,\n            name: \"blazing sun brooch\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-166-blazing-sun-brooch.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 167,\n            name: \"attractive bracelet\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-167-attractive-bracelet.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 168,\n            name: \"circlet of eyes\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-168-circlet-of-eyes.jpeg\",\n            cost: 0,\n            slot: \"head\",\n            consumed: true\n        },\n        {\n            id: 169,\n            name: \"fateful charm\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-169-fateful-charm.jpeg\",\n            cost: 0,\n            slot: \"head\",\n            consumed: true\n        },\n        {\n            id: 170,\n            name: \"eye of truth\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-170-eye-of-truth.jpeg\",\n            cost: 0,\n            slot: \"head\",\n            consumed: true\n        },\n        {\n            id: 171,\n            name: \"rejuvenating charm\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-171-rejuvenating-charm.jpeg\",\n            cost: 0,\n            slot: \"head\"\n        },\n        {\n            id: 172,\n            name: \"cap of premonition\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-172-cap-of-premonition.jpeg\",\n            cost: 0,\n            slot: \"head\",\n            consumed: true\n        },\n        {\n            id: 173,\n            name: \"multi-colored cloak\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-173-multi-colored-cloak.jpeg\",\n            cost: 0,\n            slot: \"body\"\n        },\n        {\n            id: 174,\n            name: \"magnetic cape\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-174-magnetic-cape.jpeg\",\n            cost: 0,\n            slot: \"body\",\n            consumed: true\n        },\n        {\n            id: 175,\n            name: \"mirrored armor\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-175-mirrored-armor.jpeg\",\n            cost: 0,\n            slot: \"body\",\n            consumed: true\n        },\n        {\n            id: 176,\n            name: \"blinking cape\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-176-blinking-cape.jpeg\",\n            cost: 0,\n            slot: \"body\",\n            consumed: true\n        },\n        {\n            id: 177,\n            name: \"boots of transference\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-177-boots-of-transference.jpeg\",\n            cost: 0,\n            slot: \"legs\",\n            consumed: true\n        },\n        {\n            id: 178,\n            name: \"tranquil shoes\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-178-tranquil-shoes.jpeg\",\n            cost: 0,\n            slot: \"legs\"\n        },\n        {\n            id: 179,\n            name: \"burst boots\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-179-burst-boots.jpeg\",\n            cost: 0,\n            slot: \"legs\",\n            consumed: true\n        },\n        {\n            id: 180,\n            name: \"boots of greed\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-180-boots-of-greed.jpeg\",\n            cost: 0,\n            slot: \"legs\"\n        },\n        {\n            id: 181,\n            name: \"translocation rod\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-181-translocation-rod.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            consumed: true\n        },\n        {\n            id: 182,\n            name: \"wing clippers\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-182-wing-clippers.jpeg\",\n            cost: 0,\n            slot: \"2h\"\n        },\n        {\n            id: 183,\n            name: \"decanter of mists\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-183-decanter-of-mists.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 184,\n            name: \"flashing axe\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-184-flashing-axe.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 185,\n            name: \"mirrored knife\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-185-mirrored-knife.jpeg\",\n            cost: 0,\n            slot: \"1h\"\n        },\n        {\n            id: 186,\n            name: \"wild growth seeds\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-186-wild-growth-seeds.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 187,\n            name: \"dangerous gear\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-187-dangerous-gear.jpeg\",\n            cost: 0,\n            slot: \"samll\",\n            consumed: true\n        },\n        {\n            id: 188,\n            name: \"freezing crystal\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-188-freezing-crystal.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 189,\n            name: \"ring of the night\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-189-ring-of-the-night.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 190,\n            name: \"white card\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-190-white-card.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 191,\n            name: \"corrupted scroll\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-191-corrupted-scroll.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 192,\n            name: \"enticing bell\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-192-enticing-bell.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 193,\n            name: \"mind-thieving helmet\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-193-mind-thieving-helmet.jpeg\",\n            cost: 0,\n            slot: \"head\",\n            consumed: true\n        },\n        {\n            id: 194,\n            name: \"temporal amulet\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-194-temporal-amulet.jpeg\",\n            cost: 0,\n            slot: \"head\",\n            consumed: true\n        },\n        {\n            id: 195,\n            name: \"tri-corner hat\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-195-tri-corner-hat.jpeg\",\n            cost: 0,\n            slot: \"head\",\n            spent: true,\n            consumed: true\n        },\n        {\n            id: 196,\n            name: \"choker of sacrifice\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-196-choker-of-sacrifice.jpeg\",\n            cost: 0,\n            slot: \"head\",\n            consumed: true\n        },\n        {\n            id: 197,\n            name: \"aesther diadem\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-197-aesther-diadem.jpeg\",\n            cost: 0,\n            slot: \"head\",\n            consumed: true\n        },\n        {\n            id: 198,\n            name: \"hunters necklace\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-198-hunters-necklace.jpeg\",\n            cost: 0,\n            slot: \"head\",\n            consumed: true\n        },\n        {\n            id: 199,\n            name: \"opulent shoes\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-199-opulent-shoes.jpeg\",\n            cost: 0,\n            slot: \"legs\"\n        },\n        {\n            id: 200,\n            name: \"eventide scepter\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-200-eventide-scepter.jpeg\",\n            imageBack: \"items/frosthaven/fh-200-eventide-scepter-back.jpeg\",\n            cost: 0,\n            slot: \"1h\"\n        },\n        {\n            id: 201,\n            name: \"wave blade\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-201-wave-blade.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            spent: true\n        },\n        {\n            id: 202,\n            name: \"giant piranha pig spine\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-202-giant-piranha-pig-spine.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            spent: true\n        },\n        {\n            id: 203,\n            name: \"scepter of control\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-203-scepter-of-control.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 204,\n            name: \"severed claw\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-204-severed-claw.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 205,\n            name: \"harpoon\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-205-harpoon.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            consumed: true\n        },\n        {\n            id: 206,\n            name: \"giant sword\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-206-giant-sword.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            spent: true\n        },\n        {\n            id: 207,\n            name: \"fishhook\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-207-fishhook.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            spent: true\n        },\n        {\n            id: 208,\n            name: \"titan nail\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-208-titan-nail.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            spent: true\n        },\n        {\n            id: 209,\n            name: \"sword of mastery\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-209-sword-of-mastery.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            spent: true\n        },\n        {\n            id: 210,\n            name: \"tanjo\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-210-tanjo.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            spent: true\n        },\n        {\n            id: 211,\n            name: \"boom barrel\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-211-boom-barrel.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            consumed: true\n        },\n        {\n            id: 212,\n            name: \"elemental stone\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-212-elemental-stone.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 213,\n            name: \"key of seasons\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-213-key-of-seasons.jpeg\",\n            imageBack: \"items/frosthaven/fh-213-key-of-seasons-back.jpeg\",\n            cost: 0,\n            slot: \"1h\"\n        },\n        {\n            id: 214,\n            name: \"cup of ventillion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-214-cup-of-ventillion.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 215,\n            name: \"befuddling mug\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-215-befuddling-mug.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 216,\n            name: \"tome of elements\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-216-tome-of-elements.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 217,\n            name: \"tome of time\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-217-tome-of-time.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 218,\n            name: \"tome of life\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-218-tome-of-life.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 219,\n            name: \"tome of conflict\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-219-tome-of-conflict.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 220,\n            name: \"belaras quill\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-220-belaras-quill.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 221,\n            name: \"ice shiv\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-221-ice-shiv.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 222,\n            name: \"black box\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-222-black-box.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 223,\n            name: \"lightning rod\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-223-lightning-rod.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 224,\n            name: \"armor of empathy\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-224-armor-of-empathy.jpeg\",\n            imageBack: \"items/frosthaven/fh-224-armor-of-empathy-back.jpeg\",\n            cost: 0,\n            slot: \"body\"\n        },\n        {\n            id: 225,\n            name: \"algox carving\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-225-algox-carving.jpeg\",\n            imageBack: \"items/frosthaven/fh-225-algox-carving-back.jpeg\",\n            cost: 0,\n            slot: \"body\"\n        },\n        {\n            id: 226,\n            name: \"unfettered arm\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-226-unfettered-arm.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 227,\n            name: \"data drive\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-227-data-drive.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 228,\n            name: \"extendable pole\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-228-extendable-pole.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 229,\n            name: \"exquisite map\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-229-exquisite-map.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 230,\n            name: \"examination glass\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-230-examination-glass.jpeg\",\n            cost: 0,\n            slot: \"1h\"\n        },\n        {\n            id: 231,\n            name: \"skinning knife\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-231-skinning-knife.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 232,\n            name: \"orchid wand\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-232-orchid-wand.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 233,\n            name: \"dead raven\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-233-dead-raven.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 234,\n            name: \"ooze vial\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-234-ooze-vial.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 235,\n            name: \"small rat\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-235-small-rat.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 236,\n            name: \"cracked mirror\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-236-cracked-mirror.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 237,\n            name: \"mesmerizing seashell\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-237-mesmerizing-seashell.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 238,\n            name: \"cracked idol\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-238-cracked-idol.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 239,\n            name: \"eye of the storm\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-239-eye-of-the-storm.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 240,\n            name: \"demons gem\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-240-demons-gem.jpeg\",\n            cost: 0,\n            slot: \"small\"\n        },\n        {\n            id: 241,\n            name: \"shimmering powder\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-241-shimmering-powder.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 242,\n            name: \"lucky dice\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-242-lucky-dice.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 243,\n            name: \"cursed rock\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-243-cursed-rock.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 244,\n            name: \"ember energy source\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-244-ember-energy-source.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 245,\n            name: \"ancient coin\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-245-ancient-coin.jpeg\",\n            cost: 0,\n            slot: \"\"\n        },\n        {\n            id: 245,\n            name: \"ancient coin\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-245-ancient-coin.jpeg\",\n            cost: 0,\n            slot: \"\"\n        },\n        {\n            id: 245,\n            name: \"ancient coin\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-245-ancient-coin.jpeg\",\n            cost: 0,\n            slot: \"\"\n        },\n        {\n            id: 245,\n            name: \"ancient coin\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-245-ancient-coin.jpeg\",\n            cost: 0,\n            slot: \"\"\n        },\n        {\n            id: 246,\n            name: \"key card\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-246-key-card.jpeg\",\n            cost: 0,\n            slot: \"\"\n        },\n        {\n            id: 247,\n            name: \"trainers net\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-247-trainers-net.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 248,\n            name: \"wanderers club\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-248-wanderers-club.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 249,\n            name: \"recalibration trigger\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-249-recalibration-trigger.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 250,\n            name: \"spear of justice\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-250-spear-of-justice.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 251,\n            name: \"soul urn\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-251-soul-urn.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 252,\n            name: \"black earth codex\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-252-black-earth-codex.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 253,\n            name: \"mask of duality\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-253-mask-of-duality.jpeg\",\n            imageBack: \"items/frosthaven/fh-253-mask-of-duality-back.jpeg\",\n            cost: 0,\n            slot: \"head\"\n        },\n        {\n            id: 254,\n            name: \"ancestral blade\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-254-ancestral-blade.jpeg\",\n            cost: 0,\n            slot: \"2h\",\n            consumed: true\n        },\n        {\n            id: 255,\n            name: \"mountains heart\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-255-mountains-heart.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 256,\n            name: \"sonorous shard\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-256-sonorous-shard.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 257,\n            name: \"sly camouflage\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-257-sly-camouflage.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            spent: true\n        },\n        {\n            id: 258,\n            name: \"skull of agony\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-258-skull-of-agony.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 259,\n            name: \"storm carving\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-259-storm-carving.jpeg\",\n            imageBack: \"items/frosthaven/fh-259-storm-carving-back.jpeg\",\n            cost: 0,\n            slot: \"1h\"\n        },\n        {\n            id: 260,\n            name: \"freezing orb\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-260-freezing-orb.jpeg\",\n            cost: 0,\n            slot: \"1h\",\n            consumed: true\n        },\n        {\n            id: 261,\n            name: \"energized module\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-261-energized-module.jpeg\",\n            cost: 0,\n            slot: \"small\",\n            consumed: true\n        },\n        {\n            id: 262,\n            name: \"exhaust boots\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-262-exhaust-boots.jpeg\",\n            imageBack: \"items/frosthaven/fh-262-exhaust-boots-back.jpeg\",\n            cost: 0,\n            slot: \"legs\"\n        },\n        {\n            id: 263,\n            name: \"warlords skull\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-263-warlords-skull.jpeg\",\n            cost: 0,\n            slot: \"1h\"\n        },\n        {\n            id: 264,\n            name: \"spiraled medallion\",\n            game: \"fh\",\n            source: \"fh\",\n            image: \"items/frosthaven/fh-264-spiraled-medallion.jpeg\",\n            cost: 0,\n            slot: \"head\",\n            consumed: true\n        }, \n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./data/item-cards.ts\n");

/***/ }),

/***/ "./hooks/useSpoilers.tsx":
/*!*******************************!*\
  !*** ./hooks/useSpoilers.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SpoilersProvider\": () => (/* binding */ SpoilersProvider),\n/* harmony export */   \"defaultSpoilersContextValue\": () => (/* binding */ defaultSpoilersContextValue),\n/* harmony export */   \"useSpoilers\": () => (/* binding */ useSpoilers)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _data_item_unlocks_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/item_unlocks.json */ \"./data/item_unlocks.json\");\n\n\n\nconst defaultSpoilersContextValue = {\n    items: _data_item_unlocks_json__WEBPACK_IMPORTED_MODULE_2__.items\n};\nconst SpoilersContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    spoilers: defaultSpoilersContextValue,\n    setSpoilers: ()=>{}\n});\nconst SpoilersProvider = ({ children  })=>{\n    const { 0: spoilers1 , 1: setSpoilers  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(defaultSpoilersContextValue);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const storageSpoilers = localStorage.getItem(\"spoilers\");\n        if (!storageSpoilers) {\n            setSpoilers((spoilers)=>({\n                    ...spoilers,\n                    loading: false\n                })\n            );\n            return;\n        }\n        const parsedSpoilers = JSON.parse(storageSpoilers);\n        if (!parsedSpoilers) {\n            localStorage.delete(\"spoilers\");\n            setSpoilers((spoilers)=>({\n                    ...spoilers,\n                    loading: false\n                })\n            );\n            return;\n        }\n        parsedSpoilers.characters = new Set(parsedSpoilers?.characters);\n        setSpoilers({\n            ...parsedSpoilers,\n            loading: false\n        });\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(SpoilersContext.Provider, {\n        value: {\n            spoilers: spoilers1,\n            setSpoilers: setSpoilers\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/home/nrichman/projects/fh-party-items/hooks/useSpoilers.tsx\",\n        lineNumber: 43,\n        columnNumber: 5\n    }, undefined);\n};\nconst useSpoilers = ()=>{\n    const { spoilers , setSpoilers  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(SpoilersContext);\n    const updateSpoilers = (newSpoilers)=>{\n        localStorage.setItem(\"spoilers\", JSON.stringify({\n            ...newSpoilers\n        }));\n        setSpoilers(newSpoilers);\n    };\n    return {\n        spoilers,\n        updateSpoilers\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ob29rcy91c2VTcG9pbGVycy50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUF1RTtBQUVoQjtBQU9oRCxNQUFNSywyQkFBMkIsR0FBYTtJQUNuREMsS0FBSyxFQUFFRiwwREFBcUI7Q0FDN0IsQ0FBQztBQUVGLE1BQU1HLGVBQWUsaUJBQUdQLG9EQUFhLENBQTJCO0lBQzlEUSxRQUFRLEVBQUVILDJCQUEyQjtJQUNyQ0ksV0FBVyxFQUFFLElBQU0sRUFBRztDQUN2QixDQUFDO0FBRUssTUFBTUMsZ0JBQWdCLEdBQUcsQ0FBQyxFQUFFQyxRQUFRLEdBQUUsR0FBSztJQUNoRCxNQUFNLEVBbkJSLEdBbUJTSCxTQUFRLEdBbkJqQixHQW1CbUJDLFdBQVcsTUFBSU4sK0NBQVEsQ0FDdENFLDJCQUEyQixDQUM1QjtJQUVESCxnREFBUyxDQUFDLElBQU07UUFDZCxNQUFNVSxlQUFlLEdBQUdDLFlBQVksQ0FBQ0MsT0FBTyxDQUFDLFVBQVUsQ0FBQztRQUN4RCxJQUFJLENBQUNGLGVBQWUsRUFBRTtZQUNwQkgsV0FBVyxDQUFDLENBQUNELFFBQVEsR0FBSyxDQUFDO29CQUFFLEdBQUdBLFFBQVE7b0JBQUVPLE9BQU8sRUFBRSxLQUFLO2lCQUFFLENBQUM7WUFBQSxDQUFDLENBQUM7WUFDN0QsT0FBTztTQUNSO1FBRUQsTUFBTUMsY0FBYyxHQUFHQyxJQUFJLENBQUNDLEtBQUssQ0FBQ04sZUFBZSxDQUFDO1FBQ2xELElBQUksQ0FBQ0ksY0FBYyxFQUFFO1lBQ25CSCxZQUFZLENBQUNNLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUNoQ1YsV0FBVyxDQUFDLENBQUNELFFBQVEsR0FBSyxDQUFDO29CQUFFLEdBQUdBLFFBQVE7b0JBQUVPLE9BQU8sRUFBRSxLQUFLO2lCQUFFLENBQUM7WUFBQSxDQUFDLENBQUM7WUFDN0QsT0FBTztTQUNSO1FBRURDLGNBQWMsQ0FBQ0ksVUFBVSxHQUFHLElBQUlDLEdBQUcsQ0FBQ0wsY0FBYyxFQUFFSSxVQUFVLENBQUMsQ0FBQztRQUNoRVgsV0FBVyxDQUFDO1lBQUUsR0FBR08sY0FBYztZQUFFRCxPQUFPLEVBQUUsS0FBSztTQUFFLENBQUMsQ0FBQztLQUNwRCxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBRVAscUJBQ0UsOERBQUNSLGVBQWUsQ0FBQ2UsUUFBUTtRQUFDQyxLQUFLLEVBQUU7WUFBRWYsUUFBUSxFQUFSQSxTQUFRO1lBQUVDLFdBQVcsRUFBRUEsV0FBVztTQUFFO2tCQUNwRUUsUUFBUTs7Ozs7aUJBQ2dCLENBQzNCO0NBQ0gsQ0FBQztBQUVLLE1BQU1hLFdBQVcsR0FBRyxJQUFNO0lBQy9CLE1BQU0sRUFBRWhCLFFBQVEsR0FBRUMsV0FBVyxHQUFFLEdBQUdSLGlEQUFVLENBQUNNLGVBQWUsQ0FBQztJQUU3RCxNQUFNa0IsY0FBYyxHQUFHLENBQUNDLFdBQXFCLEdBQUs7UUFDaERiLFlBQVksQ0FBQ2MsT0FBTyxDQUNsQixVQUFVLEVBQ1ZWLElBQUksQ0FBQ1csU0FBUyxDQUFDO1lBQ2IsR0FBR0YsV0FBVztTQUNmLENBQUMsQ0FDSCxDQUFDO1FBQ0ZqQixXQUFXLENBQUNpQixXQUFXLENBQUMsQ0FBQztLQUMxQjtJQUVELE9BQU87UUFBRWxCLFFBQVE7UUFBRWlCLGNBQWM7S0FBRSxDQUFDO0NBQ3JDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nbG9vbWhhdmVuLWNhcmQtYnJvd3Nlci8uL2hvb2tzL3VzZVNwb2lsZXJzLnRzeD85OWYyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFNwb2lsZXJzIH0gZnJvbSBcIi4uL2NvbW1vbi90eXBlc1wiO1xuaW1wb3J0IGRlZmF1bHRTcG9pbGVycyBmcm9tIFwiLi4vZGF0YS9pdGVtX3VubG9ja3MuanNvblwiXG5cbmludGVyZmFjZSBTcG9pbGVyc0NvbnRleHRJbnRlcmZhY2Uge1xuICBzcG9pbGVyczogU3BvaWxlcnM7XG4gIHNldFNwb2lsZXJzOiAoc2M6IFNwb2lsZXJzKSA9PiB2b2lkO1xufVxuXG5leHBvcnQgY29uc3QgZGVmYXVsdFNwb2lsZXJzQ29udGV4dFZhbHVlOiBTcG9pbGVycyA9IHtcbiAgaXRlbXM6IGRlZmF1bHRTcG9pbGVycy5pdGVtcyxcbn07XG5cbmNvbnN0IFNwb2lsZXJzQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8U3BvaWxlcnNDb250ZXh0SW50ZXJmYWNlPih7XG4gIHNwb2lsZXJzOiBkZWZhdWx0U3BvaWxlcnNDb250ZXh0VmFsdWUsXG4gIHNldFNwb2lsZXJzOiAoKSA9PiB7IH0sXG59KTtcblxuZXhwb3J0IGNvbnN0IFNwb2lsZXJzUHJvdmlkZXIgPSAoeyBjaGlsZHJlbiB9KSA9PiB7XG4gIGNvbnN0IFtzcG9pbGVycywgc2V0U3BvaWxlcnNdID0gdXNlU3RhdGU8U3BvaWxlcnM+KFxuICAgIGRlZmF1bHRTcG9pbGVyc0NvbnRleHRWYWx1ZVxuICApO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3Qgc3RvcmFnZVNwb2lsZXJzID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJzcG9pbGVyc1wiKTtcbiAgICBpZiAoIXN0b3JhZ2VTcG9pbGVycykge1xuICAgICAgc2V0U3BvaWxlcnMoKHNwb2lsZXJzKSA9PiAoeyAuLi5zcG9pbGVycywgbG9hZGluZzogZmFsc2UgfSkpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHBhcnNlZFNwb2lsZXJzID0gSlNPTi5wYXJzZShzdG9yYWdlU3BvaWxlcnMpO1xuICAgIGlmICghcGFyc2VkU3BvaWxlcnMpIHtcbiAgICAgIGxvY2FsU3RvcmFnZS5kZWxldGUoXCJzcG9pbGVyc1wiKTtcbiAgICAgIHNldFNwb2lsZXJzKChzcG9pbGVycykgPT4gKHsgLi4uc3BvaWxlcnMsIGxvYWRpbmc6IGZhbHNlIH0pKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBwYXJzZWRTcG9pbGVycy5jaGFyYWN0ZXJzID0gbmV3IFNldChwYXJzZWRTcG9pbGVycz8uY2hhcmFjdGVycyk7XG4gICAgc2V0U3BvaWxlcnMoeyAuLi5wYXJzZWRTcG9pbGVycywgbG9hZGluZzogZmFsc2UgfSk7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDxTcG9pbGVyc0NvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3sgc3BvaWxlcnMsIHNldFNwb2lsZXJzOiBzZXRTcG9pbGVycyB9fT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L1Nwb2lsZXJzQ29udGV4dC5Qcm92aWRlcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBjb25zdCB1c2VTcG9pbGVycyA9ICgpID0+IHtcbiAgY29uc3QgeyBzcG9pbGVycywgc2V0U3BvaWxlcnMgfSA9IHVzZUNvbnRleHQoU3BvaWxlcnNDb250ZXh0KTtcblxuICBjb25zdCB1cGRhdGVTcG9pbGVycyA9IChuZXdTcG9pbGVyczogU3BvaWxlcnMpID0+IHtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcbiAgICAgIFwic3BvaWxlcnNcIixcbiAgICAgIEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgLi4ubmV3U3BvaWxlcnMsXG4gICAgICB9KVxuICAgICk7XG4gICAgc2V0U3BvaWxlcnMobmV3U3BvaWxlcnMpO1xuICB9O1xuXG4gIHJldHVybiB7IHNwb2lsZXJzLCB1cGRhdGVTcG9pbGVycyB9O1xufTtcbiJdLCJuYW1lcyI6WyJjcmVhdGVDb250ZXh0IiwidXNlQ29udGV4dCIsInVzZUVmZmVjdCIsInVzZVN0YXRlIiwiZGVmYXVsdFNwb2lsZXJzIiwiZGVmYXVsdFNwb2lsZXJzQ29udGV4dFZhbHVlIiwiaXRlbXMiLCJTcG9pbGVyc0NvbnRleHQiLCJzcG9pbGVycyIsInNldFNwb2lsZXJzIiwiU3BvaWxlcnNQcm92aWRlciIsImNoaWxkcmVuIiwic3RvcmFnZVNwb2lsZXJzIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsImxvYWRpbmciLCJwYXJzZWRTcG9pbGVycyIsIkpTT04iLCJwYXJzZSIsImRlbGV0ZSIsImNoYXJhY3RlcnMiLCJTZXQiLCJQcm92aWRlciIsInZhbHVlIiwidXNlU3BvaWxlcnMiLCJ1cGRhdGVTcG9pbGVycyIsIm5ld1Nwb2lsZXJzIiwic2V0SXRlbSIsInN0cmluZ2lmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./hooks/useSpoilers.tsx\n");

/***/ }),

/***/ "./node_modules/next/dist/client/head-manager.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/client/head-manager.js ***!
  \*******************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = initHeadManager;\nexports.isEqualNode = isEqualNode;\nexports.DOMAttributeNames = void 0;\nfunction initHeadManager() {\n    let updatePromise = null;\n    return {\n        mountedInstances: new Set(),\n        updateHead: (head)=>{\n            const promise = updatePromise = Promise.resolve().then(()=>{\n                if (promise !== updatePromise) return;\n                updatePromise = null;\n                const tags = {};\n                head.forEach((h)=>{\n                    if (// it won't be inlined. In this case revert to the original behavior\n                    h.type === \"link\" && h.props[\"data-optimized-fonts\"]) {\n                        if (document.querySelector(`style[data-href=\"${h.props[\"data-href\"]}\"]`)) {\n                            return;\n                        } else {\n                            h.props.href = h.props[\"data-href\"];\n                            h.props[\"data-href\"] = undefined;\n                        }\n                    }\n                    const components = tags[h.type] || [];\n                    components.push(h);\n                    tags[h.type] = components;\n                });\n                const titleComponent = tags.title ? tags.title[0] : null;\n                let title = \"\";\n                if (titleComponent) {\n                    const { children  } = titleComponent.props;\n                    title = typeof children === \"string\" ? children : Array.isArray(children) ? children.join(\"\") : \"\";\n                }\n                if (title !== document.title) document.title = title;\n                [\n                    \"meta\",\n                    \"base\",\n                    \"link\",\n                    \"style\",\n                    \"script\"\n                ].forEach((type)=>{\n                    updateElements(type, tags[type] || []);\n                });\n            });\n        }\n    };\n}\nconst DOMAttributeNames = {\n    acceptCharset: \"accept-charset\",\n    className: \"class\",\n    htmlFor: \"for\",\n    httpEquiv: \"http-equiv\",\n    noModule: \"noModule\"\n};\nexports.DOMAttributeNames = DOMAttributeNames;\nfunction reactElementToDOM({ type , props  }) {\n    const el = document.createElement(type);\n    for(const p in props){\n        if (!props.hasOwnProperty(p)) continue;\n        if (p === \"children\" || p === \"dangerouslySetInnerHTML\") continue;\n        // we don't render undefined props to the DOM\n        if (props[p] === undefined) continue;\n        const attr = DOMAttributeNames[p] || p.toLowerCase();\n        if (type === \"script\" && (attr === \"async\" || attr === \"defer\" || attr === \"noModule\")) {\n            el[attr] = !!props[p];\n        } else {\n            el.setAttribute(attr, props[p]);\n        }\n    }\n    const { children , dangerouslySetInnerHTML  } = props;\n    if (dangerouslySetInnerHTML) {\n        el.innerHTML = dangerouslySetInnerHTML.__html || \"\";\n    } else if (children) {\n        el.textContent = typeof children === \"string\" ? children : Array.isArray(children) ? children.join(\"\") : \"\";\n    }\n    return el;\n}\nfunction isEqualNode(oldTag, newTag) {\n    if (oldTag instanceof HTMLElement && newTag instanceof HTMLElement) {\n        const nonce = newTag.getAttribute(\"nonce\");\n        // Only strip the nonce if `oldTag` has had it stripped. An element's nonce attribute will not\n        // be stripped if there is no content security policy response header that includes a nonce.\n        if (nonce && !oldTag.getAttribute(\"nonce\")) {\n            const cloneTag = newTag.cloneNode(true);\n            cloneTag.setAttribute(\"nonce\", \"\");\n            cloneTag.nonce = nonce;\n            return nonce === oldTag.nonce && oldTag.isEqualNode(cloneTag);\n        }\n    }\n    return oldTag.isEqualNode(newTag);\n}\nfunction updateElements(type, components) {\n    const headEl = document.getElementsByTagName(\"head\")[0];\n    const headCountEl = headEl.querySelector(\"meta[name=next-head-count]\");\n    if (true) {\n        if (!headCountEl) {\n            console.error(\"Warning: next-head-count is missing. https://nextjs.org/docs/messages/next-head-count-missing\");\n            return;\n        }\n    }\n    const headCount = Number(headCountEl.content);\n    const oldTags = [];\n    for(let i = 0, j = headCountEl.previousElementSibling; i < headCount; i++, j = (j === null || j === void 0 ? void 0 : j.previousElementSibling) || null){\n        var ref;\n        if ((j === null || j === void 0 ? void 0 : (ref = j.tagName) === null || ref === void 0 ? void 0 : ref.toLowerCase()) === type) {\n            oldTags.push(j);\n        }\n    }\n    const newTags = components.map(reactElementToDOM).filter((newTag)=>{\n        for(let k = 0, len = oldTags.length; k < len; k++){\n            const oldTag = oldTags[k];\n            if (isEqualNode(oldTag, newTag)) {\n                oldTags.splice(k, 1);\n                return false;\n            }\n        }\n        return true;\n    });\n    oldTags.forEach((t)=>{\n        var ref;\n        return (ref = t.parentNode) === null || ref === void 0 ? void 0 : ref.removeChild(t);\n    });\n    newTags.forEach((t)=>headEl.insertBefore(t, headCountEl)\n    );\n    headCountEl.content = (headCount - oldTags.length + newTags.length).toString();\n}\nif (typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) {\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=head-manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9oZWFkLW1hbmFnZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxLQUFLLEVBQUUsSUFBSTtDQUNkLEVBQUMsQ0FBQztBQUNIRCxrQkFBZSxHQUFHRyxlQUFlLENBQUM7QUFDbENILG1CQUFtQixHQUFHSSxXQUFXLENBQUM7QUFDbENKLHlCQUF5QixHQUFHLEtBQUssQ0FBQyxDQUFDO0FBQ25DLFNBQVNHLGVBQWUsR0FBRztJQUN2QixJQUFJRyxhQUFhLEdBQUcsSUFBSTtJQUN4QixPQUFPO1FBQ0hDLGdCQUFnQixFQUFFLElBQUlDLEdBQUcsRUFBRTtRQUMzQkMsVUFBVSxFQUFFLENBQUNDLElBQUksR0FBRztZQUNoQixNQUFNQyxPQUFPLEdBQUdMLGFBQWEsR0FBR00sT0FBTyxDQUFDQyxPQUFPLEVBQUUsQ0FBQ0MsSUFBSSxDQUFDLElBQUk7Z0JBQ3ZELElBQUlILE9BQU8sS0FBS0wsYUFBYSxFQUFFLE9BQU87Z0JBQ3RDQSxhQUFhLEdBQUcsSUFBSSxDQUFDO2dCQUNyQixNQUFNUyxJQUFJLEdBQUcsRUFBRTtnQkFDZkwsSUFBSSxDQUFDTSxPQUFPLENBQUMsQ0FBQ0MsQ0FBQyxHQUFHO29CQUNkLElBQ0Esb0VBQW9FO29CQUNwRUEsQ0FBQyxDQUFDQyxJQUFJLEtBQUssTUFBTSxJQUFJRCxDQUFDLENBQUNFLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxFQUFFO3dCQUNsRCxJQUFJQyxRQUFRLENBQUNDLGFBQWEsQ0FBQyxDQUFDLGlCQUFpQixFQUFFSixDQUFDLENBQUNFLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFOzRCQUN0RSxPQUFPO3lCQUNWLE1BQU07NEJBQ0hGLENBQUMsQ0FBQ0UsS0FBSyxDQUFDRyxJQUFJLEdBQUdMLENBQUMsQ0FBQ0UsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDOzRCQUNwQ0YsQ0FBQyxDQUFDRSxLQUFLLENBQUMsV0FBVyxDQUFDLEdBQUdJLFNBQVMsQ0FBQzt5QkFDcEM7cUJBQ0o7b0JBQ0QsTUFBTUMsVUFBVSxHQUFHVCxJQUFJLENBQUNFLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLElBQUksRUFBRTtvQkFDckNNLFVBQVUsQ0FBQ0MsSUFBSSxDQUFDUixDQUFDLENBQUMsQ0FBQztvQkFDbkJGLElBQUksQ0FBQ0UsQ0FBQyxDQUFDQyxJQUFJLENBQUMsR0FBR00sVUFBVSxDQUFDO2lCQUM3QixDQUFDLENBQUM7Z0JBQ0gsTUFBTUUsY0FBYyxHQUFHWCxJQUFJLENBQUNZLEtBQUssR0FBR1osSUFBSSxDQUFDWSxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSTtnQkFDeEQsSUFBSUEsS0FBSyxHQUFHLEVBQUU7Z0JBQ2QsSUFBSUQsY0FBYyxFQUFFO29CQUNoQixNQUFNLEVBQUVFLFFBQVEsR0FBRyxHQUFHRixjQUFjLENBQUNQLEtBQUs7b0JBQzFDUSxLQUFLLEdBQUcsT0FBT0MsUUFBUSxLQUFLLFFBQVEsR0FBR0EsUUFBUSxHQUFHQyxLQUFLLENBQUNDLE9BQU8sQ0FBQ0YsUUFBUSxDQUFDLEdBQUdBLFFBQVEsQ0FBQ0csSUFBSSxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQztpQkFDdEc7Z0JBQ0QsSUFBSUosS0FBSyxLQUFLUCxRQUFRLENBQUNPLEtBQUssRUFBRVAsUUFBUSxDQUFDTyxLQUFLLEdBQUdBLEtBQUssQ0FBQztnQkFDckQ7b0JBQ0ksTUFBTTtvQkFDTixNQUFNO29CQUNOLE1BQU07b0JBQ04sT0FBTztvQkFDUCxRQUFRO2lCQUNYLENBQUNYLE9BQU8sQ0FBQyxDQUFDRSxJQUFJLEdBQUc7b0JBQ2RjLGNBQWMsQ0FBQ2QsSUFBSSxFQUFFSCxJQUFJLENBQUNHLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO2lCQUMxQyxDQUFDLENBQUM7YUFDTixDQUFDO1NBQ0w7S0FDSixDQUFDO0NBQ0w7QUFDRCxNQUFNYixpQkFBaUIsR0FBRztJQUN0QjRCLGFBQWEsRUFBRSxnQkFBZ0I7SUFDL0JDLFNBQVMsRUFBRSxPQUFPO0lBQ2xCQyxPQUFPLEVBQUUsS0FBSztJQUNkQyxTQUFTLEVBQUUsWUFBWTtJQUN2QkMsUUFBUSxFQUFFLFVBQVU7Q0FDdkI7QUFDRHJDLHlCQUF5QixHQUFHSyxpQkFBaUIsQ0FBQztBQUM5QyxTQUFTaUMsaUJBQWlCLENBQUMsRUFBRXBCLElBQUksR0FBR0MsS0FBSyxHQUFHLEVBQUU7SUFDMUMsTUFBTW9CLEVBQUUsR0FBR25CLFFBQVEsQ0FBQ29CLGFBQWEsQ0FBQ3RCLElBQUksQ0FBQztJQUN2QyxJQUFJLE1BQU11QixDQUFDLElBQUl0QixLQUFLLENBQUM7UUFDakIsSUFBSSxDQUFDQSxLQUFLLENBQUN1QixjQUFjLENBQUNELENBQUMsQ0FBQyxFQUFFLFNBQVM7UUFDdkMsSUFBSUEsQ0FBQyxLQUFLLFVBQVUsSUFBSUEsQ0FBQyxLQUFLLHlCQUF5QixFQUFFLFNBQVM7UUFDbEUsNkNBQTZDO1FBQzdDLElBQUl0QixLQUFLLENBQUNzQixDQUFDLENBQUMsS0FBS2xCLFNBQVMsRUFBRSxTQUFTO1FBQ3JDLE1BQU1vQixJQUFJLEdBQUd0QyxpQkFBaUIsQ0FBQ29DLENBQUMsQ0FBQyxJQUFJQSxDQUFDLENBQUNHLFdBQVcsRUFBRTtRQUNwRCxJQUFJMUIsSUFBSSxLQUFLLFFBQVEsSUFBSSxDQUFDeUIsSUFBSSxLQUFLLE9BQU8sSUFBSUEsSUFBSSxLQUFLLE9BQU8sSUFBSUEsSUFBSSxLQUFLLFVBQVUsQ0FBQyxFQUFFO1lBQ3BGSixFQUFFLENBQUNJLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQ3hCLEtBQUssQ0FBQ3NCLENBQUMsQ0FBQyxDQUFDO1NBQ3pCLE1BQU07WUFDSEYsRUFBRSxDQUFDTSxZQUFZLENBQUNGLElBQUksRUFBRXhCLEtBQUssQ0FBQ3NCLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDbkM7S0FDSjtJQUNELE1BQU0sRUFBRWIsUUFBUSxHQUFHa0IsdUJBQXVCLEdBQUcsR0FBRzNCLEtBQUs7SUFDckQsSUFBSTJCLHVCQUF1QixFQUFFO1FBQ3pCUCxFQUFFLENBQUNRLFNBQVMsR0FBR0QsdUJBQXVCLENBQUNFLE1BQU0sSUFBSSxFQUFFLENBQUM7S0FDdkQsTUFBTSxJQUFJcEIsUUFBUSxFQUFFO1FBQ2pCVyxFQUFFLENBQUNVLFdBQVcsR0FBRyxPQUFPckIsUUFBUSxLQUFLLFFBQVEsR0FBR0EsUUFBUSxHQUFHQyxLQUFLLENBQUNDLE9BQU8sQ0FBQ0YsUUFBUSxDQUFDLEdBQUdBLFFBQVEsQ0FBQ0csSUFBSSxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQztLQUMvRztJQUNELE9BQU9RLEVBQUUsQ0FBQztDQUNiO0FBQ0QsU0FBU25DLFdBQVcsQ0FBQzhDLE1BQU0sRUFBRUMsTUFBTSxFQUFFO0lBQ2pDLElBQUlELE1BQU0sWUFBWUUsV0FBVyxJQUFJRCxNQUFNLFlBQVlDLFdBQVcsRUFBRTtRQUNoRSxNQUFNQyxLQUFLLEdBQUdGLE1BQU0sQ0FBQ0csWUFBWSxDQUFDLE9BQU8sQ0FBQztRQUMxQyw4RkFBOEY7UUFDOUYsNEZBQTRGO1FBQzVGLElBQUlELEtBQUssSUFBSSxDQUFDSCxNQUFNLENBQUNJLFlBQVksQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUN4QyxNQUFNQyxRQUFRLEdBQUdKLE1BQU0sQ0FBQ0ssU0FBUyxDQUFDLElBQUksQ0FBQztZQUN2Q0QsUUFBUSxDQUFDVixZQUFZLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBQ25DVSxRQUFRLENBQUNGLEtBQUssR0FBR0EsS0FBSyxDQUFDO1lBQ3ZCLE9BQU9BLEtBQUssS0FBS0gsTUFBTSxDQUFDRyxLQUFLLElBQUlILE1BQU0sQ0FBQzlDLFdBQVcsQ0FBQ21ELFFBQVEsQ0FBQyxDQUFDO1NBQ2pFO0tBQ0o7SUFDRCxPQUFPTCxNQUFNLENBQUM5QyxXQUFXLENBQUMrQyxNQUFNLENBQUMsQ0FBQztDQUNyQztBQUNELFNBQVNuQixjQUFjLENBQUNkLElBQUksRUFBRU0sVUFBVSxFQUFFO0lBQ3RDLE1BQU1pQyxNQUFNLEdBQUdyQyxRQUFRLENBQUNzQyxvQkFBb0IsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdkQsTUFBTUMsV0FBVyxHQUFHRixNQUFNLENBQUNwQyxhQUFhLENBQUMsNEJBQTRCLENBQUM7SUFDdEUsSUFBSXVDLElBQXFDLEVBQUU7UUFDdkMsSUFBSSxDQUFDRCxXQUFXLEVBQUU7WUFDZEUsT0FBTyxDQUFDQyxLQUFLLENBQUMsK0ZBQStGLENBQUMsQ0FBQztZQUMvRyxPQUFPO1NBQ1Y7S0FDSjtJQUNELE1BQU1DLFNBQVMsR0FBR0MsTUFBTSxDQUFDTCxXQUFXLENBQUNNLE9BQU8sQ0FBQztJQUM3QyxNQUFNQyxPQUFPLEdBQUcsRUFBRTtJQUNsQixJQUFJLElBQUlDLENBQUMsR0FBRyxDQUFDLEVBQUVDLENBQUMsR0FBR1QsV0FBVyxDQUFDVSxzQkFBc0IsRUFBRUYsQ0FBQyxHQUFHSixTQUFTLEVBQUVJLENBQUMsRUFBRSxFQUFFQyxDQUFDLEdBQUcsQ0FBQ0EsQ0FBQyxLQUFLLElBQUksSUFBSUEsQ0FBQyxLQUFLLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHQSxDQUFDLENBQUNDLHNCQUFzQixDQUFDLElBQUksSUFBSSxDQUFDO1FBQ3BKLElBQUlDLEdBQUc7UUFDUCxJQUFJLENBQUNGLENBQUMsS0FBSyxJQUFJLElBQUlBLENBQUMsS0FBSyxLQUFLLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDRSxHQUFHLEdBQUdGLENBQUMsQ0FBQ0csT0FBTyxDQUFDLEtBQUssSUFBSSxJQUFJRCxHQUFHLEtBQUssS0FBSyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUdBLEdBQUcsQ0FBQzFCLFdBQVcsRUFBRSxDQUFDLEtBQUsxQixJQUFJLEVBQUU7WUFDNUhnRCxPQUFPLENBQUN6QyxJQUFJLENBQUMyQyxDQUFDLENBQUMsQ0FBQztTQUNuQjtLQUNKO0lBQ0QsTUFBTUksT0FBTyxHQUFHaEQsVUFBVSxDQUFDaUQsR0FBRyxDQUFDbkMsaUJBQWlCLENBQUMsQ0FBQ29DLE1BQU0sQ0FBQyxDQUFDdkIsTUFBTSxHQUFHO1FBQy9ELElBQUksSUFBSXdCLENBQUMsR0FBRyxDQUFDLEVBQUVDLEdBQUcsR0FBR1YsT0FBTyxDQUFDVyxNQUFNLEVBQUVGLENBQUMsR0FBR0MsR0FBRyxFQUFFRCxDQUFDLEVBQUUsQ0FBQztZQUM5QyxNQUFNekIsTUFBTSxHQUFHZ0IsT0FBTyxDQUFDUyxDQUFDLENBQUM7WUFDekIsSUFBSXZFLFdBQVcsQ0FBQzhDLE1BQU0sRUFBRUMsTUFBTSxDQUFDLEVBQUU7Z0JBQzdCZSxPQUFPLENBQUNZLE1BQU0sQ0FBQ0gsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUNyQixPQUFPLEtBQUssQ0FBQzthQUNoQjtTQUNKO1FBQ0QsT0FBTyxJQUFJLENBQUM7S0FDZixDQUFDO0lBQ0ZULE9BQU8sQ0FBQ2xELE9BQU8sQ0FBQyxDQUFDK0QsQ0FBQyxHQUFHO1FBQ2pCLElBQUlULEdBQUc7UUFDUCxPQUFPLENBQUNBLEdBQUcsR0FBR1MsQ0FBQyxDQUFDQyxVQUFVLENBQUMsS0FBSyxJQUFJLElBQUlWLEdBQUcsS0FBSyxLQUFLLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBR0EsR0FBRyxDQUFDVyxXQUFXLENBQUNGLENBQUMsQ0FBQyxDQUFDO0tBQ3hGLENBQUMsQ0FBQztJQUNIUCxPQUFPLENBQUN4RCxPQUFPLENBQUMsQ0FBQytELENBQUMsR0FBR3RCLE1BQU0sQ0FBQ3lCLFlBQVksQ0FBQ0gsQ0FBQyxFQUFFcEIsV0FBVyxDQUFDO0lBQUEsQ0FDdkQsQ0FBQztJQUNGQSxXQUFXLENBQUNNLE9BQU8sR0FBRyxDQUFDRixTQUFTLEdBQUdHLE9BQU8sQ0FBQ1csTUFBTSxHQUFHTCxPQUFPLENBQUNLLE1BQU0sQ0FBQyxDQUFDTSxRQUFRLEVBQUUsQ0FBQztDQUNsRjtBQUVELElBQUksT0FBT25GLE9BQU8sQ0FBQ0UsT0FBTyxLQUFLLFVBQVUsSUFBSyxPQUFPRixPQUFPLENBQUNFLE9BQU8sS0FBSyxRQUFRLElBQUlGLE9BQU8sQ0FBQ0UsT0FBTyxLQUFLLElBQUksRUFBRztJQUM5R0osTUFBTSxDQUFDc0YsTUFBTSxDQUFDcEYsT0FBTyxDQUFDRSxPQUFPLEVBQUVGLE9BQU8sQ0FBQyxDQUFDO0lBQ3hDcUYsTUFBTSxDQUFDckYsT0FBTyxHQUFHQSxPQUFPLENBQUNFLE9BQU8sQ0FBQztDQUNsQyxDQUVELHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL2dsb29taGF2ZW4tY2FyZC1icm93c2VyLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvaGVhZC1tYW5hZ2VyLmpzP2NhNGEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBpbml0SGVhZE1hbmFnZXI7XG5leHBvcnRzLmlzRXF1YWxOb2RlID0gaXNFcXVhbE5vZGU7XG5leHBvcnRzLkRPTUF0dHJpYnV0ZU5hbWVzID0gdm9pZCAwO1xuZnVuY3Rpb24gaW5pdEhlYWRNYW5hZ2VyKCkge1xuICAgIGxldCB1cGRhdGVQcm9taXNlID0gbnVsbDtcbiAgICByZXR1cm4ge1xuICAgICAgICBtb3VudGVkSW5zdGFuY2VzOiBuZXcgU2V0KCksXG4gICAgICAgIHVwZGF0ZUhlYWQ6IChoZWFkKT0+e1xuICAgICAgICAgICAgY29uc3QgcHJvbWlzZSA9IHVwZGF0ZVByb21pc2UgPSBQcm9taXNlLnJlc29sdmUoKS50aGVuKCgpPT57XG4gICAgICAgICAgICAgICAgaWYgKHByb21pc2UgIT09IHVwZGF0ZVByb21pc2UpIHJldHVybjtcbiAgICAgICAgICAgICAgICB1cGRhdGVQcm9taXNlID0gbnVsbDtcbiAgICAgICAgICAgICAgICBjb25zdCB0YWdzID0ge307XG4gICAgICAgICAgICAgICAgaGVhZC5mb3JFYWNoKChoKT0+e1xuICAgICAgICAgICAgICAgICAgICBpZiAoLy8gSWYgdGhlIGZvbnQgdGFnIGlzIGxvYWRlZCBvbmx5IG9uIGNsaWVudCBuYXZpZ2F0aW9uXG4gICAgICAgICAgICAgICAgICAgIC8vIGl0IHdvbid0IGJlIGlubGluZWQuIEluIHRoaXMgY2FzZSByZXZlcnQgdG8gdGhlIG9yaWdpbmFsIGJlaGF2aW9yXG4gICAgICAgICAgICAgICAgICAgIGgudHlwZSA9PT0gJ2xpbmsnICYmIGgucHJvcHNbJ2RhdGEtb3B0aW1pemVkLWZvbnRzJ10pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBzdHlsZVtkYXRhLWhyZWY9XCIke2gucHJvcHNbJ2RhdGEtaHJlZiddfVwiXWApKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoLnByb3BzLmhyZWYgPSBoLnByb3BzWydkYXRhLWhyZWYnXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoLnByb3BzWydkYXRhLWhyZWYnXSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjb25zdCBjb21wb25lbnRzID0gdGFnc1toLnR5cGVdIHx8IFtdO1xuICAgICAgICAgICAgICAgICAgICBjb21wb25lbnRzLnB1c2goaCk7XG4gICAgICAgICAgICAgICAgICAgIHRhZ3NbaC50eXBlXSA9IGNvbXBvbmVudHM7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgY29uc3QgdGl0bGVDb21wb25lbnQgPSB0YWdzLnRpdGxlID8gdGFncy50aXRsZVswXSA6IG51bGw7XG4gICAgICAgICAgICAgICAgbGV0IHRpdGxlID0gJyc7XG4gICAgICAgICAgICAgICAgaWYgKHRpdGxlQ29tcG9uZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgY2hpbGRyZW4gIH0gPSB0aXRsZUNvbXBvbmVudC5wcm9wcztcbiAgICAgICAgICAgICAgICAgICAgdGl0bGUgPSB0eXBlb2YgY2hpbGRyZW4gPT09ICdzdHJpbmcnID8gY2hpbGRyZW4gOiBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuLmpvaW4oJycpIDogJyc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0aXRsZSAhPT0gZG9jdW1lbnQudGl0bGUpIGRvY3VtZW50LnRpdGxlID0gdGl0bGU7XG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAnbWV0YScsXG4gICAgICAgICAgICAgICAgICAgICdiYXNlJyxcbiAgICAgICAgICAgICAgICAgICAgJ2xpbmsnLFxuICAgICAgICAgICAgICAgICAgICAnc3R5bGUnLFxuICAgICAgICAgICAgICAgICAgICAnc2NyaXB0J1xuICAgICAgICAgICAgICAgIF0uZm9yRWFjaCgodHlwZSk9PntcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlRWxlbWVudHModHlwZSwgdGFnc1t0eXBlXSB8fCBbXSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH07XG59XG5jb25zdCBET01BdHRyaWJ1dGVOYW1lcyA9IHtcbiAgICBhY2NlcHRDaGFyc2V0OiAnYWNjZXB0LWNoYXJzZXQnLFxuICAgIGNsYXNzTmFtZTogJ2NsYXNzJyxcbiAgICBodG1sRm9yOiAnZm9yJyxcbiAgICBodHRwRXF1aXY6ICdodHRwLWVxdWl2JyxcbiAgICBub01vZHVsZTogJ25vTW9kdWxlJ1xufTtcbmV4cG9ydHMuRE9NQXR0cmlidXRlTmFtZXMgPSBET01BdHRyaWJ1dGVOYW1lcztcbmZ1bmN0aW9uIHJlYWN0RWxlbWVudFRvRE9NKHsgdHlwZSAsIHByb3BzICB9KSB7XG4gICAgY29uc3QgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHR5cGUpO1xuICAgIGZvcihjb25zdCBwIGluIHByb3BzKXtcbiAgICAgICAgaWYgKCFwcm9wcy5oYXNPd25Qcm9wZXJ0eShwKSkgY29udGludWU7XG4gICAgICAgIGlmIChwID09PSAnY2hpbGRyZW4nIHx8IHAgPT09ICdkYW5nZXJvdXNseVNldElubmVySFRNTCcpIGNvbnRpbnVlO1xuICAgICAgICAvLyB3ZSBkb24ndCByZW5kZXIgdW5kZWZpbmVkIHByb3BzIHRvIHRoZSBET01cbiAgICAgICAgaWYgKHByb3BzW3BdID09PSB1bmRlZmluZWQpIGNvbnRpbnVlO1xuICAgICAgICBjb25zdCBhdHRyID0gRE9NQXR0cmlidXRlTmFtZXNbcF0gfHwgcC50b0xvd2VyQ2FzZSgpO1xuICAgICAgICBpZiAodHlwZSA9PT0gJ3NjcmlwdCcgJiYgKGF0dHIgPT09ICdhc3luYycgfHwgYXR0ciA9PT0gJ2RlZmVyJyB8fCBhdHRyID09PSAnbm9Nb2R1bGUnKSkge1xuICAgICAgICAgICAgZWxbYXR0cl0gPSAhIXByb3BzW3BdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZWwuc2V0QXR0cmlidXRlKGF0dHIsIHByb3BzW3BdKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCB7IGNoaWxkcmVuICwgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgIH0gPSBwcm9wcztcbiAgICBpZiAoZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpIHtcbiAgICAgICAgZWwuaW5uZXJIVE1MID0gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sIHx8ICcnO1xuICAgIH0gZWxzZSBpZiAoY2hpbGRyZW4pIHtcbiAgICAgICAgZWwudGV4dENvbnRlbnQgPSB0eXBlb2YgY2hpbGRyZW4gPT09ICdzdHJpbmcnID8gY2hpbGRyZW4gOiBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuLmpvaW4oJycpIDogJyc7XG4gICAgfVxuICAgIHJldHVybiBlbDtcbn1cbmZ1bmN0aW9uIGlzRXF1YWxOb2RlKG9sZFRhZywgbmV3VGFnKSB7XG4gICAgaWYgKG9sZFRhZyBpbnN0YW5jZW9mIEhUTUxFbGVtZW50ICYmIG5ld1RhZyBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSB7XG4gICAgICAgIGNvbnN0IG5vbmNlID0gbmV3VGFnLmdldEF0dHJpYnV0ZSgnbm9uY2UnKTtcbiAgICAgICAgLy8gT25seSBzdHJpcCB0aGUgbm9uY2UgaWYgYG9sZFRhZ2AgaGFzIGhhZCBpdCBzdHJpcHBlZC4gQW4gZWxlbWVudCdzIG5vbmNlIGF0dHJpYnV0ZSB3aWxsIG5vdFxuICAgICAgICAvLyBiZSBzdHJpcHBlZCBpZiB0aGVyZSBpcyBubyBjb250ZW50IHNlY3VyaXR5IHBvbGljeSByZXNwb25zZSBoZWFkZXIgdGhhdCBpbmNsdWRlcyBhIG5vbmNlLlxuICAgICAgICBpZiAobm9uY2UgJiYgIW9sZFRhZy5nZXRBdHRyaWJ1dGUoJ25vbmNlJykpIHtcbiAgICAgICAgICAgIGNvbnN0IGNsb25lVGFnID0gbmV3VGFnLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgICAgIGNsb25lVGFnLnNldEF0dHJpYnV0ZSgnbm9uY2UnLCAnJyk7XG4gICAgICAgICAgICBjbG9uZVRhZy5ub25jZSA9IG5vbmNlO1xuICAgICAgICAgICAgcmV0dXJuIG5vbmNlID09PSBvbGRUYWcubm9uY2UgJiYgb2xkVGFnLmlzRXF1YWxOb2RlKGNsb25lVGFnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gb2xkVGFnLmlzRXF1YWxOb2RlKG5ld1RhZyk7XG59XG5mdW5jdGlvbiB1cGRhdGVFbGVtZW50cyh0eXBlLCBjb21wb25lbnRzKSB7XG4gICAgY29uc3QgaGVhZEVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXTtcbiAgICBjb25zdCBoZWFkQ291bnRFbCA9IGhlYWRFbC5xdWVyeVNlbGVjdG9yKCdtZXRhW25hbWU9bmV4dC1oZWFkLWNvdW50XScpO1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGlmICghaGVhZENvdW50RWwpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1dhcm5pbmc6IG5leHQtaGVhZC1jb3VudCBpcyBtaXNzaW5nLiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9uZXh0LWhlYWQtY291bnQtbWlzc2luZycpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGhlYWRDb3VudCA9IE51bWJlcihoZWFkQ291bnRFbC5jb250ZW50KTtcbiAgICBjb25zdCBvbGRUYWdzID0gW107XG4gICAgZm9yKGxldCBpID0gMCwgaiA9IGhlYWRDb3VudEVsLnByZXZpb3VzRWxlbWVudFNpYmxpbmc7IGkgPCBoZWFkQ291bnQ7IGkrKywgaiA9IChqID09PSBudWxsIHx8IGogPT09IHZvaWQgMCA/IHZvaWQgMCA6IGoucHJldmlvdXNFbGVtZW50U2libGluZykgfHwgbnVsbCl7XG4gICAgICAgIHZhciByZWY7XG4gICAgICAgIGlmICgoaiA9PT0gbnVsbCB8fCBqID09PSB2b2lkIDAgPyB2b2lkIDAgOiAocmVmID0gai50YWdOYW1lKSA9PT0gbnVsbCB8fCByZWYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHJlZi50b0xvd2VyQ2FzZSgpKSA9PT0gdHlwZSkge1xuICAgICAgICAgICAgb2xkVGFncy5wdXNoKGopO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IG5ld1RhZ3MgPSBjb21wb25lbnRzLm1hcChyZWFjdEVsZW1lbnRUb0RPTSkuZmlsdGVyKChuZXdUYWcpPT57XG4gICAgICAgIGZvcihsZXQgayA9IDAsIGxlbiA9IG9sZFRhZ3MubGVuZ3RoOyBrIDwgbGVuOyBrKyspe1xuICAgICAgICAgICAgY29uc3Qgb2xkVGFnID0gb2xkVGFnc1trXTtcbiAgICAgICAgICAgIGlmIChpc0VxdWFsTm9kZShvbGRUYWcsIG5ld1RhZykpIHtcbiAgICAgICAgICAgICAgICBvbGRUYWdzLnNwbGljZShrLCAxKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSk7XG4gICAgb2xkVGFncy5mb3JFYWNoKCh0KT0+e1xuICAgICAgICB2YXIgcmVmO1xuICAgICAgICByZXR1cm4gKHJlZiA9IHQucGFyZW50Tm9kZSkgPT09IG51bGwgfHwgcmVmID09PSB2b2lkIDAgPyB2b2lkIDAgOiByZWYucmVtb3ZlQ2hpbGQodCk7XG4gICAgfSk7XG4gICAgbmV3VGFncy5mb3JFYWNoKCh0KT0+aGVhZEVsLmluc2VydEJlZm9yZSh0LCBoZWFkQ291bnRFbClcbiAgICApO1xuICAgIGhlYWRDb3VudEVsLmNvbnRlbnQgPSAoaGVhZENvdW50IC0gb2xkVGFncy5sZW5ndGggKyBuZXdUYWdzLmxlbmd0aCkudG9TdHJpbmcoKTtcbn1cblxuaWYgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpIHtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVhZC1tYW5hZ2VyLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJpbml0SGVhZE1hbmFnZXIiLCJpc0VxdWFsTm9kZSIsIkRPTUF0dHJpYnV0ZU5hbWVzIiwidXBkYXRlUHJvbWlzZSIsIm1vdW50ZWRJbnN0YW5jZXMiLCJTZXQiLCJ1cGRhdGVIZWFkIiwiaGVhZCIsInByb21pc2UiLCJQcm9taXNlIiwicmVzb2x2ZSIsInRoZW4iLCJ0YWdzIiwiZm9yRWFjaCIsImgiLCJ0eXBlIiwicHJvcHMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJocmVmIiwidW5kZWZpbmVkIiwiY29tcG9uZW50cyIsInB1c2giLCJ0aXRsZUNvbXBvbmVudCIsInRpdGxlIiwiY2hpbGRyZW4iLCJBcnJheSIsImlzQXJyYXkiLCJqb2luIiwidXBkYXRlRWxlbWVudHMiLCJhY2NlcHRDaGFyc2V0IiwiY2xhc3NOYW1lIiwiaHRtbEZvciIsImh0dHBFcXVpdiIsIm5vTW9kdWxlIiwicmVhY3RFbGVtZW50VG9ET00iLCJlbCIsImNyZWF0ZUVsZW1lbnQiLCJwIiwiaGFzT3duUHJvcGVydHkiLCJhdHRyIiwidG9Mb3dlckNhc2UiLCJzZXRBdHRyaWJ1dGUiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsImlubmVySFRNTCIsIl9faHRtbCIsInRleHRDb250ZW50Iiwib2xkVGFnIiwibmV3VGFnIiwiSFRNTEVsZW1lbnQiLCJub25jZSIsImdldEF0dHJpYnV0ZSIsImNsb25lVGFnIiwiY2xvbmVOb2RlIiwiaGVhZEVsIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJoZWFkQ291bnRFbCIsInByb2Nlc3MiLCJjb25zb2xlIiwiZXJyb3IiLCJoZWFkQ291bnQiLCJOdW1iZXIiLCJjb250ZW50Iiwib2xkVGFncyIsImkiLCJqIiwicHJldmlvdXNFbGVtZW50U2libGluZyIsInJlZiIsInRhZ05hbWUiLCJuZXdUYWdzIiwibWFwIiwiZmlsdGVyIiwiayIsImxlbiIsImxlbmd0aCIsInNwbGljZSIsInQiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJpbnNlcnRCZWZvcmUiLCJ0b1N0cmluZyIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/head-manager.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/link.js":
/*!***********************************************!*\
  !*** ./node_modules/next/dist/client/link.js ***!
  \***********************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"react\"));\nvar _router = __webpack_require__(/*! ../shared/lib/router/router */ \"./node_modules/next/dist/shared/lib/router/router.js\");\nvar _router1 = __webpack_require__(/*! ./router */ \"./node_modules/next/dist/client/router.js\");\nvar _useIntersection = __webpack_require__(/*! ./use-intersection */ \"./node_modules/next/dist/client/use-intersection.js\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nconst prefetched = {};\nfunction prefetch(router, href, as, options) {\n    if (true) return;\n    if (!(0, _router).isLocalURL(href)) return;\n    // Prefetch the JSON page if asked (only in the client)\n    // We need to handle a prefetch error here since we may be\n    // loading with priority which can reject but we don't\n    // want to force navigation since this is only a prefetch\n    router.prefetch(href, as, options).catch((err)=>{\n        if (true) {\n            // rethrow to show invalid URL errors\n            throw err;\n        }\n    });\n    const curLocale = options && typeof options.locale !== \"undefined\" ? options.locale : router && router.locale;\n    // Join on an invalid URI character\n    prefetched[href + \"%\" + as + (curLocale ? \"%\" + curLocale : \"\")] = true;\n}\nfunction isModifiedEvent(event) {\n    const { target  } = event.currentTarget;\n    return target && target !== \"_self\" || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || event.nativeEvent && event.nativeEvent.which === 2;\n}\nfunction linkClicked(e, router, href, as, replace, shallow, scroll, locale) {\n    const { nodeName  } = e.currentTarget;\n    // anchors inside an svg have a lowercase nodeName\n    const isAnchorNodeName = nodeName.toUpperCase() === \"A\";\n    if (isAnchorNodeName && (isModifiedEvent(e) || !(0, _router).isLocalURL(href))) {\n        // ignore click for browser’s default behavior\n        return;\n    }\n    e.preventDefault();\n    // replace state instead of push if prop is present\n    router[replace ? \"replace\" : \"push\"](href, as, {\n        shallow,\n        locale,\n        scroll\n    });\n}\nconst Link = /*#__PURE__*/ _react.default.forwardRef((props, forwardedRef)=>{\n    const { legacyBehavior =Boolean(false) !== true ,  } = props;\n    if (true) {\n        function createPropError(args) {\n            return new Error(`Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` + ( false ? 0 : \"\"));\n        }\n        // TypeScript trick for type-guarding:\n        const requiredPropsGuard = {\n            href: true\n        };\n        const requiredProps = Object.keys(requiredPropsGuard);\n        requiredProps.forEach((key)=>{\n            if (key === \"href\") {\n                if (props[key] == null || typeof props[key] !== \"string\" && typeof props[key] !== \"object\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string` or `object`\",\n                        actual: props[key] === null ? \"null\" : typeof props[key]\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // TypeScript trick for type-guarding:\n        const optionalPropsGuard = {\n            as: true,\n            replace: true,\n            scroll: true,\n            shallow: true,\n            passHref: true,\n            prefetch: true,\n            locale: true,\n            onClick: true,\n            onMouseEnter: true,\n            legacyBehavior: true\n        };\n        const optionalProps = Object.keys(optionalPropsGuard);\n        optionalProps.forEach((key)=>{\n            const valType = typeof props[key];\n            if (key === \"as\") {\n                if (props[key] && valType !== \"string\" && valType !== \"object\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string` or `object`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"locale\") {\n                if (props[key] && valType !== \"string\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"onClick\" || key === \"onMouseEnter\") {\n                if (props[key] && valType !== \"function\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`function`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"replace\" || key === \"scroll\" || key === \"shallow\" || key === \"passHref\" || key === \"prefetch\" || key === \"legacyBehavior\") {\n                if (props[key] != null && valType !== \"boolean\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`boolean`\",\n                        actual: valType\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const hasWarned = _react.default.useRef(false);\n        if (props.prefetch && !hasWarned.current) {\n            hasWarned.current = true;\n            console.warn(\"Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://nextjs.org/docs/messages/prefetch-true-deprecated\");\n        }\n    }\n    let children;\n    const { href: hrefProp , as: asProp , children: childrenProp , prefetch: prefetchProp , passHref , replace , shallow , scroll , locale , onClick , onMouseEnter  } = props, restProps = _objectWithoutProperties(props, [\n        \"href\",\n        \"as\",\n        \"children\",\n        \"prefetch\",\n        \"passHref\",\n        \"replace\",\n        \"shallow\",\n        \"scroll\",\n        \"locale\",\n        \"onClick\",\n        \"onMouseEnter\"\n    ]);\n    children = childrenProp;\n    if (legacyBehavior && typeof children === \"string\") {\n        children = /*#__PURE__*/ _react.default.createElement(\"a\", null, children);\n    }\n    const p = prefetchProp !== false;\n    const router = (0, _router1).useRouter();\n    const { href , as  } = _react.default.useMemo(()=>{\n        const [resolvedHref, resolvedAs] = (0, _router).resolveHref(router, hrefProp, true);\n        return {\n            href: resolvedHref,\n            as: asProp ? (0, _router).resolveHref(router, asProp) : resolvedAs || resolvedHref\n        };\n    }, [\n        router,\n        hrefProp,\n        asProp\n    ]);\n    const previousHref = _react.default.useRef(href);\n    const previousAs = _react.default.useRef(as);\n    // This will return the first child, if multiple are provided it will throw an error\n    let child;\n    if (legacyBehavior) {\n        if (true) {\n            if (onClick) {\n                console.warn(`\"onClick\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link`);\n            }\n            if (onMouseEnter) {\n                console.warn(`\"onMouseEnter\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link`);\n            }\n            try {\n                child = _react.default.Children.only(children);\n            } catch (err) {\n                if (!children) {\n                    throw new Error(`No children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but one child is required https://nextjs.org/docs/messages/link-no-children`);\n                }\n                throw new Error(`Multiple children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` + ( false ? 0 : \"\"));\n            }\n        } else {}\n    }\n    const childRef = legacyBehavior ? child && typeof child === \"object\" && child.ref : forwardedRef;\n    const [setIntersectionRef, isVisible, resetVisible] = (0, _useIntersection).useIntersection({\n        rootMargin: \"200px\"\n    });\n    const setRef = _react.default.useCallback((el)=>{\n        // Before the link getting observed, check if visible state need to be reset\n        if (previousAs.current !== as || previousHref.current !== href) {\n            resetVisible();\n            previousAs.current = as;\n            previousHref.current = href;\n        }\n        setIntersectionRef(el);\n        if (childRef) {\n            if (typeof childRef === \"function\") childRef(el);\n            else if (typeof childRef === \"object\") {\n                childRef.current = el;\n            }\n        }\n    }, [\n        as,\n        childRef,\n        href,\n        resetVisible,\n        setIntersectionRef\n    ]);\n    _react.default.useEffect(()=>{\n        const shouldPrefetch = isVisible && p && (0, _router).isLocalURL(href);\n        const curLocale = typeof locale !== \"undefined\" ? locale : router && router.locale;\n        const isPrefetched = prefetched[href + \"%\" + as + (curLocale ? \"%\" + curLocale : \"\")];\n        if (shouldPrefetch && !isPrefetched) {\n            prefetch(router, href, as, {\n                locale: curLocale\n            });\n        }\n    }, [\n        as,\n        href,\n        isVisible,\n        locale,\n        p,\n        router\n    ]);\n    const childProps = {\n        ref: setRef,\n        onClick: (e)=>{\n            if (true) {\n                if (!e) {\n                    throw new Error(`Component rendered inside next/link has to pass click event to \"onClick\" prop.`);\n                }\n            }\n            if (!legacyBehavior && typeof onClick === \"function\") {\n                onClick(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onClick === \"function\") {\n                child.props.onClick(e);\n            }\n            if (!e.defaultPrevented) {\n                linkClicked(e, router, href, as, replace, shallow, scroll, locale);\n            }\n        },\n        onMouseEnter: (e)=>{\n            if (!legacyBehavior && typeof onMouseEnter === \"function\") {\n                onMouseEnter(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onMouseEnter === \"function\") {\n                child.props.onMouseEnter(e);\n            }\n            if ((0, _router).isLocalURL(href)) {\n                prefetch(router, href, as, {\n                    priority: true\n                });\n            }\n        }\n    };\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user\n    if (!legacyBehavior || passHref || child.type === \"a\" && !(\"href\" in child.props)) {\n        const curLocale = typeof locale !== \"undefined\" ? locale : router && router.locale;\n        // we only render domain locales if we are currently on a domain locale\n        // so that locale links are still visitable in development/preview envs\n        const localeDomain = router && router.isLocaleDomain && (0, _router).getDomainLocale(as, curLocale, router && router.locales, router && router.domainLocales);\n        childProps.href = localeDomain || (0, _router).addBasePath((0, _router).addLocale(as, curLocale, router && router.defaultLocale));\n    }\n    return legacyBehavior ? /*#__PURE__*/ _react.default.cloneElement(child, childProps) : /*#__PURE__*/ _react.default.createElement(\"a\", Object.assign({}, restProps, childProps), children);\n});\nvar _default = Link;\nexports[\"default\"] = _default;\nif (typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) {\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=link.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/link.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/normalize-trailing-slash.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/client/normalize-trailing-slash.js ***!
  \*******************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.removePathTrailingSlash = removePathTrailingSlash;\nexports.normalizePathTrailingSlash = void 0;\nfunction removePathTrailingSlash(path) {\n    return path.endsWith(\"/\") && path !== \"/\" ? path.slice(0, -1) : path;\n}\nconst normalizePathTrailingSlash =  false ? 0 : removePathTrailingSlash;\nexports.normalizePathTrailingSlash = normalizePathTrailingSlash;\nif (typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) {\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=normalize-trailing-slash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2guanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxLQUFLLEVBQUUsSUFBSTtDQUNkLEVBQUMsQ0FBQztBQUNIRCwrQkFBK0IsR0FBR0UsdUJBQXVCLENBQUM7QUFDMURGLGtDQUFrQyxHQUFHLEtBQUssQ0FBQyxDQUFDO0FBQzVDLFNBQVNFLHVCQUF1QixDQUFDRSxJQUFJLEVBQUU7SUFDbkMsT0FBT0EsSUFBSSxDQUFDQyxRQUFRLENBQUMsR0FBRyxDQUFDLElBQUlELElBQUksS0FBSyxHQUFHLEdBQUdBLElBQUksQ0FBQ0UsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHRixJQUFJLENBQUM7Q0FDeEU7QUFDRCxNQUFNRCwwQkFBMEIsR0FBR0ksTUFBaUMsR0FBRyxDQVF0RSxHQUFHTCx1QkFBdUI7QUFDM0JGLGtDQUFrQyxHQUFHRywwQkFBMEIsQ0FBQztBQUVoRSxJQUFJLE9BQU9ILE9BQU8sQ0FBQ1csT0FBTyxLQUFLLFVBQVUsSUFBSyxPQUFPWCxPQUFPLENBQUNXLE9BQU8sS0FBSyxRQUFRLElBQUlYLE9BQU8sQ0FBQ1csT0FBTyxLQUFLLElBQUksRUFBRztJQUM5R2IsTUFBTSxDQUFDYyxNQUFNLENBQUNaLE9BQU8sQ0FBQ1csT0FBTyxFQUFFWCxPQUFPLENBQUMsQ0FBQztJQUN4Q2EsTUFBTSxDQUFDYixPQUFPLEdBQUdBLE9BQU8sQ0FBQ1csT0FBTyxDQUFDO0NBQ2xDLENBRUQsb0RBQW9EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ2xvb21oYXZlbi1jYXJkLWJyb3dzZXIvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2guanM/NGMyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMucmVtb3ZlUGF0aFRyYWlsaW5nU2xhc2ggPSByZW1vdmVQYXRoVHJhaWxpbmdTbGFzaDtcbmV4cG9ydHMubm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2ggPSB2b2lkIDA7XG5mdW5jdGlvbiByZW1vdmVQYXRoVHJhaWxpbmdTbGFzaChwYXRoKSB7XG4gICAgcmV0dXJuIHBhdGguZW5kc1dpdGgoJy8nKSAmJiBwYXRoICE9PSAnLycgPyBwYXRoLnNsaWNlKDAsIC0xKSA6IHBhdGg7XG59XG5jb25zdCBub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCA9IHByb2Nlc3MuZW52Ll9fTkVYVF9UUkFJTElOR19TTEFTSCA/IChwYXRoKT0+e1xuICAgIGlmICgvXFwuW14vXStcXC8/JC8udGVzdChwYXRoKSkge1xuICAgICAgICByZXR1cm4gcmVtb3ZlUGF0aFRyYWlsaW5nU2xhc2gocGF0aCk7XG4gICAgfSBlbHNlIGlmIChwYXRoLmVuZHNXaXRoKCcvJykpIHtcbiAgICAgICAgcmV0dXJuIHBhdGg7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHBhdGggKyAnLyc7XG4gICAgfVxufSA6IHJlbW92ZVBhdGhUcmFpbGluZ1NsYXNoO1xuZXhwb3J0cy5ub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCA9IG5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoO1xuXG5pZiAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkge1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub3JtYWxpemUtdHJhaWxpbmctc2xhc2guanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwicmVtb3ZlUGF0aFRyYWlsaW5nU2xhc2giLCJub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCIsInBhdGgiLCJlbmRzV2l0aCIsInNsaWNlIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9UUkFJTElOR19TTEFTSCIsInRlc3QiLCJkZWZhdWx0IiwiYXNzaWduIiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/normalize-trailing-slash.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/request-idle-callback.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/client/request-idle-callback.js ***!
  \****************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.cancelIdleCallback = exports.requestIdleCallback = void 0;\nconst requestIdleCallback = typeof self !== \"undefined\" && self.requestIdleCallback && self.requestIdleCallback.bind(window) || function(cb) {\n    let start = Date.now();\n    return setTimeout(function() {\n        cb({\n            didTimeout: false,\n            timeRemaining: function() {\n                return Math.max(0, 50 - (Date.now() - start));\n            }\n        });\n    }, 1);\n};\nexports.requestIdleCallback = requestIdleCallback;\nconst cancelIdleCallback = typeof self !== \"undefined\" && self.cancelIdleCallback && self.cancelIdleCallback.bind(window) || function(id) {\n    return clearTimeout(id);\n};\nexports.cancelIdleCallback = cancelIdleCallback;\nif (typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) {\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=request-idle-callback.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9yZXF1ZXN0LWlkbGUtY2FsbGJhY2suanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxLQUFLLEVBQUUsSUFBSTtDQUNkLEVBQUMsQ0FBQztBQUNIRCwwQkFBMEIsR0FBR0EsMkJBQTJCLEdBQUcsS0FBSyxDQUFDLENBQUM7QUFDbEUsTUFBTUcsbUJBQW1CLEdBQUcsT0FBT0MsSUFBSSxLQUFLLFdBQVcsSUFBSUEsSUFBSSxDQUFDRCxtQkFBbUIsSUFBSUMsSUFBSSxDQUFDRCxtQkFBbUIsQ0FBQ0UsSUFBSSxDQUFDQyxNQUFNLENBQUMsSUFBSSxTQUFTQyxFQUFFLEVBQUU7SUFDekksSUFBSUMsS0FBSyxHQUFHQyxJQUFJLENBQUNDLEdBQUcsRUFBRTtJQUN0QixPQUFPQyxVQUFVLENBQUMsV0FBVztRQUN6QkosRUFBRSxDQUFDO1lBQ0NLLFVBQVUsRUFBRSxLQUFLO1lBQ2pCQyxhQUFhLEVBQUUsV0FBVztnQkFDdEIsT0FBT0MsSUFBSSxDQUFDQyxHQUFHLENBQUMsQ0FBQyxFQUFFLEVBQUUsR0FBRyxDQUFDTixJQUFJLENBQUNDLEdBQUcsRUFBRSxHQUFHRixLQUFLLENBQUMsQ0FBQyxDQUFDO2FBQ2pEO1NBQ0osQ0FBQyxDQUFDO0tBQ04sRUFBRSxDQUFDLENBQUMsQ0FBQztDQUNUO0FBQ0RSLDJCQUEyQixHQUFHRyxtQkFBbUIsQ0FBQztBQUNsRCxNQUFNRCxrQkFBa0IsR0FBRyxPQUFPRSxJQUFJLEtBQUssV0FBVyxJQUFJQSxJQUFJLENBQUNGLGtCQUFrQixJQUFJRSxJQUFJLENBQUNGLGtCQUFrQixDQUFDRyxJQUFJLENBQUNDLE1BQU0sQ0FBQyxJQUFJLFNBQVNVLEVBQUUsRUFBRTtJQUN0SSxPQUFPQyxZQUFZLENBQUNELEVBQUUsQ0FBQyxDQUFDO0NBQzNCO0FBQ0RoQiwwQkFBMEIsR0FBR0Usa0JBQWtCLENBQUM7QUFFaEQsSUFBSSxPQUFPRixPQUFPLENBQUNrQixPQUFPLEtBQUssVUFBVSxJQUFLLE9BQU9sQixPQUFPLENBQUNrQixPQUFPLEtBQUssUUFBUSxJQUFJbEIsT0FBTyxDQUFDa0IsT0FBTyxLQUFLLElBQUksRUFBRztJQUM5R3BCLE1BQU0sQ0FBQ3FCLE1BQU0sQ0FBQ25CLE9BQU8sQ0FBQ2tCLE9BQU8sRUFBRWxCLE9BQU8sQ0FBQyxDQUFDO0lBQ3hDb0IsTUFBTSxDQUFDcEIsT0FBTyxHQUFHQSxPQUFPLENBQUNrQixPQUFPLENBQUM7Q0FDbEMsQ0FFRCxpREFBaUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nbG9vbWhhdmVuLWNhcmQtYnJvd3Nlci8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L3JlcXVlc3QtaWRsZS1jYWxsYmFjay5qcz8xZTIwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5jYW5jZWxJZGxlQ2FsbGJhY2sgPSBleHBvcnRzLnJlcXVlc3RJZGxlQ2FsbGJhY2sgPSB2b2lkIDA7XG5jb25zdCByZXF1ZXN0SWRsZUNhbGxiYWNrID0gdHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnICYmIHNlbGYucmVxdWVzdElkbGVDYWxsYmFjayAmJiBzZWxmLnJlcXVlc3RJZGxlQ2FsbGJhY2suYmluZCh3aW5kb3cpIHx8IGZ1bmN0aW9uKGNiKSB7XG4gICAgbGV0IHN0YXJ0ID0gRGF0ZS5ub3coKTtcbiAgICByZXR1cm4gc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgY2Ioe1xuICAgICAgICAgICAgZGlkVGltZW91dDogZmFsc2UsXG4gICAgICAgICAgICB0aW1lUmVtYWluaW5nOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gTWF0aC5tYXgoMCwgNTAgLSAoRGF0ZS5ub3coKSAtIHN0YXJ0KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0sIDEpO1xufTtcbmV4cG9ydHMucmVxdWVzdElkbGVDYWxsYmFjayA9IHJlcXVlc3RJZGxlQ2FsbGJhY2s7XG5jb25zdCBjYW5jZWxJZGxlQ2FsbGJhY2sgPSB0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcgJiYgc2VsZi5jYW5jZWxJZGxlQ2FsbGJhY2sgJiYgc2VsZi5jYW5jZWxJZGxlQ2FsbGJhY2suYmluZCh3aW5kb3cpIHx8IGZ1bmN0aW9uKGlkKSB7XG4gICAgcmV0dXJuIGNsZWFyVGltZW91dChpZCk7XG59O1xuZXhwb3J0cy5jYW5jZWxJZGxlQ2FsbGJhY2sgPSBjYW5jZWxJZGxlQ2FsbGJhY2s7XG5cbmlmICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSB7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlcXVlc3QtaWRsZS1jYWxsYmFjay5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJjYW5jZWxJZGxlQ2FsbGJhY2siLCJyZXF1ZXN0SWRsZUNhbGxiYWNrIiwic2VsZiIsImJpbmQiLCJ3aW5kb3ciLCJjYiIsInN0YXJ0IiwiRGF0ZSIsIm5vdyIsInNldFRpbWVvdXQiLCJkaWRUaW1lb3V0IiwidGltZVJlbWFpbmluZyIsIk1hdGgiLCJtYXgiLCJpZCIsImNsZWFyVGltZW91dCIsImRlZmF1bHQiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/request-idle-callback.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/route-loader.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/client/route-loader.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.markAssetError = markAssetError;\nexports.isAssetError = isAssetError;\nexports.getClientBuildManifest = getClientBuildManifest;\nexports.getMiddlewareManifest = getMiddlewareManifest;\nexports.createRouteLoader = createRouteLoader;\nvar _getAssetPathFromRoute = _interopRequireDefault(__webpack_require__(/*! ../shared/lib/router/utils/get-asset-path-from-route */ \"../shared/lib/router/utils/get-asset-path-from-route\"));\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n// 3.8s was arbitrarily chosen as it's what https://web.dev/interactive\n// considers as \"Good\" time-to-interactive. We must assume something went\n// wrong beyond this point, and then fall-back to a full page transition to\n// show the user something of value.\nconst MS_MAX_IDLE_DELAY = 3800;\nfunction withFuture(key, map, generator) {\n    let entry = map.get(key);\n    if (entry) {\n        if (\"future\" in entry) {\n            return entry.future;\n        }\n        return Promise.resolve(entry);\n    }\n    let resolver;\n    const prom = new Promise((resolve)=>{\n        resolver = resolve;\n    });\n    map.set(key, entry = {\n        resolve: resolver,\n        future: prom\n    });\n    return generator ? generator() // eslint-disable-next-line no-sequences\n    .then((value)=>(resolver(value), value)\n    ).catch((err)=>{\n        map.delete(key);\n        throw err;\n    }) : prom;\n}\nfunction hasPrefetch(link) {\n    try {\n        link = document.createElement(\"link\");\n        return(// with relList.support\n        (!!window.MSInputMethodContext && !!document.documentMode) || link.relList.supports(\"prefetch\"));\n    } catch (e) {\n        return false;\n    }\n}\nconst canPrefetch = hasPrefetch();\nfunction prefetchViaDom(href, as, link) {\n    return new Promise((res, rej)=>{\n        const selector = `\n      link[rel=\"prefetch\"][href^=\"${href}\"],\n      link[rel=\"preload\"][href^=\"${href}\"],\n      script[src^=\"${href}\"]`;\n        if (document.querySelector(selector)) {\n            return res();\n        }\n        link = document.createElement(\"link\");\n        // The order of property assignment here is intentional:\n        if (as) link.as = as;\n        link.rel = `prefetch`;\n        link.crossOrigin = undefined;\n        link.onload = res;\n        link.onerror = rej;\n        // `href` should always be last:\n        link.href = href;\n        document.head.appendChild(link);\n    });\n}\nconst ASSET_LOAD_ERROR = Symbol(\"ASSET_LOAD_ERROR\");\nfunction markAssetError(err) {\n    return Object.defineProperty(err, ASSET_LOAD_ERROR, {});\n}\nfunction isAssetError(err) {\n    return err && ASSET_LOAD_ERROR in err;\n}\nfunction appendScript(src, script) {\n    return new Promise((resolve, reject)=>{\n        script = document.createElement(\"script\");\n        // The order of property assignment here is intentional.\n        // 1. Setup success/failure hooks in case the browser synchronously\n        //    executes when `src` is set.\n        script.onload = resolve;\n        script.onerror = ()=>reject(markAssetError(new Error(`Failed to load script: ${src}`)))\n        ;\n        // 2. Configure the cross-origin attribute before setting `src` in case the\n        //    browser begins to fetch.\n        script.crossOrigin = undefined;\n        // 3. Finally, set the source and inject into the DOM in case the child\n        //    must be appended for fetching to start.\n        script.src = src;\n        document.body.appendChild(script);\n    });\n}\n// We wait for pages to be built in dev before we start the route transition\n// timeout to prevent an un-necessary hard navigation in development.\nlet devBuildPromise;\n// Resolve a promise that times out after given amount of milliseconds.\nfunction resolvePromiseWithTimeout(p, ms, err) {\n    return new Promise((resolve, reject)=>{\n        let cancelled = false;\n        p.then((r)=>{\n            // Resolved, cancel the timeout\n            cancelled = true;\n            resolve(r);\n        }).catch(reject);\n        // We wrap these checks separately for better dead-code elimination in\n        // production bundles.\n        if (true) {\n            (devBuildPromise || Promise.resolve()).then(()=>{\n                (0, _requestIdleCallback).requestIdleCallback(()=>setTimeout(()=>{\n                        if (!cancelled) {\n                            reject(err);\n                        }\n                    }, ms)\n                );\n            });\n        }\n        if (false) {}\n    });\n}\nfunction getClientBuildManifest() {\n    if (self.__BUILD_MANIFEST) {\n        return Promise.resolve(self.__BUILD_MANIFEST);\n    }\n    const onBuildManifest = new Promise((resolve)=>{\n        // Mandatory because this is not concurrent safe:\n        const cb = self.__BUILD_MANIFEST_CB;\n        self.__BUILD_MANIFEST_CB = ()=>{\n            resolve(self.__BUILD_MANIFEST);\n            cb && cb();\n        };\n    });\n    return resolvePromiseWithTimeout(onBuildManifest, MS_MAX_IDLE_DELAY, markAssetError(new Error(\"Failed to load client build manifest\")));\n}\nfunction getMiddlewareManifest() {\n    if (self.__MIDDLEWARE_MANIFEST) {\n        return Promise.resolve(self.__MIDDLEWARE_MANIFEST);\n    }\n    const onMiddlewareManifest = new Promise((resolve)=>{\n        const cb = self.__MIDDLEWARE_MANIFEST_CB;\n        self.__MIDDLEWARE_MANIFEST_CB = ()=>{\n            resolve(self.__MIDDLEWARE_MANIFEST);\n            cb && cb();\n        };\n    });\n    return resolvePromiseWithTimeout(onMiddlewareManifest, MS_MAX_IDLE_DELAY, markAssetError(new Error(\"Failed to load client middleware manifest\")));\n}\nfunction getFilesForRoute(assetPrefix, route) {\n    if (true) {\n        return Promise.resolve({\n            scripts: [\n                assetPrefix + \"/_next/static/chunks/pages\" + encodeURI((0, _getAssetPathFromRoute).default(route, \".js\")), \n            ],\n            // Styles are handled by `style-loader` in development:\n            css: []\n        });\n    }\n    return getClientBuildManifest().then((manifest)=>{\n        if (!(route in manifest)) {\n            throw markAssetError(new Error(`Failed to lookup route: ${route}`));\n        }\n        const allFiles = manifest[route].map((entry)=>assetPrefix + \"/_next/\" + encodeURI(entry)\n        );\n        return {\n            scripts: allFiles.filter((v)=>v.endsWith(\".js\")\n            ),\n            css: allFiles.filter((v)=>v.endsWith(\".css\")\n            )\n        };\n    });\n}\nfunction createRouteLoader(assetPrefix) {\n    const entrypoints = new Map();\n    const loadedScripts = new Map();\n    const styleSheets = new Map();\n    const routes = new Map();\n    function maybeExecuteScript(src) {\n        // With HMR we might need to \"reload\" scripts when they are\n        // disposed and readded. Executing scripts twice has no functional\n        // differences\n        if (false) {} else {\n            return appendScript(src);\n        }\n    }\n    function fetchStyleSheet(href) {\n        let prom = styleSheets.get(href);\n        if (prom) {\n            return prom;\n        }\n        styleSheets.set(href, prom = fetch(href).then((res)=>{\n            if (!res.ok) {\n                throw new Error(`Failed to load stylesheet: ${href}`);\n            }\n            return res.text().then((text)=>({\n                    href: href,\n                    content: text\n                })\n            );\n        }).catch((err)=>{\n            throw markAssetError(err);\n        }));\n        return prom;\n    }\n    return {\n        whenEntrypoint (route) {\n            return withFuture(route, entrypoints);\n        },\n        onEntrypoint (route, execute) {\n            (execute ? Promise.resolve().then(()=>execute()\n            ).then((exports)=>({\n                    component: exports && exports.default || exports,\n                    exports: exports\n                })\n            , (err)=>({\n                    error: err\n                })\n            ) : Promise.resolve(undefined)).then((input)=>{\n                const old = entrypoints.get(route);\n                if (old && \"resolve\" in old) {\n                    if (input) {\n                        entrypoints.set(route, input);\n                        old.resolve(input);\n                    }\n                } else {\n                    if (input) {\n                        entrypoints.set(route, input);\n                    } else {\n                        entrypoints.delete(route);\n                    }\n                    // when this entrypoint has been resolved before\n                    // the route is outdated and we want to invalidate\n                    // this cache entry\n                    routes.delete(route);\n                }\n            });\n        },\n        loadRoute (route, prefetch) {\n            return withFuture(route, routes, ()=>{\n                let devBuildPromiseResolve;\n                if (true) {\n                    devBuildPromise = new Promise((resolve)=>{\n                        devBuildPromiseResolve = resolve;\n                    });\n                }\n                return resolvePromiseWithTimeout(getFilesForRoute(assetPrefix, route).then(({ scripts , css  })=>{\n                    return Promise.all([\n                        entrypoints.has(route) ? [] : Promise.all(scripts.map(maybeExecuteScript)),\n                        Promise.all(css.map(fetchStyleSheet)), \n                    ]);\n                }).then((res)=>{\n                    return this.whenEntrypoint(route).then((entrypoint)=>({\n                            entrypoint,\n                            styles: res[1]\n                        })\n                    );\n                }), MS_MAX_IDLE_DELAY, markAssetError(new Error(`Route did not complete loading: ${route}`))).then(({ entrypoint , styles  })=>{\n                    const res = Object.assign({\n                        styles: styles\n                    }, entrypoint);\n                    return \"error\" in entrypoint ? entrypoint : res;\n                }).catch((err)=>{\n                    if (prefetch) {\n                        // we don't want to cache errors during prefetch\n                        throw err;\n                    }\n                    return {\n                        error: err\n                    };\n                }).finally(()=>{\n                    return devBuildPromiseResolve === null || devBuildPromiseResolve === void 0 ? void 0 : devBuildPromiseResolve();\n                });\n            });\n        },\n        prefetch (route) {\n            // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118\n            // License: Apache 2.0\n            let cn;\n            if (cn = navigator.connection) {\n                // Don't prefetch if using 2G or if Save-Data is enabled.\n                if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve();\n            }\n            return getFilesForRoute(assetPrefix, route).then((output)=>Promise.all(canPrefetch ? output.scripts.map((script)=>prefetchViaDom(script, \"script\")\n                ) : [])\n            ).then(()=>{\n                (0, _requestIdleCallback).requestIdleCallback(()=>this.loadRoute(route, true).catch(()=>{})\n                );\n            }).catch(()=>{});\n        }\n    };\n}\nif (typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) {\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=route-loader.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/route-loader.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/router.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/client/router.js ***!
  \*************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"Router\", ({\n    enumerable: true,\n    get: function() {\n        return _router.default;\n    }\n}));\nObject.defineProperty(exports, \"withRouter\", ({\n    enumerable: true,\n    get: function() {\n        return _withRouter.default;\n    }\n}));\nexports.useRouter = useRouter;\nexports.createRouter = createRouter;\nexports.makePublicRouterInstance = makePublicRouterInstance;\nexports[\"default\"] = void 0;\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"react\"));\nvar _router = _interopRequireDefault(__webpack_require__(/*! ../shared/lib/router/router */ \"./node_modules/next/dist/shared/lib/router/router.js\"));\nvar _routerContext = __webpack_require__(/*! ../shared/lib/router-context */ \"../shared/lib/router-context\");\nvar _isError = _interopRequireDefault(__webpack_require__(/*! ../lib/is-error */ \"./node_modules/next/dist/lib/is-error.js\"));\nvar _withRouter = _interopRequireDefault(__webpack_require__(/*! ./with-router */ \"./node_modules/next/dist/client/with-router.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst singletonRouter = {\n    router: null,\n    readyCallbacks: [],\n    ready (cb) {\n        if (this.router) return cb();\n        if (false) {}\n    }\n};\n// Create public properties and methods of the router in the singletonRouter\nconst urlPropertyFields = [\n    \"pathname\",\n    \"route\",\n    \"query\",\n    \"asPath\",\n    \"components\",\n    \"isFallback\",\n    \"basePath\",\n    \"locale\",\n    \"locales\",\n    \"defaultLocale\",\n    \"isReady\",\n    \"isPreview\",\n    \"isLocaleDomain\",\n    \"domainLocales\", \n];\nconst routerEvents = [\n    \"routeChangeStart\",\n    \"beforeHistoryChange\",\n    \"routeChangeComplete\",\n    \"routeChangeError\",\n    \"hashChangeStart\",\n    \"hashChangeComplete\", \n];\nconst coreMethodFields = [\n    \"push\",\n    \"replace\",\n    \"reload\",\n    \"back\",\n    \"prefetch\",\n    \"beforePopState\", \n];\n// Events is a static property on the router, the router doesn't have to be initialized to use it\nObject.defineProperty(singletonRouter, \"events\", {\n    get () {\n        return _router.default.events;\n    }\n});\nurlPropertyFields.forEach((field)=>{\n    // Here we need to use Object.defineProperty because we need to return\n    // the property assigned to the actual router\n    // The value might get changed as we change routes and this is the\n    // proper way to access it\n    Object.defineProperty(singletonRouter, field, {\n        get () {\n            const router = getRouter();\n            return router[field];\n        }\n    });\n});\ncoreMethodFields.forEach((field)=>{\n    singletonRouter[field] = (...args)=>{\n        const router = getRouter();\n        return router[field](...args);\n    };\n});\nrouterEvents.forEach((event)=>{\n    singletonRouter.ready(()=>{\n        _router.default.events.on(event, (...args)=>{\n            const eventField = `on${event.charAt(0).toUpperCase()}${event.substring(1)}`;\n            const _singletonRouter = singletonRouter;\n            if (_singletonRouter[eventField]) {\n                try {\n                    _singletonRouter[eventField](...args);\n                } catch (err) {\n                    console.error(`Error when running the Router event: ${eventField}`);\n                    console.error((0, _isError).default(err) ? `${err.message}\\n${err.stack}` : err + \"\");\n                }\n            }\n        });\n    });\n});\nfunction getRouter() {\n    if (!singletonRouter.router) {\n        const message = \"No router instance found.\\n\" + 'You should only use \"next/router\" on the client side of your app.\\n';\n        throw new Error(message);\n    }\n    return singletonRouter.router;\n}\nvar _default = singletonRouter;\nexports[\"default\"] = _default;\nfunction useRouter() {\n    return _react.default.useContext(_routerContext.RouterContext);\n}\nfunction createRouter(...args) {\n    singletonRouter.router = new _router.default(...args);\n    singletonRouter.readyCallbacks.forEach((cb)=>cb()\n    );\n    singletonRouter.readyCallbacks = [];\n    return singletonRouter.router;\n}\nfunction makePublicRouterInstance(router) {\n    const scopedRouter = router;\n    const instance = {};\n    for (const property of urlPropertyFields){\n        if (typeof scopedRouter[property] === \"object\") {\n            instance[property] = Object.assign(Array.isArray(scopedRouter[property]) ? [] : {}, scopedRouter[property]) // makes sure query is not stateful\n            ;\n            continue;\n        }\n        instance[property] = scopedRouter[property];\n    }\n    // Events is a static property on the router, the router doesn't have to be initialized to use it\n    instance.events = _router.default.events;\n    coreMethodFields.forEach((field)=>{\n        instance[field] = (...args)=>{\n            return scopedRouter[field](...args);\n        };\n    });\n    return instance;\n}\nif (typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) {\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/router.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/script.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/client/script.js ***!
  \*************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.handleClientScriptLoad = handleClientScriptLoad;\nexports.initScriptLoader = initScriptLoader;\nexports[\"default\"] = void 0;\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"react\"));\nvar _headManagerContext = __webpack_require__(/*! ../shared/lib/head-manager-context */ \"../shared/lib/head-manager-context\");\nvar _headManager = __webpack_require__(/*! ./head-manager */ \"./node_modules/next/dist/client/head-manager.js\");\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    } else {\n        var newObj = {};\n        if (obj != null) {\n            for(var key in obj){\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n                    if (desc.get || desc.set) {\n                        Object.defineProperty(newObj, key, desc);\n                    } else {\n                        newObj[key] = obj[key];\n                    }\n                }\n            }\n        }\n        newObj.default = obj;\n        return newObj;\n    }\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nconst ScriptCache = new Map();\nconst LoadCache = new Set();\nconst ignoreProps = [\n    \"onLoad\",\n    \"dangerouslySetInnerHTML\",\n    \"children\",\n    \"onError\",\n    \"strategy\", \n];\nconst loadScript = (props)=>{\n    const { src , id , onLoad =()=>{} , dangerouslySetInnerHTML , children =\"\" , strategy =\"afterInteractive\" , onError ,  } = props;\n    const cacheKey = id || src;\n    // Script has already loaded\n    if (cacheKey && LoadCache.has(cacheKey)) {\n        return;\n    }\n    // Contents of this script are already loading/loaded\n    if (ScriptCache.has(src)) {\n        LoadCache.add(cacheKey);\n        // Execute onLoad since the script loading has begun\n        ScriptCache.get(src).then(onLoad, onError);\n        return;\n    }\n    const el = document.createElement(\"script\");\n    const loadPromise = new Promise((resolve, reject)=>{\n        el.addEventListener(\"load\", function(e) {\n            resolve();\n            if (onLoad) {\n                onLoad.call(this, e);\n            }\n        });\n        el.addEventListener(\"error\", function(e) {\n            reject(e);\n        });\n    }).catch(function(e) {\n        if (onError) {\n            onError(e);\n        }\n    });\n    if (src) {\n        ScriptCache.set(src, loadPromise);\n    }\n    LoadCache.add(cacheKey);\n    if (dangerouslySetInnerHTML) {\n        el.innerHTML = dangerouslySetInnerHTML.__html || \"\";\n    } else if (children) {\n        el.textContent = typeof children === \"string\" ? children : Array.isArray(children) ? children.join(\"\") : \"\";\n    } else if (src) {\n        el.src = src;\n    }\n    for (const [k, value] of Object.entries(props)){\n        if (value === undefined || ignoreProps.includes(k)) {\n            continue;\n        }\n        const attr = _headManager.DOMAttributeNames[k] || k.toLowerCase();\n        el.setAttribute(attr, value);\n    }\n    if (strategy === \"worker\") {\n        el.setAttribute(\"type\", \"text/partytown\");\n    }\n    el.setAttribute(\"data-nscript\", strategy);\n    document.body.appendChild(el);\n};\nfunction handleClientScriptLoad(props) {\n    const { strategy =\"afterInteractive\"  } = props;\n    if (strategy === \"lazyOnload\") {\n        window.addEventListener(\"load\", ()=>{\n            (0, _requestIdleCallback).requestIdleCallback(()=>loadScript(props)\n            );\n        });\n    } else {\n        loadScript(props);\n    }\n}\nfunction loadLazyScript(props) {\n    if (document.readyState === \"complete\") {\n        (0, _requestIdleCallback).requestIdleCallback(()=>loadScript(props)\n        );\n    } else {\n        window.addEventListener(\"load\", ()=>{\n            (0, _requestIdleCallback).requestIdleCallback(()=>loadScript(props)\n            );\n        });\n    }\n}\nfunction addBeforeInteractiveToCache() {\n    const scripts = [\n        ...document.querySelectorAll('[data-nscript=\"beforeInteractive\"]'),\n        ...document.querySelectorAll('[data-nscript=\"beforePageRender\"]'), \n    ];\n    scripts.forEach((script)=>{\n        const cacheKey = script.id || script.getAttribute(\"src\");\n        LoadCache.add(cacheKey);\n    });\n}\nfunction initScriptLoader(scriptLoaderItems) {\n    scriptLoaderItems.forEach(handleClientScriptLoad);\n    addBeforeInteractiveToCache();\n}\nfunction Script(props) {\n    const { src =\"\" , onLoad =()=>{} , strategy =\"afterInteractive\" , onError  } = props, restProps = _objectWithoutProperties(props, [\n        \"src\",\n        \"onLoad\",\n        \"strategy\",\n        \"onError\"\n    ]);\n    // Context is available only during SSR\n    const { updateScripts , scripts , getIsSsr  } = (0, _react).useContext(_headManagerContext.HeadManagerContext);\n    (0, _react).useEffect(()=>{\n        if (strategy === \"afterInteractive\") {\n            loadScript(props);\n        } else if (strategy === \"lazyOnload\") {\n            loadLazyScript(props);\n        }\n    }, [\n        props,\n        strategy\n    ]);\n    if (strategy === \"beforeInteractive\" || strategy === \"worker\") {\n        if (updateScripts) {\n            scripts[strategy] = (scripts[strategy] || []).concat([\n                _objectSpread({\n                    src,\n                    onLoad,\n                    onError\n                }, restProps), \n            ]);\n            updateScripts(scripts);\n        } else if (getIsSsr && getIsSsr()) {\n            // Script has already loaded during SSR\n            LoadCache.add(restProps.id || src);\n        } else if (getIsSsr && !getIsSsr()) {\n            loadScript(props);\n        }\n    }\n    return null;\n}\nvar _default = Script;\nexports[\"default\"] = _default;\nif (typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) {\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=script.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/script.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/use-intersection.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/client/use-intersection.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.useIntersection = useIntersection;\nvar _react = __webpack_require__(/*! react */ \"react\");\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\nconst hasIntersectionObserver = typeof IntersectionObserver !== \"undefined\";\nfunction useIntersection({ rootRef , rootMargin , disabled  }) {\n    const isDisabled = disabled || !hasIntersectionObserver;\n    const unobserve = (0, _react).useRef();\n    const [visible, setVisible] = (0, _react).useState(false);\n    const [root, setRoot] = (0, _react).useState(rootRef ? rootRef.current : null);\n    const setRef = (0, _react).useCallback((el)=>{\n        if (unobserve.current) {\n            unobserve.current();\n            unobserve.current = undefined;\n        }\n        if (isDisabled || visible) return;\n        if (el && el.tagName) {\n            unobserve.current = observe(el, (isVisible)=>isVisible && setVisible(isVisible)\n            , {\n                root,\n                rootMargin\n            });\n        }\n    }, [\n        isDisabled,\n        root,\n        rootMargin,\n        visible\n    ]);\n    const resetVisible = (0, _react).useCallback(()=>{\n        setVisible(false);\n    }, []);\n    (0, _react).useEffect(()=>{\n        if (!hasIntersectionObserver) {\n            if (!visible) {\n                const idleCallback = (0, _requestIdleCallback).requestIdleCallback(()=>setVisible(true)\n                );\n                return ()=>(0, _requestIdleCallback).cancelIdleCallback(idleCallback)\n                ;\n            }\n        }\n    }, [\n        visible\n    ]);\n    (0, _react).useEffect(()=>{\n        if (rootRef) setRoot(rootRef.current);\n    }, [\n        rootRef\n    ]);\n    return [\n        setRef,\n        visible,\n        resetVisible\n    ];\n}\nfunction observe(element, callback, options) {\n    const { id , observer , elements  } = createObserver(options);\n    elements.set(element, callback);\n    observer.observe(element);\n    return function unobserve() {\n        elements.delete(element);\n        observer.unobserve(element);\n        // Destroy observer when there's nothing left to watch:\n        if (elements.size === 0) {\n            observer.disconnect();\n            observers.delete(id);\n            let index = idList.findIndex((obj)=>obj.root === id.root && obj.margin === id.margin\n            );\n            if (index > -1) {\n                idList.splice(index, 1);\n            }\n        }\n    };\n}\nconst observers = new Map();\nconst idList = [];\nfunction createObserver(options) {\n    const id = {\n        root: options.root || null,\n        margin: options.rootMargin || \"\"\n    };\n    let existing = idList.find((obj)=>obj.root === id.root && obj.margin === id.margin\n    );\n    let instance;\n    if (existing) {\n        instance = observers.get(existing);\n    } else {\n        instance = observers.get(id);\n        idList.push(id);\n    }\n    if (instance) {\n        return instance;\n    }\n    const elements = new Map();\n    const observer = new IntersectionObserver((entries)=>{\n        entries.forEach((entry)=>{\n            const callback = elements.get(entry.target);\n            const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;\n            if (callback && isVisible) {\n                callback(isVisible);\n            }\n        });\n    }, options);\n    observers.set(id, instance = {\n        id,\n        observer,\n        elements\n    });\n    return instance;\n}\nif (typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) {\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=use-intersection.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/use-intersection.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/with-router.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/client/with-router.js ***!
  \******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = withRouter;\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"react\"));\nvar _router = __webpack_require__(/*! ./router */ \"./node_modules/next/dist/client/router.js\");\nfunction withRouter(ComposedComponent) {\n    function WithRouterWrapper(props) {\n        return /*#__PURE__*/ _react.default.createElement(ComposedComponent, Object.assign({\n            router: (0, _router).useRouter()\n        }, props));\n    }\n    WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps;\n    WithRouterWrapper.origGetInitialProps = ComposedComponent.origGetInitialProps;\n    if (true) {\n        const name = ComposedComponent.displayName || ComposedComponent.name || \"Unknown\";\n        WithRouterWrapper.displayName = `withRouter(${name})`;\n    }\n    return WithRouterWrapper;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nif (typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) {\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=with-router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC93aXRoLXJvdXRlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLEtBQUssRUFBRSxJQUFJO0NBQ2QsRUFBQyxDQUFDO0FBQ0hELGtCQUFlLEdBQUdHLFVBQVUsQ0FBQztBQUM3QixJQUFJQyxNQUFNLEdBQUdDLHNCQUFzQixDQUFDQyxtQkFBTyxDQUFDLG9CQUFPLENBQUMsQ0FBQztBQUNyRCxJQUFJQyxPQUFPLEdBQUdELG1CQUFPLENBQUMsMkRBQVUsQ0FBQztBQUNqQyxTQUFTSCxVQUFVLENBQUNLLGlCQUFpQixFQUFFO0lBQ25DLFNBQVNDLGlCQUFpQixDQUFDQyxLQUFLLEVBQUU7UUFDOUIsT0FBTyxhQUFhLENBQUNOLE1BQU0sQ0FBQ0YsT0FBTyxDQUFDUyxhQUFhLENBQUNILGlCQUFpQixFQUFFVixNQUFNLENBQUNjLE1BQU0sQ0FBQztZQUMvRUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxFQUFFTixPQUFPLENBQUMsQ0FBQ08sU0FBUyxFQUFFO1NBQ25DLEVBQUVKLEtBQUssQ0FBQyxDQUFDLENBQUU7S0FDZjtJQUNERCxpQkFBaUIsQ0FBQ00sZUFBZSxHQUFHUCxpQkFBaUIsQ0FBQ08sZUFBZSxDQUFDO0lBQ3RFTixpQkFBaUIsQ0FBQ08sbUJBQW1CLEdBQUdSLGlCQUFpQixDQUFDUSxtQkFBbUIsQ0FBQztJQUM5RSxJQUFJQyxJQUFxQyxFQUFFO1FBQ3ZDLE1BQU1DLElBQUksR0FBR1YsaUJBQWlCLENBQUNXLFdBQVcsSUFBSVgsaUJBQWlCLENBQUNVLElBQUksSUFBSSxTQUFTO1FBQ2pGVCxpQkFBaUIsQ0FBQ1UsV0FBVyxHQUFHLENBQUMsV0FBVyxFQUFFRCxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDekQ7SUFDRCxPQUFPVCxpQkFBaUIsQ0FBQztDQUM1QjtBQUNELFNBQVNKLHNCQUFzQixDQUFDZSxHQUFHLEVBQUU7SUFDakMsT0FBT0EsR0FBRyxJQUFJQSxHQUFHLENBQUNDLFVBQVUsR0FBR0QsR0FBRyxHQUFHO1FBQ2pDbEIsT0FBTyxFQUFFa0IsR0FBRztLQUNmLENBQUM7Q0FDTDtBQUVELElBQUksT0FBT3BCLE9BQU8sQ0FBQ0UsT0FBTyxLQUFLLFVBQVUsSUFBSyxPQUFPRixPQUFPLENBQUNFLE9BQU8sS0FBSyxRQUFRLElBQUlGLE9BQU8sQ0FBQ0UsT0FBTyxLQUFLLElBQUksRUFBRztJQUM5R0osTUFBTSxDQUFDYyxNQUFNLENBQUNaLE9BQU8sQ0FBQ0UsT0FBTyxFQUFFRixPQUFPLENBQUMsQ0FBQztJQUN4Q3NCLE1BQU0sQ0FBQ3RCLE9BQU8sR0FBR0EsT0FBTyxDQUFDRSxPQUFPLENBQUM7Q0FDbEMsQ0FFRCx1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9nbG9vbWhhdmVuLWNhcmQtYnJvd3Nlci8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L3dpdGgtcm91dGVyLmpzP2FjN2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB3aXRoUm91dGVyO1xudmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcInJlYWN0XCIpKTtcbnZhciBfcm91dGVyID0gcmVxdWlyZShcIi4vcm91dGVyXCIpO1xuZnVuY3Rpb24gd2l0aFJvdXRlcihDb21wb3NlZENvbXBvbmVudCkge1xuICAgIGZ1bmN0aW9uIFdpdGhSb3V0ZXJXcmFwcGVyKHByb3BzKSB7XG4gICAgICAgIHJldHVybigvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoQ29tcG9zZWRDb21wb25lbnQsIE9iamVjdC5hc3NpZ24oe1xuICAgICAgICAgICAgcm91dGVyOiAoMCwgX3JvdXRlcikudXNlUm91dGVyKClcbiAgICAgICAgfSwgcHJvcHMpKSk7XG4gICAgfVxuICAgIFdpdGhSb3V0ZXJXcmFwcGVyLmdldEluaXRpYWxQcm9wcyA9IENvbXBvc2VkQ29tcG9uZW50LmdldEluaXRpYWxQcm9wcztcbiAgICBXaXRoUm91dGVyV3JhcHBlci5vcmlnR2V0SW5pdGlhbFByb3BzID0gQ29tcG9zZWRDb21wb25lbnQub3JpZ0dldEluaXRpYWxQcm9wcztcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICBjb25zdCBuYW1lID0gQ29tcG9zZWRDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgQ29tcG9zZWRDb21wb25lbnQubmFtZSB8fCAnVW5rbm93bic7XG4gICAgICAgIFdpdGhSb3V0ZXJXcmFwcGVyLmRpc3BsYXlOYW1lID0gYHdpdGhSb3V0ZXIoJHtuYW1lfSlgO1xuICAgIH1cbiAgICByZXR1cm4gV2l0aFJvdXRlcldyYXBwZXI7XG59XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7XG4gICAgICAgIGRlZmF1bHQ6IG9ialxuICAgIH07XG59XG5cbmlmICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSB7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdpdGgtcm91dGVyLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJ3aXRoUm91dGVyIiwiX3JlYWN0IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfcm91dGVyIiwiQ29tcG9zZWRDb21wb25lbnQiLCJXaXRoUm91dGVyV3JhcHBlciIsInByb3BzIiwiY3JlYXRlRWxlbWVudCIsImFzc2lnbiIsInJvdXRlciIsInVzZVJvdXRlciIsImdldEluaXRpYWxQcm9wcyIsIm9yaWdHZXRJbml0aWFsUHJvcHMiLCJwcm9jZXNzIiwibmFtZSIsImRpc3BsYXlOYW1lIiwib2JqIiwiX19lc01vZHVsZSIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/with-router.js\n");

/***/ }),

/***/ "./node_modules/next/dist/shared/lib/router/router.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/router.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getDomainLocale = getDomainLocale;\nexports.addLocale = addLocale;\nexports.delLocale = delLocale;\nexports.hasBasePath = hasBasePath;\nexports.addBasePath = addBasePath;\nexports.delBasePath = delBasePath;\nexports.isLocalURL = isLocalURL;\nexports.interpolateAs = interpolateAs;\nexports.resolveHref = resolveHref;\nexports[\"default\"] = void 0;\nvar _normalizeTrailingSlash = __webpack_require__(/*! ../../../client/normalize-trailing-slash */ \"./node_modules/next/dist/client/normalize-trailing-slash.js\");\nvar _routeLoader = __webpack_require__(/*! ../../../client/route-loader */ \"./node_modules/next/dist/client/route-loader.js\");\nvar _script = __webpack_require__(/*! ../../../client/script */ \"./node_modules/next/dist/client/script.js\");\nvar _isError = _interopRequireWildcard(__webpack_require__(/*! ../../../lib/is-error */ \"./node_modules/next/dist/lib/is-error.js\"));\nvar _denormalizePagePath = __webpack_require__(/*! ../page-path/denormalize-page-path */ \"../page-path/denormalize-page-path\");\nvar _normalizeLocalePath = __webpack_require__(/*! ../i18n/normalize-locale-path */ \"../i18n/normalize-locale-path\");\nvar _mitt = _interopRequireDefault(__webpack_require__(/*! ../mitt */ \"../mitt\"));\nvar _utils = __webpack_require__(/*! ../utils */ \"../utils\");\nvar _isDynamic = __webpack_require__(/*! ./utils/is-dynamic */ \"./utils/is-dynamic\");\nvar _parseRelativeUrl = __webpack_require__(/*! ./utils/parse-relative-url */ \"./utils/parse-relative-url\");\nvar _querystring = __webpack_require__(/*! ./utils/querystring */ \"./utils/querystring\");\nvar _resolveRewrites = _interopRequireDefault(__webpack_require__(/*! ./utils/resolve-rewrites */ \"./utils/resolve-rewrites\"));\nvar _routeMatcher = __webpack_require__(/*! ./utils/route-matcher */ \"./utils/route-matcher\");\nvar _routeRegex = __webpack_require__(/*! ./utils/route-regex */ \"./utils/route-regex\");\nvar _getMiddlewareRegex = __webpack_require__(/*! ./utils/get-middleware-regex */ \"./utils/get-middleware-regex\");\nvar _formatUrl = __webpack_require__(/*! ./utils/format-url */ \"./utils/format-url\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    } else {\n        var newObj = {};\n        if (obj != null) {\n            for(var key in obj){\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n                    if (desc.get || desc.set) {\n                        Object.defineProperty(newObj, key, desc);\n                    } else {\n                        newObj[key] = obj[key];\n                    }\n                }\n            }\n        }\n        newObj.default = obj;\n        return newObj;\n    }\n}\nlet detectDomainLocale;\nif (false) {}\nconst basePath =  false || \"\";\nfunction buildCancellationError() {\n    return Object.assign(new Error(\"Route Cancelled\"), {\n        cancelled: true\n    });\n}\nfunction addPathPrefix(path, prefix) {\n    if (!path.startsWith(\"/\") || !prefix) {\n        return path;\n    }\n    const pathname = pathNoQueryHash(path);\n    return (0, _normalizeTrailingSlash).normalizePathTrailingSlash(`${prefix}${pathname}`) + path.slice(pathname.length);\n}\nfunction hasPathPrefix(path, prefix) {\n    path = pathNoQueryHash(path);\n    return path === prefix || path.startsWith(prefix + \"/\");\n}\nfunction getDomainLocale(path, locale, locales, domainLocales) {\n    if (false) {} else {\n        return false;\n    }\n}\nfunction addLocale(path, locale, defaultLocale) {\n    if (false) {}\n    return path;\n}\nfunction delLocale(path, locale) {\n    if (false) {}\n    return path;\n}\nfunction pathNoQueryHash(path) {\n    const queryIndex = path.indexOf(\"?\");\n    const hashIndex = path.indexOf(\"#\");\n    if (queryIndex > -1 || hashIndex > -1) {\n        path = path.substring(0, queryIndex > -1 ? queryIndex : hashIndex);\n    }\n    return path;\n}\nfunction hasBasePath(path) {\n    return hasPathPrefix(path, basePath);\n}\nfunction addBasePath(path) {\n    // we only add the basepath on relative urls\n    return addPathPrefix(path, basePath);\n}\nfunction delBasePath(path) {\n    path = path.slice(basePath.length);\n    if (!path.startsWith(\"/\")) path = `/${path}`;\n    return path;\n}\nfunction isLocalURL(url) {\n    // prevent a hydration mismatch on href for url with anchor refs\n    if (url.startsWith(\"/\") || url.startsWith(\"#\") || url.startsWith(\"?\")) return true;\n    try {\n        // absolute urls can be local if they are on the same origin\n        const locationOrigin = (0, _utils).getLocationOrigin();\n        const resolved = new URL(url, locationOrigin);\n        return resolved.origin === locationOrigin && hasBasePath(resolved.pathname);\n    } catch (_) {\n        return false;\n    }\n}\nfunction interpolateAs(route, asPathname, query) {\n    let interpolatedRoute = \"\";\n    const dynamicRegex = (0, _routeRegex).getRouteRegex(route);\n    const dynamicGroups = dynamicRegex.groups;\n    const dynamicMatches = (asPathname !== route ? (0, _routeMatcher).getRouteMatcher(dynamicRegex)(asPathname) : \"\") || // TODO: should this take priority; also need to change in the router.\n    query;\n    interpolatedRoute = route;\n    const params = Object.keys(dynamicGroups);\n    if (!params.every((param)=>{\n        let value = dynamicMatches[param] || \"\";\n        const { repeat , optional  } = dynamicGroups[param];\n        // support single-level catch-all\n        // TODO: more robust handling for user-error (passing `/`)\n        let replaced = `[${repeat ? \"...\" : \"\"}${param}]`;\n        if (optional) {\n            replaced = `${!value ? \"/\" : \"\"}[${replaced}]`;\n        }\n        if (repeat && !Array.isArray(value)) value = [\n            value\n        ];\n        return (optional || param in dynamicMatches) && (interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map(// path delimiter escaped since they are being inserted\n        // into the URL and we expect URL encoded segments\n        // when parsing dynamic route params\n        (segment)=>encodeURIComponent(segment)\n        ).join(\"/\") : encodeURIComponent(value)) || \"/\");\n    })) {\n        interpolatedRoute = \"\" // did not satisfy all requirements\n        ;\n    // n.b. We ignore this error because we handle warning for this case in\n    // development in the `<Link>` component directly.\n    }\n    return {\n        params,\n        result: interpolatedRoute\n    };\n}\nfunction omitParmsFromQuery(query, params) {\n    const filteredQuery = {};\n    Object.keys(query).forEach((key)=>{\n        if (!params.includes(key)) {\n            filteredQuery[key] = query[key];\n        }\n    });\n    return filteredQuery;\n}\nfunction resolveHref(router, href, resolveAs) {\n    // we use a dummy base url for relative urls\n    let base;\n    let urlAsString = typeof href === \"string\" ? href : (0, _formatUrl).formatWithValidation(href);\n    // repeated slashes and backslashes in the URL are considered\n    // invalid and will never match a Next.js page/file\n    const urlProtoMatch = urlAsString.match(/^[a-zA-Z]{1,}:\\/\\//);\n    const urlAsStringNoProto = urlProtoMatch ? urlAsString.slice(urlProtoMatch[0].length) : urlAsString;\n    const urlParts = urlAsStringNoProto.split(\"?\");\n    if ((urlParts[0] || \"\").match(/(\\/\\/|\\\\)/)) {\n        console.error(`Invalid href passed to next/router: ${urlAsString}, repeated forward-slashes (//) or backslashes \\\\ are not valid in the href`);\n        const normalizedUrl = (0, _utils).normalizeRepeatedSlashes(urlAsStringNoProto);\n        urlAsString = (urlProtoMatch ? urlProtoMatch[0] : \"\") + normalizedUrl;\n    }\n    // Return because it cannot be routed by the Next.js router\n    if (!isLocalURL(urlAsString)) {\n        return resolveAs ? [\n            urlAsString\n        ] : urlAsString;\n    }\n    try {\n        base = new URL(urlAsString.startsWith(\"#\") ? router.asPath : router.pathname, \"http://n\");\n    } catch (_) {\n        // fallback to / for invalid asPath values e.g. //\n        base = new URL(\"/\", \"http://n\");\n    }\n    try {\n        const finalUrl = new URL(urlAsString, base);\n        finalUrl.pathname = (0, _normalizeTrailingSlash).normalizePathTrailingSlash(finalUrl.pathname);\n        let interpolatedAs = \"\";\n        if ((0, _isDynamic).isDynamicRoute(finalUrl.pathname) && finalUrl.searchParams && resolveAs) {\n            const query = (0, _querystring).searchParamsToUrlQuery(finalUrl.searchParams);\n            const { result , params  } = interpolateAs(finalUrl.pathname, finalUrl.pathname, query);\n            if (result) {\n                interpolatedAs = (0, _formatUrl).formatWithValidation({\n                    pathname: result,\n                    hash: finalUrl.hash,\n                    query: omitParmsFromQuery(query, params)\n                });\n            }\n        }\n        // if the origin didn't change, it means we received a relative href\n        const resolvedHref = finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;\n        return resolveAs ? [\n            resolvedHref,\n            interpolatedAs || resolvedHref\n        ] : resolvedHref;\n    } catch (_1) {\n        return resolveAs ? [\n            urlAsString\n        ] : urlAsString;\n    }\n}\nfunction stripOrigin(url) {\n    const origin = (0, _utils).getLocationOrigin();\n    return url.startsWith(origin) ? url.substring(origin.length) : url;\n}\nfunction prepareUrlAs(router, url, as) {\n    // If url and as provided as an object representation,\n    // we'll format them into the string version here.\n    let [resolvedHref, resolvedAs] = resolveHref(router, url, true);\n    const origin = (0, _utils).getLocationOrigin();\n    const hrefHadOrigin = resolvedHref.startsWith(origin);\n    const asHadOrigin = resolvedAs && resolvedAs.startsWith(origin);\n    resolvedHref = stripOrigin(resolvedHref);\n    resolvedAs = resolvedAs ? stripOrigin(resolvedAs) : resolvedAs;\n    const preparedUrl = hrefHadOrigin ? resolvedHref : addBasePath(resolvedHref);\n    const preparedAs = as ? stripOrigin(resolveHref(router, as)) : resolvedAs || resolvedHref;\n    return {\n        url: preparedUrl,\n        as: asHadOrigin ? preparedAs : addBasePath(preparedAs)\n    };\n}\nfunction resolveDynamicRoute(pathname, pages) {\n    const cleanPathname = (0, _normalizeTrailingSlash).removePathTrailingSlash((0, _denormalizePagePath).denormalizePagePath(pathname));\n    if (cleanPathname === \"/404\" || cleanPathname === \"/_error\") {\n        return pathname;\n    }\n    // handle resolving href for dynamic routes\n    if (!pages.includes(cleanPathname)) {\n        // eslint-disable-next-line array-callback-return\n        pages.some((page)=>{\n            if ((0, _isDynamic).isDynamicRoute(page) && (0, _routeRegex).getRouteRegex(page).re.test(cleanPathname)) {\n                pathname = page;\n                return true;\n            }\n        });\n    }\n    return (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname);\n}\nconst manualScrollRestoration =  false && 0;\nconst SSG_DATA_NOT_FOUND = Symbol(\"SSG_DATA_NOT_FOUND\");\nfunction fetchRetry(url, attempts, opts) {\n    return fetch(url, {\n        // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n        // Cookies may also be required for `getServerSideProps`.\n        //\n        // > `fetch` won’t send cookies, unless you set the credentials init\n        // > option.\n        // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n        //\n        // > For maximum browser compatibility when it comes to sending &\n        // > receiving cookies, always supply the `credentials: 'same-origin'`\n        // > option instead of relying on the default.\n        // https://github.com/github/fetch#caveats\n        credentials: \"same-origin\"\n    }).then((res)=>{\n        if (!res.ok) {\n            if (attempts > 1 && res.status >= 500) {\n                return fetchRetry(url, attempts - 1, opts);\n            }\n            if (res.status === 404) {\n                return res.json().then((data)=>{\n                    if (data.notFound) {\n                        return {\n                            notFound: SSG_DATA_NOT_FOUND\n                        };\n                    }\n                    throw new Error(`Failed to load static props`);\n                });\n            }\n            throw new Error(`Failed to load static props`);\n        }\n        return opts.text ? res.text() : res.json();\n    });\n}\nfunction fetchNextData(dataHref, isServerRender, text, inflightCache, persistCache) {\n    const { href: cacheKey  } = new URL(dataHref, window.location.href);\n    if (inflightCache[cacheKey] !== undefined) {\n        return inflightCache[cacheKey];\n    }\n    return inflightCache[cacheKey] = fetchRetry(dataHref, isServerRender ? 3 : 1, {\n        text\n    }).catch((err)=>{\n        // We should only trigger a server-side transition if this was caused\n        // on a client-side transition. Otherwise, we'd get into an infinite\n        // loop.\n        if (!isServerRender) {\n            (0, _routeLoader).markAssetError(err);\n        }\n        throw err;\n    }).then((data)=>{\n        if (!persistCache || \"development\" !== \"production\") {\n            delete inflightCache[cacheKey];\n        }\n        return data;\n    }).catch((err)=>{\n        delete inflightCache[cacheKey];\n        throw err;\n    });\n}\nclass Router {\n    constructor(pathname1, query1, as1, { initialProps , pageLoader , App , wrapApp , Component , err , subscription , isFallback , locale , locales , defaultLocale , domainLocales , isPreview , isRsc  }){\n        // Static Data Cache\n        this.sdc = {};\n        // In-flight Server Data Requests, for deduping\n        this.sdr = {};\n        // In-flight middleware preflight requests\n        this.sde = {};\n        this._idx = 0;\n        this.onPopState = (e)=>{\n            const state = e.state;\n            if (!state) {\n                // We get state as undefined for two reasons.\n                //  1. With older safari (< 8) and older chrome (< 34)\n                //  2. When the URL changed with #\n                //\n                // In the both cases, we don't need to proceed and change the route.\n                // (as it's already changed)\n                // But we can simply replace the state with the new changes.\n                // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n                // So, doing the following for (1) does no harm.\n                const { pathname , query  } = this;\n                this.changeState(\"replaceState\", (0, _formatUrl).formatWithValidation({\n                    pathname: addBasePath(pathname),\n                    query\n                }), (0, _utils).getURL());\n                return;\n            }\n            if (!state.__N) {\n                return;\n            }\n            let forcedScroll;\n            const { url , as , options , idx  } = state;\n            if (false) {}\n            this._idx = idx;\n            const { pathname  } = (0, _parseRelativeUrl).parseRelativeUrl(url);\n            // Make sure we don't re-render on initial load,\n            // can be caused by navigating back from an external site\n            if (this.isSsr && as === addBasePath(this.asPath) && pathname === addBasePath(this.pathname)) {\n                return;\n            }\n            // If the downstream application returns falsy, return.\n            // They will then be responsible for handling the event.\n            if (this._bps && !this._bps(state)) {\n                return;\n            }\n            this.change(\"replaceState\", url, as, Object.assign({}, options, {\n                shallow: options.shallow && this._shallow,\n                locale: options.locale || this.defaultLocale\n            }), forcedScroll);\n        };\n        // represents the current component key\n        const route = (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname1);\n        // set up the component cache (by route keys)\n        this.components = {};\n        // We should not keep the cache, if there's an error\n        // Otherwise, this cause issues when when going back and\n        // come again to the errored page.\n        if (pathname1 !== \"/_error\") {\n            this.components[route] = {\n                Component,\n                initial: true,\n                props: initialProps,\n                err,\n                __N_SSG: initialProps && initialProps.__N_SSG,\n                __N_SSP: initialProps && initialProps.__N_SSP,\n                __N_RSC: !!isRsc\n            };\n        }\n        this.components[\"/_app\"] = {\n            Component: App,\n            styleSheets: []\n        };\n        // Backwards compat for Router.router.events\n        // TODO: Should be remove the following major version as it was never documented\n        this.events = Router.events;\n        this.pageLoader = pageLoader;\n        // if auto prerendered and dynamic route wait to update asPath\n        // until after mount to prevent hydration mismatch\n        const autoExportDynamic = (0, _isDynamic).isDynamicRoute(pathname1) && self.__NEXT_DATA__.autoExport;\n        this.basePath = basePath;\n        this.sub = subscription;\n        this.clc = null;\n        this._wrapApp = wrapApp;\n        // make sure to ignore extra popState in safari on navigating\n        // back from external site\n        this.isSsr = true;\n        this.isLocaleDomain = false;\n        this.isReady = !!(self.__NEXT_DATA__.gssp || self.__NEXT_DATA__.gip || self.__NEXT_DATA__.appGip && !self.__NEXT_DATA__.gsp || !autoExportDynamic && !self.location.search && !false);\n        if (false) {}\n        this.state = {\n            route,\n            pathname: pathname1,\n            query: query1,\n            asPath: autoExportDynamic ? pathname1 : as1,\n            isPreview: !!isPreview,\n            locale:  false ? 0 : undefined,\n            isFallback\n        };\n        if (false) {}\n    }\n    reload() {\n        window.location.reload();\n    }\n    /**\n   * Go back in history\n   */ back() {\n        window.history.back();\n    }\n    /**\n   * Performs a `pushState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */ push(url, as, options = {}) {\n        if (false) {}\n        ({ url , as  } = prepareUrlAs(this, url, as));\n        return this.change(\"pushState\", url, as, options);\n    }\n    /**\n   * Performs a `replaceState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */ replace(url, as, options = {}) {\n        ({ url , as  } = prepareUrlAs(this, url, as));\n        return this.change(\"replaceState\", url, as, options);\n    }\n    async change(method, url, as, options, forcedScroll) {\n        if (!isLocalURL(url)) {\n            window.location.href = url;\n            return false;\n        }\n        const shouldResolveHref = options._h || options._shouldResolveHref || pathNoQueryHash(url) === pathNoQueryHash(as);\n        const nextState = {\n            ...this.state\n        };\n        // for static pages with query params in the URL we delay\n        // marking the router ready until after the query is updated\n        if (options._h) {\n            this.isReady = true;\n        }\n        const prevLocale = nextState.locale;\n        if (false) { var ref; }\n        if (!options._h) {\n            this.isSsr = false;\n        }\n        // marking route changes as a navigation start entry\n        if (_utils.ST) {\n            performance.mark(\"routeChange\");\n        }\n        const { shallow =false , scroll =true  } = options;\n        const routeProps = {\n            shallow\n        };\n        if (this._inFlightRoute) {\n            this.abortComponentLoad(this._inFlightRoute, routeProps);\n        }\n        as = addBasePath(addLocale(hasBasePath(as) ? delBasePath(as) : as, options.locale, this.defaultLocale));\n        const cleanedAs = delLocale(hasBasePath(as) ? delBasePath(as) : as, nextState.locale);\n        this._inFlightRoute = as;\n        let localeChange = prevLocale !== nextState.locale;\n        // If the url change is only related to a hash change\n        // We should not proceed. We should only change the state.\n        // WARNING: `_h` is an internal option for handing Next.js client-side\n        // hydration. Your app should _never_ use this property. It may change at\n        // any time without notice.\n        if (!options._h && this.onlyAHashChange(cleanedAs) && !localeChange) {\n            nextState.asPath = cleanedAs;\n            Router.events.emit(\"hashChangeStart\", as, routeProps);\n            // TODO: do we need the resolved href when only a hash change?\n            this.changeState(method, url, as, {\n                ...options,\n                scroll: false\n            });\n            if (scroll) {\n                this.scrollToHash(cleanedAs);\n            }\n            this.set(nextState, this.components[nextState.route], null);\n            Router.events.emit(\"hashChangeComplete\", as, routeProps);\n            return true;\n        }\n        let parsed = (0, _parseRelativeUrl).parseRelativeUrl(url);\n        let { pathname , query  } = parsed;\n        // The build manifest needs to be loaded before auto-static dynamic pages\n        // get their query parameters to allow ensuring they can be parsed properly\n        // when rewritten to\n        let pages, rewrites;\n        try {\n            [pages, { __rewrites: rewrites  }] = await Promise.all([\n                this.pageLoader.getPageList(),\n                (0, _routeLoader).getClientBuildManifest(),\n                this.pageLoader.getMiddlewareList(), \n            ]);\n        } catch (err) {\n            // If we fail to resolve the page list or client-build manifest, we must\n            // do a server-side transition:\n            window.location.href = as;\n            return false;\n        }\n        // If asked to change the current URL we should reload the current page\n        // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n        // We also need to set the method = replaceState always\n        // as this should not go into the history (That's how browsers work)\n        // We should compare the new asPath to the current asPath, not the url\n        if (!this.urlIsNew(cleanedAs) && !localeChange) {\n            method = \"replaceState\";\n        }\n        // we need to resolve the as value using rewrites for dynamic SSG\n        // pages to allow building the data URL correctly\n        let resolvedAs = as;\n        // url and as should always be prefixed with basePath by this\n        // point by either next/link or router.push/replace so strip the\n        // basePath from the pathname to match the pages dir 1-to-1\n        pathname = pathname ? (0, _normalizeTrailingSlash).removePathTrailingSlash(delBasePath(pathname)) : pathname;\n        if (shouldResolveHref && pathname !== \"/_error\") {\n            options._shouldResolveHref = true;\n            if (false) {} else {\n                parsed.pathname = resolveDynamicRoute(pathname, pages);\n                if (parsed.pathname !== pathname) {\n                    pathname = parsed.pathname;\n                    parsed.pathname = addBasePath(pathname);\n                    url = (0, _formatUrl).formatWithValidation(parsed);\n                }\n            }\n        }\n        if (!isLocalURL(as)) {\n            if (true) {\n                throw new Error(`Invalid href: \"${url}\" and as: \"${as}\", received relative href and external as` + `\\nSee more info: https://nextjs.org/docs/messages/invalid-relative-url-external-as`);\n            }\n            window.location.href = as;\n            return false;\n        }\n        resolvedAs = delLocale(delBasePath(resolvedAs), nextState.locale);\n        /**\n     * If the route update was triggered for client-side hydration and\n     * the rendered route is not dynamic do not check the preflight\n     * request as it is not necessary.\n     */ if ((!options.shallow || options._h === 1) && (options._h !== 1 || (0, _isDynamic).isDynamicRoute((0, _normalizeTrailingSlash).removePathTrailingSlash(pathname)))) {\n            const effect = await this._preflightRequest({\n                as,\n                cache: \"development\" === \"production\",\n                pages,\n                pathname,\n                query,\n                locale: nextState.locale,\n                isPreview: nextState.isPreview\n            });\n            if (effect.type === \"rewrite\") {\n                query = {\n                    ...query,\n                    ...effect.parsedAs.query\n                };\n                resolvedAs = effect.asPath;\n                pathname = effect.resolvedHref;\n                parsed.pathname = effect.resolvedHref;\n                url = (0, _formatUrl).formatWithValidation(parsed);\n            } else if (effect.type === \"redirect\" && effect.newAs) {\n                return this.change(method, effect.newUrl, effect.newAs, options);\n            } else if (effect.type === \"redirect\" && effect.destination) {\n                window.location.href = effect.destination;\n                return new Promise(()=>{});\n            } else if (effect.type === \"refresh\" && as !== window.location.pathname) {\n                window.location.href = as;\n                return new Promise(()=>{});\n            }\n        }\n        const route = (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname);\n        if ((0, _isDynamic).isDynamicRoute(route)) {\n            const parsedAs = (0, _parseRelativeUrl).parseRelativeUrl(resolvedAs);\n            const asPathname = parsedAs.pathname;\n            const routeRegex = (0, _routeRegex).getRouteRegex(route);\n            const routeMatch = (0, _routeMatcher).getRouteMatcher(routeRegex)(asPathname);\n            const shouldInterpolate = route === asPathname;\n            const interpolatedAs = shouldInterpolate ? interpolateAs(route, asPathname, query) : {};\n            if (!routeMatch || shouldInterpolate && !interpolatedAs.result) {\n                const missingParams = Object.keys(routeRegex.groups).filter((param)=>!query[param]\n                );\n                if (missingParams.length > 0) {\n                    if (true) {\n                        console.warn(`${shouldInterpolate ? `Interpolating href` : `Mismatching \\`as\\` and \\`href\\``} failed to manually provide ` + `the params: ${missingParams.join(\", \")} in the \\`href\\`'s \\`query\\``);\n                    }\n                    throw new Error((shouldInterpolate ? `The provided \\`href\\` (${url}) value is missing query values (${missingParams.join(\", \")}) to be interpolated properly. ` : `The provided \\`as\\` value (${asPathname}) is incompatible with the \\`href\\` value (${route}). `) + `Read more: https://nextjs.org/docs/messages/${shouldInterpolate ? \"href-interpolation-failed\" : \"incompatible-href-as\"}`);\n                }\n            } else if (shouldInterpolate) {\n                as = (0, _formatUrl).formatWithValidation(Object.assign({}, parsedAs, {\n                    pathname: interpolatedAs.result,\n                    query: omitParmsFromQuery(query, interpolatedAs.params)\n                }));\n            } else {\n                // Merge params into `query`, overwriting any specified in search\n                Object.assign(query, routeMatch);\n            }\n        }\n        Router.events.emit(\"routeChangeStart\", as, routeProps);\n        try {\n            var ref1, ref2;\n            let routeInfo = await this.getRouteInfo(route, pathname, query, as, resolvedAs, routeProps, nextState.locale, nextState.isPreview);\n            let { error , props , __N_SSG , __N_SSP  } = routeInfo;\n            const component = routeInfo.Component;\n            if (component && component.unstable_scriptLoader) {\n                const scripts = [].concat(component.unstable_scriptLoader());\n                scripts.forEach((script)=>{\n                    (0, _script).handleClientScriptLoad(script.props);\n                });\n            }\n            // handle redirect on client-transition\n            if ((__N_SSG || __N_SSP) && props) {\n                if (props.pageProps && props.pageProps.__N_REDIRECT) {\n                    const destination = props.pageProps.__N_REDIRECT;\n                    // check if destination is internal (resolves to a page) and attempt\n                    // client-navigation if it is falling back to hard navigation if\n                    // it's not\n                    if (destination.startsWith(\"/\") && props.pageProps.__N_REDIRECT_BASE_PATH !== false) {\n                        const parsedHref = (0, _parseRelativeUrl).parseRelativeUrl(destination);\n                        parsedHref.pathname = resolveDynamicRoute(parsedHref.pathname, pages);\n                        const { url: newUrl , as: newAs  } = prepareUrlAs(this, destination, destination);\n                        return this.change(method, newUrl, newAs, options);\n                    }\n                    window.location.href = destination;\n                    return new Promise(()=>{});\n                }\n                nextState.isPreview = !!props.__N_PREVIEW;\n                // handle SSG data 404\n                if (props.notFound === SSG_DATA_NOT_FOUND) {\n                    let notFoundRoute;\n                    try {\n                        await this.fetchComponent(\"/404\");\n                        notFoundRoute = \"/404\";\n                    } catch (_) {\n                        notFoundRoute = \"/_error\";\n                    }\n                    routeInfo = await this.getRouteInfo(notFoundRoute, notFoundRoute, query, as, resolvedAs, {\n                        shallow: false\n                    }, nextState.locale, nextState.isPreview);\n                }\n            }\n            Router.events.emit(\"beforeHistoryChange\", as, routeProps);\n            this.changeState(method, url, as, options);\n            if (options._h && pathname === \"/_error\" && ((ref1 = self.__NEXT_DATA__.props) === null || ref1 === void 0 ? void 0 : (ref2 = ref1.pageProps) === null || ref2 === void 0 ? void 0 : ref2.statusCode) === 500 && (props === null || props === void 0 ? void 0 : props.pageProps)) {\n                // ensure statusCode is still correct for static 500 page\n                // when updating query information\n                props.pageProps.statusCode = 500;\n            }\n            // shallow routing is only allowed for same page URL changes.\n            const isValidShallowRoute = options.shallow && nextState.route === route;\n            var _scroll;\n            const shouldScroll = (_scroll = options.scroll) !== null && _scroll !== void 0 ? _scroll : !isValidShallowRoute;\n            const resetScroll = shouldScroll ? {\n                x: 0,\n                y: 0\n            } : null;\n            await this.set({\n                ...nextState,\n                route,\n                pathname,\n                query,\n                asPath: cleanedAs,\n                isFallback: false\n            }, routeInfo, forcedScroll !== null && forcedScroll !== void 0 ? forcedScroll : resetScroll).catch((e)=>{\n                if (e.cancelled) error = error || e;\n                else throw e;\n            });\n            if (error) {\n                Router.events.emit(\"routeChangeError\", error, cleanedAs, routeProps);\n                throw error;\n            }\n            if (false) {}\n            Router.events.emit(\"routeChangeComplete\", as, routeProps);\n            return true;\n        } catch (err1) {\n            if ((0, _isError).default(err1) && err1.cancelled) {\n                return false;\n            }\n            throw err1;\n        }\n    }\n    changeState(method, url, as, options = {}) {\n        if (true) {\n            if (typeof window.history === \"undefined\") {\n                console.error(`Warning: window.history is not available.`);\n                return;\n            }\n            if (typeof window.history[method] === \"undefined\") {\n                console.error(`Warning: window.history.${method} is not available`);\n                return;\n            }\n        }\n        if (method !== \"pushState\" || (0, _utils).getURL() !== as) {\n            this._shallow = options.shallow;\n            window.history[method]({\n                url,\n                as,\n                options,\n                __N: true,\n                idx: this._idx = method !== \"pushState\" ? this._idx : this._idx + 1\n            }, // Passing the empty string here should be safe against future changes to the method.\n            // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n            \"\", as);\n        }\n    }\n    async handleRouteInfoError(err, pathname, query, as, routeProps, loadErrorFail) {\n        if (err.cancelled) {\n            // bubble up cancellation errors\n            throw err;\n        }\n        if ((0, _routeLoader).isAssetError(err) || loadErrorFail) {\n            Router.events.emit(\"routeChangeError\", err, as, routeProps);\n            // If we can't load the page it could be one of following reasons\n            //  1. Page doesn't exists\n            //  2. Page does exist in a different zone\n            //  3. Internal error while loading the page\n            // So, doing a hard reload is the proper way to deal with this.\n            window.location.href = as;\n            // Changing the URL doesn't block executing the current code path.\n            // So let's throw a cancellation error stop the routing logic.\n            throw buildCancellationError();\n        }\n        try {\n            let Component;\n            let styleSheets;\n            let props;\n            if (typeof Component === \"undefined\" || typeof styleSheets === \"undefined\") {\n                ({ page: Component , styleSheets  } = await this.fetchComponent(\"/_error\"));\n            }\n            const routeInfo = {\n                props,\n                Component,\n                styleSheets,\n                err,\n                error: err\n            };\n            if (!routeInfo.props) {\n                try {\n                    routeInfo.props = await this.getInitialProps(Component, {\n                        err,\n                        pathname,\n                        query\n                    });\n                } catch (gipErr) {\n                    console.error(\"Error in error page `getInitialProps`: \", gipErr);\n                    routeInfo.props = {};\n                }\n            }\n            return routeInfo;\n        } catch (routeInfoErr) {\n            return this.handleRouteInfoError((0, _isError).default(routeInfoErr) ? routeInfoErr : new Error(routeInfoErr + \"\"), pathname, query, as, routeProps, true);\n        }\n    }\n    async getRouteInfo(route, pathname, query, as, resolvedAs, routeProps, locale, isPreview) {\n        try {\n            const existingRouteInfo = this.components[route];\n            if (routeProps.shallow && existingRouteInfo && this.route === route) {\n                return existingRouteInfo;\n            }\n            let cachedRouteInfo = undefined;\n            // can only use non-initial route info\n            // cannot reuse route info in development since it can change after HMR\n            if (false) {}\n            const routeInfo = cachedRouteInfo || await this.fetchComponent(route).then((res)=>({\n                    Component: res.page,\n                    styleSheets: res.styleSheets,\n                    __N_SSG: res.mod.__N_SSG,\n                    __N_SSP: res.mod.__N_SSP,\n                    __N_RSC: !!res.mod.__next_rsc__\n                })\n            );\n            const { Component , __N_SSG , __N_SSP , __N_RSC  } = routeInfo;\n            if (true) {\n                const { isValidElementType  } = __webpack_require__(/*! next/dist/compiled/react-is */ \"next/dist/compiled/react-is\");\n                if (!isValidElementType(Component)) {\n                    throw new Error(`The default export is not a React Component in page: \"${pathname}\"`);\n                }\n            }\n            let dataHref;\n            // For server components, non-SSR pages will have statically optimized\n            // flight data in a production build.\n            // So only development and SSR pages will always have the real-time\n            // generated and streamed flight data.\n            const useStreamedFlightData = ( true) && __N_RSC;\n            if (__N_SSG || __N_SSP || __N_RSC) {\n                dataHref = this.pageLoader.getDataHref({\n                    href: (0, _formatUrl).formatWithValidation({\n                        pathname,\n                        query\n                    }),\n                    asPath: resolvedAs,\n                    ssg: __N_SSG,\n                    flight: useStreamedFlightData,\n                    locale\n                });\n            }\n            const props = await this._getData(()=>(__N_SSG || __N_SSP || __N_RSC) && !useStreamedFlightData ? fetchNextData(dataHref, this.isSsr, false, __N_SSG ? this.sdc : this.sdr, !!__N_SSG && !isPreview) : this.getInitialProps(Component, {\n                    pathname,\n                    query,\n                    asPath: as,\n                    locale,\n                    locales: this.locales,\n                    defaultLocale: this.defaultLocale\n                })\n            );\n            if (__N_RSC) {\n                if (useStreamedFlightData) {\n                    const { data  } = await this._getData(()=>this._getFlightData(dataHref)\n                    );\n                    props.pageProps = Object.assign(props.pageProps, {\n                        __flight__: data\n                    });\n                } else {\n                    const { __flight__  } = props;\n                    props.pageProps = Object.assign({}, props.pageProps, {\n                        __flight__\n                    });\n                }\n            }\n            routeInfo.props = props;\n            this.components[route] = routeInfo;\n            return routeInfo;\n        } catch (err) {\n            return this.handleRouteInfoError((0, _isError).getProperError(err), pathname, query, as, routeProps);\n        }\n    }\n    set(state, data, resetScroll) {\n        this.state = state;\n        return this.sub(data, this.components[\"/_app\"].Component, resetScroll);\n    }\n    /**\n   * Callback to execute before replacing router state\n   * @param cb callback to be executed\n   */ beforePopState(cb) {\n        this._bps = cb;\n    }\n    onlyAHashChange(as) {\n        if (!this.asPath) return false;\n        const [oldUrlNoHash, oldHash] = this.asPath.split(\"#\");\n        const [newUrlNoHash, newHash] = as.split(\"#\");\n        // Makes sure we scroll to the provided hash if the url/hash are the same\n        if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n            return true;\n        }\n        // If the urls are change, there's more than a hash change\n        if (oldUrlNoHash !== newUrlNoHash) {\n            return false;\n        }\n        // If the hash has changed, then it's a hash only change.\n        // This check is necessary to handle both the enter and\n        // leave hash === '' cases. The identity case falls through\n        // and is treated as a next reload.\n        return oldHash !== newHash;\n    }\n    scrollToHash(as) {\n        const [, hash = \"\"] = as.split(\"#\");\n        // Scroll to top if the hash is just `#` with no value or `#top`\n        // To mirror browsers\n        if (hash === \"\" || hash === \"top\") {\n            window.scrollTo(0, 0);\n            return;\n        }\n        // First we check if the element by id is found\n        const idEl = document.getElementById(hash);\n        if (idEl) {\n            idEl.scrollIntoView();\n            return;\n        }\n        // If there's no element with the id, we check the `name` property\n        // To mirror browsers\n        const nameEl = document.getElementsByName(hash)[0];\n        if (nameEl) {\n            nameEl.scrollIntoView();\n        }\n    }\n    urlIsNew(asPath) {\n        return this.asPath !== asPath;\n    }\n    /**\n   * Prefetch page code, you may wait for the data during page rendering.\n   * This feature only works in production!\n   * @param url the href of prefetched page\n   * @param asPath the as path of the prefetched page\n   */ async prefetch(url, asPath = url, options = {}) {\n        let parsed = (0, _parseRelativeUrl).parseRelativeUrl(url);\n        let { pathname , query  } = parsed;\n        if (false) {}\n        const pages = await this.pageLoader.getPageList();\n        let resolvedAs = asPath;\n        if (false) {} else {\n            parsed.pathname = resolveDynamicRoute(parsed.pathname, pages);\n            if (parsed.pathname !== pathname) {\n                pathname = parsed.pathname;\n                parsed.pathname = pathname;\n                url = (0, _formatUrl).formatWithValidation(parsed);\n            }\n        }\n        // Prefetch is not supported in development mode because it would trigger on-demand-entries\n        if (true) {\n            return;\n        }\n        const effects = await this._preflightRequest({\n            as: addBasePath(asPath),\n            cache: true,\n            pages,\n            pathname,\n            query,\n            locale: this.locale,\n            isPreview: this.isPreview\n        });\n        if (effects.type === \"rewrite\") {\n            parsed.pathname = effects.resolvedHref;\n            pathname = effects.resolvedHref;\n            query = {\n                ...query,\n                ...effects.parsedAs.query\n            };\n            resolvedAs = effects.asPath;\n            url = (0, _formatUrl).formatWithValidation(parsed);\n        }\n        const route = (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname);\n        await Promise.all([\n            this.pageLoader._isSsg(route).then((isSsg)=>{\n                return isSsg ? fetchNextData(this.pageLoader.getDataHref({\n                    href: url,\n                    asPath: resolvedAs,\n                    ssg: true,\n                    locale: typeof options.locale !== \"undefined\" ? options.locale : this.locale\n                }), false, false, this.sdc, true) : false;\n            }),\n            this.pageLoader[options.priority ? \"loadPage\" : \"prefetch\"](route), \n        ]);\n    }\n    async fetchComponent(route) {\n        let cancelled = false;\n        const cancel = this.clc = ()=>{\n            cancelled = true;\n        };\n        const handleCancelled = ()=>{\n            if (cancelled) {\n                const error = new Error(`Abort fetching component for route: \"${route}\"`);\n                error.cancelled = true;\n                throw error;\n            }\n            if (cancel === this.clc) {\n                this.clc = null;\n            }\n        };\n        try {\n            const componentResult = await this.pageLoader.loadPage(route);\n            handleCancelled();\n            return componentResult;\n        } catch (err) {\n            handleCancelled();\n            throw err;\n        }\n    }\n    _getData(fn) {\n        let cancelled = false;\n        const cancel = ()=>{\n            cancelled = true;\n        };\n        this.clc = cancel;\n        return fn().then((data)=>{\n            if (cancel === this.clc) {\n                this.clc = null;\n            }\n            if (cancelled) {\n                const err = new Error(\"Loading initial props cancelled\");\n                err.cancelled = true;\n                throw err;\n            }\n            return data;\n        });\n    }\n    _getFlightData(dataHref) {\n        // Do not cache RSC flight response since it's not a static resource\n        return fetchNextData(dataHref, true, true, this.sdc, false).then((serialized)=>{\n            return {\n                data: serialized\n            };\n        });\n    }\n    async _preflightRequest(options) {\n        const asPathname = pathNoQueryHash(options.as);\n        const cleanedAs = delLocale(hasBasePath(asPathname) ? delBasePath(asPathname) : asPathname, options.locale);\n        const fns = await this.pageLoader.getMiddlewareList();\n        const requiresPreflight = fns.some(([middleware, isSSR])=>{\n            return (0, _routeMatcher).getRouteMatcher((0, _getMiddlewareRegex).getMiddlewareRegex(middleware, !isSSR))(cleanedAs);\n        });\n        if (!requiresPreflight) {\n            return {\n                type: \"next\"\n            };\n        }\n        const preflightHref = addLocale(options.as, options.locale);\n        let preflight;\n        try {\n            preflight = await this._getPreflightData({\n                preflightHref,\n                shouldCache: options.cache,\n                isPreview: options.isPreview\n            });\n        } catch (err) {\n            // If preflight request fails, we need to do a hard-navigation.\n            return {\n                type: \"redirect\",\n                destination: options.as\n            };\n        }\n        if (preflight.rewrite) {\n            // for external rewrites we need to do a hard navigation\n            // to the resource\n            if (!preflight.rewrite.startsWith(\"/\")) {\n                return {\n                    type: \"redirect\",\n                    destination: options.as\n                };\n            }\n            const parsed = (0, _parseRelativeUrl).parseRelativeUrl((0, _normalizeLocalePath).normalizeLocalePath(hasBasePath(preflight.rewrite) ? delBasePath(preflight.rewrite) : preflight.rewrite, this.locales).pathname);\n            const fsPathname = (0, _normalizeTrailingSlash).removePathTrailingSlash(parsed.pathname);\n            let matchedPage;\n            let resolvedHref;\n            if (options.pages.includes(fsPathname)) {\n                matchedPage = true;\n                resolvedHref = fsPathname;\n            } else {\n                resolvedHref = resolveDynamicRoute(fsPathname, options.pages);\n                if (resolvedHref !== parsed.pathname && options.pages.includes(resolvedHref)) {\n                    matchedPage = true;\n                }\n            }\n            return {\n                type: \"rewrite\",\n                asPath: parsed.pathname,\n                parsedAs: parsed,\n                matchedPage,\n                resolvedHref\n            };\n        }\n        if (preflight.redirect) {\n            if (preflight.redirect.startsWith(\"/\")) {\n                const cleanRedirect = (0, _normalizeTrailingSlash).removePathTrailingSlash((0, _normalizeLocalePath).normalizeLocalePath(hasBasePath(preflight.redirect) ? delBasePath(preflight.redirect) : preflight.redirect, this.locales).pathname);\n                const { url: newUrl , as: newAs  } = prepareUrlAs(this, cleanRedirect, cleanRedirect);\n                return {\n                    type: \"redirect\",\n                    newUrl,\n                    newAs\n                };\n            }\n            return {\n                type: \"redirect\",\n                destination: preflight.redirect\n            };\n        }\n        // For SSR requests, they will be handled like normal pages.\n        if (preflight.refresh && !preflight.ssr) {\n            return {\n                type: \"refresh\"\n            };\n        }\n        return {\n            type: \"next\"\n        };\n    }\n    _getPreflightData(params) {\n        const { preflightHref , shouldCache =false , isPreview  } = params;\n        const { href: cacheKey  } = new URL(preflightHref, window.location.href);\n        if (false) {}\n        return fetch(preflightHref, {\n            method: \"HEAD\",\n            credentials: \"same-origin\",\n            headers: {\n                \"x-middleware-preflight\": \"1\"\n            }\n        }).then((res)=>{\n            if (!res.ok) {\n                throw new Error(`Failed to preflight request`);\n            }\n            return {\n                cache: res.headers.get(\"x-middleware-cache\"),\n                redirect: res.headers.get(\"Location\"),\n                refresh: res.headers.has(\"x-middleware-refresh\"),\n                rewrite: res.headers.get(\"x-middleware-rewrite\"),\n                ssr: !!res.headers.get(\"x-middleware-ssr\")\n            };\n        }).then((data)=>{\n            if (shouldCache && data.cache !== \"no-cache\") {\n                this.sde[cacheKey] = data;\n            }\n            return data;\n        }).catch((err)=>{\n            delete this.sde[cacheKey];\n            throw err;\n        });\n    }\n    getInitialProps(Component, ctx) {\n        const { Component: App  } = this.components[\"/_app\"];\n        const AppTree = this._wrapApp(App);\n        ctx.AppTree = AppTree;\n        return (0, _utils).loadGetInitialProps(App, {\n            AppTree,\n            Component,\n            router: this,\n            ctx\n        });\n    }\n    abortComponentLoad(as, routeProps) {\n        if (this.clc) {\n            Router.events.emit(\"routeChangeError\", buildCancellationError(), as, routeProps);\n            this.clc();\n            this.clc = null;\n        }\n    }\n    get route() {\n        return this.state.route;\n    }\n    get pathname() {\n        return this.state.pathname;\n    }\n    get query() {\n        return this.state.query;\n    }\n    get asPath() {\n        return this.state.asPath;\n    }\n    get locale() {\n        return this.state.locale;\n    }\n    get isFallback() {\n        return this.state.isFallback;\n    }\n    get isPreview() {\n        return this.state.isPreview;\n    }\n}\nexports[\"default\"] = Router;\nRouter.events = (0, _mitt).default(); //# sourceMappingURL=router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/router/router.js\n");

/***/ }),

/***/ "./pages/api/items.ts":
/*!****************************!*\
  !*** ./pages/api/items.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"itemSearchResults\": () => (/* binding */ itemSearchResults)\n/* harmony export */ });\n/* harmony import */ var _data_item_cards__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../data/item-cards */ \"./data/item-cards.ts\");\n/* harmony import */ var _common_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/helpers */ \"./common/helpers.ts\");\n\n\nconst itemSearchResults = async (query)=>{\n    const game = (0,_common_helpers__WEBPACK_IMPORTED_MODULE_1__.verifyQueryParam)(query.game, \"fh\");\n    const order = (0,_common_helpers__WEBPACK_IMPORTED_MODULE_1__.verifyQueryParam)(query.order, \"id\");\n    const direction = (0,_common_helpers__WEBPACK_IMPORTED_MODULE_1__.verifyQueryParam)(query.dir, \"asc\");\n    const activations = (0,_common_helpers__WEBPACK_IMPORTED_MODULE_1__.verifyQueryParam)(query.activations);\n    const slot = (0,_common_helpers__WEBPACK_IMPORTED_MODULE_1__.verifyQueryParam)(query.slot);\n    return _data_item_cards__WEBPACK_IMPORTED_MODULE_0__.itemCards[game]?.filter((item)=>{\n        if (slot && item.slot !== slot) return false;\n        if (activations === \"consumed\" && !item.consumed) return false;\n        if (activations === \"spent\" && !item.spent) return false;\n        return true;\n    }).sort((0,_common_helpers__WEBPACK_IMPORTED_MODULE_1__.customSort)(order, direction)) || [];\n};\nconst handler = async (req, res)=>{\n    const { query  } = req;\n    const searchResults = await itemSearchResults(query);\n    res.status(200).json({\n        searchResults: searchResults\n    });\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (handler);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9hcGkvaXRlbXMudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVrRDtBQUNrQjtBQUU3RCxNQUFNRyxpQkFBaUIsR0FBRyxPQUFPQyxLQUV2QyxHQUFLO0lBQ0osTUFBTUMsSUFBSSxHQUFHSCxpRUFBZ0IsQ0FBQ0UsS0FBSyxDQUFDQyxJQUFJLEVBQUUsSUFBSSxDQUFDO0lBQy9DLE1BQU1DLEtBQUssR0FBR0osaUVBQWdCLENBQUNFLEtBQUssQ0FBQ0UsS0FBSyxFQUFFLElBQUksQ0FBQztJQUNqRCxNQUFNQyxTQUFTLEdBQUdMLGlFQUFnQixDQUFDRSxLQUFLLENBQUNJLEdBQUcsRUFBRSxLQUFLLENBQUM7SUFDcEQsTUFBTUMsV0FBVyxHQUFHUCxpRUFBZ0IsQ0FBQ0UsS0FBSyxDQUFDSyxXQUFXLENBQUM7SUFDdkQsTUFBTUMsSUFBSSxHQUFHUixpRUFBZ0IsQ0FBQ0UsS0FBSyxDQUFDTSxJQUFJLENBQUM7SUFFekMsT0FDRVYsdURBQVMsQ0FBQ0ssSUFBSSxDQUFDLEVBQ1hNLE1BQU0sQ0FBQyxDQUFDQyxJQUFJLEdBQUs7UUFDakIsSUFBSUYsSUFBSSxJQUFJRSxJQUFJLENBQUNGLElBQUksS0FBS0EsSUFBSSxFQUFFLE9BQU8sS0FBSyxDQUFDO1FBQzdDLElBQUlELFdBQVcsS0FBSyxVQUFVLElBQUksQ0FBQ0csSUFBSSxDQUFDQyxRQUFRLEVBQUUsT0FBTyxLQUFLLENBQUM7UUFDL0QsSUFBSUosV0FBVyxLQUFLLE9BQU8sSUFBSSxDQUFDRyxJQUFJLENBQUNFLEtBQUssRUFBRSxPQUFPLEtBQUssQ0FBQztRQUN6RCxPQUFPLElBQUksQ0FBQztLQUNiLENBQUMsQ0FDREMsSUFBSSxDQUFDZCwyREFBVSxDQUFDSyxLQUFLLEVBQUVDLFNBQVMsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUMzQztDQUNILENBQUM7QUFFRixNQUFNUyxPQUFPLEdBQUcsT0FBT0MsR0FBbUIsRUFBRUMsR0FBb0IsR0FBSztJQUNuRSxNQUFNLEVBQUVkLEtBQUssR0FBRSxHQUFHYSxHQUFHO0lBQ3JCLE1BQU1FLGFBQWEsR0FBRyxNQUFNaEIsaUJBQWlCLENBQUNDLEtBQUssQ0FBQztJQUNwRGMsR0FBRyxDQUFDRSxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQztRQUFFRixhQUFhLEVBQUVBLGFBQWE7S0FBRSxDQUFDLENBQUM7Q0FDeEQ7QUFFRCxpRUFBZUgsT0FBTyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ2xvb21oYXZlbi1jYXJkLWJyb3dzZXIvLi9wYWdlcy9hcGkvaXRlbXMudHM/ZTczYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IE5leHRBcGlSZXF1ZXN0LCBOZXh0QXBpUmVzcG9uc2UgfSBmcm9tIFwibmV4dFwiO1xuXG5pbXBvcnQgeyBpdGVtQ2FyZHMgfSBmcm9tIFwiLi4vLi4vZGF0YS9pdGVtLWNhcmRzXCI7XG5pbXBvcnQgeyBjdXN0b21Tb3J0LCB2ZXJpZnlRdWVyeVBhcmFtIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9oZWxwZXJzXCI7XG5cbmV4cG9ydCBjb25zdCBpdGVtU2VhcmNoUmVzdWx0cyA9IGFzeW5jIChxdWVyeToge1xuICBba2V5OiBzdHJpbmddOiBzdHJpbmcgfCBzdHJpbmdbXTtcbn0pID0+IHtcbiAgY29uc3QgZ2FtZSA9IHZlcmlmeVF1ZXJ5UGFyYW0ocXVlcnkuZ2FtZSwgXCJmaFwiKTtcbiAgY29uc3Qgb3JkZXIgPSB2ZXJpZnlRdWVyeVBhcmFtKHF1ZXJ5Lm9yZGVyLCBcImlkXCIpO1xuICBjb25zdCBkaXJlY3Rpb24gPSB2ZXJpZnlRdWVyeVBhcmFtKHF1ZXJ5LmRpciwgXCJhc2NcIik7XG4gIGNvbnN0IGFjdGl2YXRpb25zID0gdmVyaWZ5UXVlcnlQYXJhbShxdWVyeS5hY3RpdmF0aW9ucyk7XG4gIGNvbnN0IHNsb3QgPSB2ZXJpZnlRdWVyeVBhcmFtKHF1ZXJ5LnNsb3QpO1xuXG4gIHJldHVybiAoXG4gICAgaXRlbUNhcmRzW2dhbWVdXG4gICAgICA/LmZpbHRlcigoaXRlbSkgPT4ge1xuICAgICAgICBpZiAoc2xvdCAmJiBpdGVtLnNsb3QgIT09IHNsb3QpIHJldHVybiBmYWxzZTtcbiAgICAgICAgaWYgKGFjdGl2YXRpb25zID09PSBcImNvbnN1bWVkXCIgJiYgIWl0ZW0uY29uc3VtZWQpIHJldHVybiBmYWxzZTtcbiAgICAgICAgaWYgKGFjdGl2YXRpb25zID09PSBcInNwZW50XCIgJiYgIWl0ZW0uc3BlbnQpIHJldHVybiBmYWxzZTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9KVxuICAgICAgLnNvcnQoY3VzdG9tU29ydChvcmRlciwgZGlyZWN0aW9uKSkgfHwgW11cbiAgKTtcbn07XG5cbmNvbnN0IGhhbmRsZXIgPSBhc3luYyAocmVxOiBOZXh0QXBpUmVxdWVzdCwgcmVzOiBOZXh0QXBpUmVzcG9uc2UpID0+IHtcbiAgY29uc3QgeyBxdWVyeSB9ID0gcmVxO1xuICBjb25zdCBzZWFyY2hSZXN1bHRzID0gYXdhaXQgaXRlbVNlYXJjaFJlc3VsdHMocXVlcnkpO1xuICByZXMuc3RhdHVzKDIwMCkuanNvbih7IHNlYXJjaFJlc3VsdHM6IHNlYXJjaFJlc3VsdHMgfSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBoYW5kbGVyO1xuIl0sIm5hbWVzIjpbIml0ZW1DYXJkcyIsImN1c3RvbVNvcnQiLCJ2ZXJpZnlRdWVyeVBhcmFtIiwiaXRlbVNlYXJjaFJlc3VsdHMiLCJxdWVyeSIsImdhbWUiLCJvcmRlciIsImRpcmVjdGlvbiIsImRpciIsImFjdGl2YXRpb25zIiwic2xvdCIsImZpbHRlciIsIml0ZW0iLCJjb25zdW1lZCIsInNwZW50Iiwic29ydCIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJzZWFyY2hSZXN1bHRzIiwic3RhdHVzIiwianNvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/api/items.ts\n");

/***/ }),

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"getServerSideProps\": () => (/* binding */ getServerSideProps)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"next/router\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _api_items__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./api/items */ \"./pages/api/items.ts\");\n/* harmony import */ var _hooks_useSpoilers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../hooks/useSpoilers */ \"./hooks/useSpoilers.tsx\");\n/* harmony import */ var _common_helpers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/helpers */ \"./common/helpers.ts\");\n/* harmony import */ var _components_CardList__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/CardList */ \"./components/CardList.tsx\");\n/* harmony import */ var _components_Layout__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/Layout */ \"./components/Layout.tsx\");\n/* harmony import */ var _components_Sort__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../components/Sort */ \"./components/Sort.tsx\");\n\n\n\n\n\n\n\n\n\nconst sortOrderOptions = [\n    {\n        id: \"id\",\n        name: \"Item Number\"\n    },\n    {\n        id: \"cost\",\n        name: \"Cost\"\n    },\n    {\n        id: \"name\",\n        name: \"Name\"\n    }, \n];\nconst slotFilters = [\n    {\n        id: \"head\",\n        name: \"Head\"\n    },\n    {\n        id: \"body\",\n        name: \"Body\"\n    },\n    {\n        id: \"1h\",\n        name: \"1 Hand\"\n    },\n    {\n        id: \"2h\",\n        name: \"2 Hands\"\n    },\n    {\n        id: \"legs\",\n        name: \"Legs\"\n    },\n    {\n        id: \"small\",\n        name: \"Small Item\"\n    }, \n];\nconst activationsFilters = [\n    {\n        id: \"consumed\",\n        name: \"Consumed\"\n    },\n    {\n        id: \"spent\",\n        name: \"Spent\"\n    }, \n];\nconst ItemFilters = ()=>{\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const query = router.query;\n    const handleSlotChange = (newSlot)=>{\n        query.slot === newSlot ? delete query.slot : query.slot = newSlot;\n        router.push({\n            pathname: \"\",\n            query: query\n        });\n    };\n    const handleActivationsChange = (newActivations)=>{\n        query.activations === newActivations ? delete query.activations : query.activations = newActivations;\n        router.push({\n            pathname: \"\",\n            query: query\n        });\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"button-group filters\",\n        children: [\n            slotFilters.map((slot, idx)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: `filter-icon ${query.slot === slot.id ? \"filter-icon-selected\" : \"\"}`,\n                    onClick: ()=>handleSlotChange(slot.id)\n                    ,\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                        alt: \"\",\n                        src: (0,_common_helpers__WEBPACK_IMPORTED_MODULE_5__.getBaseUrl)() + `icons/items/${slot.id}.png`\n                    }, void 0, false, {\n                        fileName: \"/home/nrichman/projects/fh-party-items/pages/index.tsx\",\n                        lineNumber: 72,\n                        columnNumber: 11\n                    }, undefined)\n                }, idx, false, {\n                    fileName: \"/home/nrichman/projects/fh-party-items/pages/index.tsx\",\n                    lineNumber: 66,\n                    columnNumber: 9\n                }, undefined)\n            ),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                style: {\n                    marginLeft: \"16px\"\n                }\n            }, void 0, false, {\n                fileName: \"/home/nrichman/projects/fh-party-items/pages/index.tsx\",\n                lineNumber: 75,\n                columnNumber: 7\n            }, undefined),\n            activationsFilters.map((activation, idx)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: `filter-icon ${query.activations === activation.id ? \"filter-icon-selected\" : \"\"}`,\n                    onClick: ()=>handleActivationsChange(activation.id)\n                    ,\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                        alt: \"\",\n                        src: (0,_common_helpers__WEBPACK_IMPORTED_MODULE_5__.getBaseUrl)() + `icons/items/${activation.id}.png`\n                    }, void 0, false, {\n                        fileName: \"/home/nrichman/projects/fh-party-items/pages/index.tsx\",\n                        lineNumber: 83,\n                        columnNumber: 11\n                    }, undefined)\n                }, idx, false, {\n                    fileName: \"/home/nrichman/projects/fh-party-items/pages/index.tsx\",\n                    lineNumber: 77,\n                    columnNumber: 9\n                }, undefined)\n            )\n        ]\n    }, void 0, true, {\n        fileName: \"/home/nrichman/projects/fh-party-items/pages/index.tsx\",\n        lineNumber: 64,\n        columnNumber: 5\n    }, undefined);\n};\nconst Items = ({ searchResults  })=>{\n    const { 0: search , 1: setSearch  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const { spoilers  } = (0,_hooks_useSpoilers__WEBPACK_IMPORTED_MODULE_4__.useSpoilers)();\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const game = (0,_common_helpers__WEBPACK_IMPORTED_MODULE_5__.verifyQueryParam)(router.query.game, \"fh\");\n    const handleSearchChange = (e)=>{\n        setSearch(parseInt(e.target.value, 10));\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        document.documentElement.style.setProperty(\"--primary\", (0,_common_helpers__WEBPACK_IMPORTED_MODULE_5__.getCharacterColor)(null));\n    }, []);\n    const cardList = searchResults?.filter((0,_common_helpers__WEBPACK_IMPORTED_MODULE_5__.itemSpoilerFilter)(spoilers)).filter((i)=>!search || i.id === search\n    );\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Layout__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n        description: (0,_common_helpers__WEBPACK_IMPORTED_MODULE_5__.getDescription)(game, \"Item Cards\", searchResults),\n        title: (0,_common_helpers__WEBPACK_IMPORTED_MODULE_5__.getTitle)(game, \"Items\"),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"toolbar\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"toolbar-inner\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Sort__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                            sortOrderOptions: sortOrderOptions\n                        }, void 0, false, {\n                            fileName: \"/home/nrichman/projects/fh-party-items/pages/index.tsx\",\n                            lineNumber: 123,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex\",\n                            style: {\n                                fontWeight: 600,\n                                justifyContent: \"center\"\n                            },\n                            children: [\n                                \"Item ID:\",\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    className: \"id-filter\",\n                                    onChange: handleSearchChange,\n                                    type: \"number\"\n                                }, void 0, false, {\n                                    fileName: \"/home/nrichman/projects/fh-party-items/pages/index.tsx\",\n                                    lineNumber: 129,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/nrichman/projects/fh-party-items/pages/index.tsx\",\n                            lineNumber: 124,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ItemFilters, {}, void 0, false, {\n                            fileName: \"/home/nrichman/projects/fh-party-items/pages/index.tsx\",\n                            lineNumber: 135,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/nrichman/projects/fh-party-items/pages/index.tsx\",\n                    lineNumber: 122,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/home/nrichman/projects/fh-party-items/pages/index.tsx\",\n                lineNumber: 121,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_CardList__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                cardList: cardList,\n                showId: true\n            }, void 0, false, {\n                fileName: \"/home/nrichman/projects/fh-party-items/pages/index.tsx\",\n                lineNumber: 138,\n                columnNumber: 8\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/nrichman/projects/fh-party-items/pages/index.tsx\",\n        lineNumber: 117,\n        columnNumber: 5\n    }, undefined);\n};\nconst getServerSideProps = async (context)=>{\n    const searchResults = await (0,_api_items__WEBPACK_IMPORTED_MODULE_3__.itemSearchResults)(context.query);\n    return {\n        props: {\n            searchResults\n        }\n    };\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Items);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.tsx\n");

/***/ }),

/***/ "./node_modules/next/dist/lib/is-error.js":
/*!************************************************!*\
  !*** ./node_modules/next/dist/lib/is-error.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = isError;\nexports.getProperError = getProperError;\nvar _isPlainObject = __webpack_require__(/*! ../shared/lib/is-plain-object */ \"../shared/lib/is-plain-object\");\nfunction isError(err) {\n    return typeof err === 'object' && err !== null && 'name' in err && 'message' in err;\n}\nfunction getProperError(err) {\n    if (isError(err)) {\n        return err;\n    }\n    if (true) {\n        // provide better error for case where `throw undefined`\n        // is called in development\n        if (typeof err === 'undefined') {\n            return new Error('An undefined error was thrown, ' + 'see here for more info: https://nextjs.org/docs/messages/threw-undefined');\n        }\n        if (err === null) {\n            return new Error('A null error was thrown, ' + 'see here for more info: https://nextjs.org/docs/messages/threw-undefined');\n        }\n    }\n    return new Error((0, _isPlainObject).isPlainObject(err) ? JSON.stringify(err) : err + '');\n}\n\n//# sourceMappingURL=is-error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9pcy1lcnJvci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Ysc0JBQXNCO0FBQ3RCLHFCQUFxQixtQkFBTyxDQUFDLG9FQUErQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsSUFBc0M7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2dsb29taGF2ZW4tY2FyZC1icm93c2VyLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9saWIvaXMtZXJyb3IuanM/MTc4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGlzRXJyb3I7XG5leHBvcnRzLmdldFByb3BlckVycm9yID0gZ2V0UHJvcGVyRXJyb3I7XG52YXIgX2lzUGxhaW5PYmplY3QgPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9pcy1wbGFpbi1vYmplY3RcIik7XG5mdW5jdGlvbiBpc0Vycm9yKGVycikge1xuICAgIHJldHVybiB0eXBlb2YgZXJyID09PSAnb2JqZWN0JyAmJiBlcnIgIT09IG51bGwgJiYgJ25hbWUnIGluIGVyciAmJiAnbWVzc2FnZScgaW4gZXJyO1xufVxuZnVuY3Rpb24gZ2V0UHJvcGVyRXJyb3IoZXJyKSB7XG4gICAgaWYgKGlzRXJyb3IoZXJyKSkge1xuICAgICAgICByZXR1cm4gZXJyO1xuICAgIH1cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcbiAgICAgICAgLy8gcHJvdmlkZSBiZXR0ZXIgZXJyb3IgZm9yIGNhc2Ugd2hlcmUgYHRocm93IHVuZGVmaW5lZGBcbiAgICAgICAgLy8gaXMgY2FsbGVkIGluIGRldmVsb3BtZW50XG4gICAgICAgIGlmICh0eXBlb2YgZXJyID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBFcnJvcignQW4gdW5kZWZpbmVkIGVycm9yIHdhcyB0aHJvd24sICcgKyAnc2VlIGhlcmUgZm9yIG1vcmUgaW5mbzogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvdGhyZXctdW5kZWZpbmVkJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVyciA9PT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBFcnJvcignQSBudWxsIGVycm9yIHdhcyB0aHJvd24sICcgKyAnc2VlIGhlcmUgZm9yIG1vcmUgaW5mbzogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvdGhyZXctdW5kZWZpbmVkJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG5ldyBFcnJvcigoMCwgX2lzUGxhaW5PYmplY3QpLmlzUGxhaW5PYmplY3QoZXJyKSA/IEpTT04uc3RyaW5naWZ5KGVycikgOiBlcnIgKyAnJyk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzLWVycm9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/lib/is-error.js\n");

/***/ }),

/***/ "./node_modules/next/link.js":
/*!***********************************!*\
  !*** ./node_modules/next/link.js ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./dist/client/link */ \"./node_modules/next/dist/client/link.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9saW5rLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLHlHQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL2dsb29taGF2ZW4tY2FyZC1icm93c2VyLy4vbm9kZV9tb2R1bGVzL25leHQvbGluay5qcz83NWIzIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L2NsaWVudC9saW5rJylcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/link.js\n");

/***/ }),

/***/ "@fortawesome/free-solid-svg-icons":
/*!****************************************************!*\
  !*** external "@fortawesome/free-solid-svg-icons" ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@fortawesome/free-solid-svg-icons");

/***/ }),

/***/ "@fortawesome/react-fontawesome":
/*!*************************************************!*\
  !*** external "@fortawesome/react-fontawesome" ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@fortawesome/react-fontawesome");

/***/ }),

/***/ "next/dist/compiled/react-is":
/*!**********************************************!*\
  !*** external "next/dist/compiled/react-is" ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/react-is");

/***/ }),

/***/ "../shared/lib/head-manager-context":
/*!***************************************************************!*\
  !*** external "next/dist/shared/lib/head-manager-context.js" ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/head-manager-context.js");

/***/ }),

/***/ "../i18n/normalize-locale-path":
/*!*********************************************************************!*\
  !*** external "next/dist/shared/lib/i18n/normalize-locale-path.js" ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/i18n/normalize-locale-path.js");

/***/ }),

/***/ "../shared/lib/is-plain-object":
/*!**********************************************************!*\
  !*** external "next/dist/shared/lib/is-plain-object.js" ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/is-plain-object.js");

/***/ }),

/***/ "../mitt":
/*!***********************************************!*\
  !*** external "next/dist/shared/lib/mitt.js" ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/mitt.js");

/***/ }),

/***/ "../page-path/denormalize-page-path":
/*!**************************************************************************!*\
  !*** external "next/dist/shared/lib/page-path/denormalize-page-path.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/page-path/denormalize-page-path.js");

/***/ }),

/***/ "../shared/lib/router-context":
/*!*********************************************************!*\
  !*** external "next/dist/shared/lib/router-context.js" ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router-context.js");

/***/ }),

/***/ "./utils/format-url":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/format-url.js" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/format-url.js");

/***/ }),

/***/ "../shared/lib/router/utils/get-asset-path-from-route":
/*!*********************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/get-asset-path-from-route.js" ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/get-asset-path-from-route.js");

/***/ }),

/***/ "./utils/get-middleware-regex":
/*!****************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/get-middleware-regex.js" ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/get-middleware-regex.js");

/***/ }),

/***/ "./utils/is-dynamic":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/is-dynamic.js" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/is-dynamic.js");

/***/ }),

/***/ "./utils/parse-relative-url":
/*!**************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/parse-relative-url.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/parse-relative-url.js");

/***/ }),

/***/ "./utils/querystring":
/*!*******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/querystring.js" ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/querystring.js");

/***/ }),

/***/ "./utils/resolve-rewrites":
/*!************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/resolve-rewrites.js" ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/resolve-rewrites.js");

/***/ }),

/***/ "./utils/route-matcher":
/*!*********************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/route-matcher.js" ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/route-matcher.js");

/***/ }),

/***/ "./utils/route-regex":
/*!*******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/route-regex.js" ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/route-regex.js");

/***/ }),

/***/ "../utils":
/*!************************************************!*\
  !*** external "next/dist/shared/lib/utils.js" ***!
  \************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/utils.js");

/***/ }),

/***/ "next/head":
/*!****************************!*\
  !*** external "next/head" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/head");

/***/ }),

/***/ "next/router":
/*!******************************!*\
  !*** external "next/router" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/router");

/***/ }),

/***/ "next/script":
/*!******************************!*\
  !*** external "next/script" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/script");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react-infinite-scroller":
/*!******************************************!*\
  !*** external "react-infinite-scroller" ***!
  \******************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-infinite-scroller");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "./data/item_unlocks.json":
/*!********************************!*\
  !*** ./data/item_unlocks.json ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"items":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,51,54,56,65,66,68,76,77,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,104,105,106,109,112,113,117,119,120,121,122,123,124,125,126,127,156,159,174,175,181,185,187,188,189,191,195,212,223,232,236,244,245]}');

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/index.tsx"));
module.exports = __webpack_exports__;

})();