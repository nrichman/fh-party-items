/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./public/global.css":
/*!*******************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./public/global.css ***!
  \*******************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root {\\n  --primary: #432423;\\n  --grey-light: #f1f3f5;\\n  --grey: #d5d7d9;\\n  --warning: #721c24;\\n}\\n\\nhtml {\\n  background-color: var(--primary);\\n}\\n\\nbody {\\n  padding: 0;\\n  margin: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\\n    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\\n  font-size: 14px;\\n  background-image: url(\\\"/background.jpeg\\\");\\n  background-repeat: repeat;\\n}\\n\\n/* --- MISC --- */\\ninput::-webkit-outer-spin-button,\\ninput::-webkit-inner-spin-button {\\n  -webkit-appearance: none;\\n  margin: 0;\\n}\\n\\n/* Firefox */\\ninput[type=\\\"number\\\"] {\\n  -moz-appearance: textfield;\\n}\\n\\nbutton {\\n  background-color: var(--grey-light);\\n  border: 1px solid var(--primary);\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  cursor: pointer;\\n  height: 24px;\\n  padding: 2px 8px;\\n}\\n\\nbutton:hover {\\n  background-color: white;\\n}\\n\\n.button-group {\\n  align-items: center;\\n  display: flex;\\n  justify-content: flex-end;\\n  min-width: 230px;\\n}\\n\\n.button-group-left {\\n  align-items: center;\\n  display: flex;\\n  justify-content: flex-start;\\n  min-width: 230px;\\n}\\n\\n.button-group > *:not(:nth-child(1)) {\\n  margin-left: 8px;\\n}\\n\\n.button-group-left > *:not(:nth-child(1)) {\\n  margin-left: 8px;\\n}\\n\\n.empty {\\n  align-items: center;\\n  color: var(--warning);\\n  display: flex;\\n  flex-direction: column;\\n  padding: 12px;\\n  margin-top: 24px;\\n  text-align: center;\\n}\\n\\n.empty svg {\\n  margin-bottom: 16px;\\n}\\n\\n.flex {\\n  align-items: center;\\n  display: flex;\\n}\\n\\n.invisible {\\n  color: transparent;\\n  letter-spacing: 0px;\\n  margin-top: 12px;\\n  font-size: 16px;\\n  pointer-events: none;\\n  position: absolute;\\n  text-align: center;\\n  width: 100%;\\n}\\n\\n.main {\\n  align-items: center;\\n  display: flex;\\n  flex: 1 1;\\n  flex-direction: column;\\n  min-height: calc(100vh - 56px);\\n}\\n\\n.issues {\\n  align-self: center;\\n  margin: 12px 0;\\n}\\n\\n.issues a {\\n  color: black;\\n  font-size: 13px;\\n  text-decoration: underline;\\n}\\n\\ninput[type=\\\"checkbox\\\"],\\ninput[type=\\\"radio\\\"] {\\n  accent-color: #432423;\\n  cursor: pointer;\\n}\\n\\n/* --- CARDS --- */\\n.card-list {\\n  align-items: stretch;\\n  box-sizing: border-box;\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n  margin-top: 16px;\\n  max-width: 1100px;\\n  padding: 0 12px;\\n  width: 100%;\\n}\\n\\n.card {\\n  border-radius: 12px;\\n  box-sizing: border-box;\\n  position: relative;\\n  flex: 1 0 21%;\\n  margin: 4px;\\n}\\n\\n.card-horizontal {\\n  border-radius: 12px;\\n  box-sizing: border-box;\\n  position: relative;\\n  flex: 1 0 32%;\\n  margin: 4px;\\n}\\n\\n.card-img {\\n  border-radius: 12px;\\n  text-align: center;\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.card-inner {\\n  border-radius: 12px;\\n  background-image: repeating-linear-gradient(\\n    -55deg,\\n    #ddd,\\n    #ddd 5px,\\n    #ccc 5px,\\n    #ccc 10px\\n  );\\n  color: black;\\n  font-weight: 500;\\n  text-align: center;\\n  transition: transform 600ms;\\n  transform-style: preserve-3d;\\n  width: 100%;\\n  -webkit-transform-style: preserve-3d;\\n}\\n\\n.card-inner-flipped {\\n  transform: rotateY(180deg);\\n}\\n\\n.card-img-front,\\n.card-img-back {\\n  backface-visibility: hidden;\\n  transform-style: preserve-3d;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  -webkit-backface-visibility: hidden;\\n  -webkit-transform-style: preserve-3d;\\n}\\n\\n.card-img-back {\\n  transform: rotateY(180deg);\\n  -webkit-transform: rotateY(180deg);\\n}\\n\\n.card-id {\\n  align-items: center;\\n  background-color: white;\\n  border-radius: 100%;\\n  display: flex;\\n  font-weight: 600;\\n  font-size: 10px;\\n  justify-content: center;\\n  opacity: 0.7;\\n  position: absolute;\\n  top: 8px;\\n  left: 4px;\\n  height: 20px;\\n  width: 20px;\\n  z-index: 5;\\n}\\n\\n.card-flip-btn,\\n.card-flip-btn-back {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border-radius: 100%;\\n  opacity: 0.7;\\n  height: 40px;\\n  width: 40px;\\n  position: absolute;\\n  top: 10px;\\n  right: 10px;\\n}\\n\\n.card-flip-btn-back,\\n.card-flip-btn-back:hover {\\n  background-color: black;\\n}\\n\\n.card-flip-btn:hover,\\n.card-flip-btn-back:hover {\\n  opacity: 0.9;\\n}\\n\\n.card-flip-svg,\\n.card-flip-svg-back {\\n  border-radius: 100%;\\n  height: 20px;\\n  width: 20px;\\n}\\n\\n.card-flip-svg-back {\\n  color: white;\\n}\\n\\n.monster-stat-card {\\n  box-sizing: border-box;\\n  position: relative;\\n  margin: 0 16px;\\n  max-width: 400px;\\n  overflow: hidden;\\n  width: 90%;\\n}\\n\\n.monster-img-outer {\\n  background-image: repeating-linear-gradient(\\n    -55deg,\\n    #ddd,\\n    #ddd 5px,\\n    #ccc 5px,\\n    #ccc 10px\\n  );\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.monster-img {\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  width: 100%;\\n  position:absolute;\\n  display: none;\\n  transition: transform 500ms;\\n}\\n\\n.monster-img-active {\\n  display: block;\\n}\\n\\n.card-index-btn {\\n  border-radius: 100%;\\n  opacity: 0.7;\\n  height: 40px;\\n  width: 40px;\\n  position: absolute;\\n  font-weight: 700;\\n  font-size: 18px;\\n  top: 10px;\\n  left: 10px;\\n}\\n\\n/* --- DROPDOWN --- */\\n.dropdown {\\n  position: relative;\\n  display: inline-block;\\n  flex: 0 0 auto;\\n}\\n\\n.dropdown-anchor {\\n  align-items: center;\\n  -webkit-appearance: none;\\n     -moz-appearance: none;\\n          appearance: none;\\n  background-color: var(--grey-light);\\n  border: 1px solid var(--primary);\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  cursor: pointer;\\n  display: flex;\\n  justify-content: center;\\n  height: 24px;\\n  min-width: 50px;\\n  padding: 2px 8px;\\n  margin-right: 8px;\\n}\\n\\n.dropdown-anchor:hover {\\n  background-color: white;\\n}\\n\\n.dropdown select {\\n  background-image: url(\\\"/select.svg\\\");\\n  background-position: right center;\\n  background-size: 20px 30px;\\n  background-repeat: no-repeat;\\n  padding-right: 18px;\\n}\\n\\n.dropdownnav {\\n  height: 100%;\\n  z-index: 10;\\n}\\n\\n.dropdownnav-anchor {\\n  align-items: center;\\n  border-radius: 4px;\\n  color: var(--grey);\\n  cursor: pointer;\\n  display: flex;\\n  height: 100%;\\n  padding: 0 12px;\\n}\\n\\n.dropdownnav:hover .dropdownnav-anchor {\\n  color: white;\\n  text-decoration: underline;\\n  -moz-user-select: none;\\n   -ms-user-select: none;\\n       user-select: none;\\n  -webkit-user-select: none;\\n}\\n\\n.dropdownnav-content {\\n  display: none;\\n  position: absolute;\\n  background-color: #f9f9f9;\\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\\n  z-index: 1;\\n}\\n\\n.dropdownnav-hover:hover .dropdownnav-content {\\n  display: block;\\n}\\n\\n.dropdownnav-option {\\n  color: black;\\n  cursor: pointer;\\n  display: flex;\\n  padding: 12px 12px;\\n  text-decoration: none;\\n  -moz-user-select: none;\\n   -ms-user-select: none;\\n       user-select: none;\\n  -webkit-user-select: none;\\n}\\n\\n.dropdownnav-option:hover {\\n  background-color: var(--grey);\\n}\\n\\n/* --- FILTERS --- */\\n.id-filter {\\n  background-color: var(--grey-light);\\n  border: 1px solid var(--primary);\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  cursor: pointer;\\n  height: 24px;\\n  margin: 0 8px;\\n  padding: 2px 8px;\\n  text-align: right;\\n  width: 44px;\\n}\\n\\n.filters {\\n  align-items: center;\\n  display: flex;\\n  flex-wrap: wrap;\\n  padding: 0 12px;\\n}\\n\\n.filters > *:not(:nth-child(1)) {\\n  margin-left: 8px;\\n}\\n\\n.filter-icon {\\n  align-items: center;\\n  border-bottom: 2px solid transparent;\\n  cursor: pointer;\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.filter-icon img {\\n  height: 24px;\\n  width: 24px;\\n}\\n\\n.filter-icon svg {\\n  height: 20px;\\n  width: 20px;\\n}\\n\\n.filter-icon-selected {\\n  border-bottom: 2px solid var(--primary);\\n}\\n\\n/* --- MODAL --- */\\n.modal {\\n  display: none;\\n  position: fixed;\\n  z-index: 10;\\n  left: 0;\\n  top: 0;\\n  width: 100%;\\n  height: 100%;\\n  overflow: auto;\\n  background-color: rgba(0, 0, 0, 0.75);\\n}\\n\\n.modal-content {\\n  margin: auto;\\n  position: relative;\\n  min-height: 120px;\\n  max-width: 720px;\\n  width: 80%;\\n}\\n\\n.modal-content img {\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.modal .close {\\n  align-items: center;\\n  background-color: black;\\n  border: 2px solid white;\\n  border-radius: 50%;\\n  cursor: pointer;\\n  display: flex;\\n  justify-content: center;\\n  height: 36px;\\n  opacity: 0.8;\\n  position: absolute;\\n  right: 12px;\\n  top: 12px;\\n  width: 36px;\\n}\\n\\n.modal .close:hover,\\n.modal .close:focus {\\n  opacity: 1;\\n}\\n\\n/* --- SETTINGS / SPOILERS --- */\\n.settings-overlay {\\n  background-color: black;\\n  height: 100%;\\n  left: 0;\\n  opacity: 0.3;\\n  position: fixed;\\n  top: 0;\\n  width: 100%;\\n  z-index: 15;\\n}\\n\\n.settings {\\n  background-image: url(\\\"/background.jpeg\\\");\\n  background-repeat: repeat;\\n  height: 100%;\\n  opacity: 1;\\n  overflow-x: hidden;\\n  position: fixed;\\n  right: 0;\\n  top: 0;\\n  transition: 0.5s;\\n  width: 360px;\\n  white-space: nowrap;\\n  z-index: 15;\\n}\\n\\n.settings-inner {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 16px 16px;\\n}\\n\\n.settings-header {\\n  align-items: center;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.spoilers {\\n  padding: 0 4px;\\n  margin-bottom: 16px;\\n}\\n\\n.spoilers ul {\\n  margin: 0 0 12px;\\n  padding: 0;\\n}\\n\\n.spoilers li {\\n  list-style-type: none;\\n  padding: 0;\\n}\\n\\n.spoiler-class-icon {\\n  margin-right: 4px;\\n  height: 22px;\\n  width: 22px;\\n}\\n\\n.spoilers-close-icon {\\n  align-self: flex-end;\\n  cursor: pointer;\\n  height: 24px;\\n  width: 24px;\\n}\\n\\n.spoiler-check-option {\\n  align-items: center;\\n  cursor: pointer;\\n  display: flex;\\n  min-height: 28px;\\n}\\n\\n.spoiler-check-option input {\\n  margin-right: 8px;\\n}\\n\\n.spoiler-section {\\n  align-items: center;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.spoiler-header {\\n  align-self: center;\\n}\\n\\n.spoiler-header h4 {\\n  margin: 16px 0;\\n}\\n\\n.spoilers .prosperity-spoilers {\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: 8px;\\n}\\n\\n.spoilers .prosperity-option {\\n  align-items: center;\\n  cursor: pointer;\\n  display: flex;\\n}\\n\\n.spoilers .prosperity-option input {\\n  height: 20px;\\n  margin-right: 4px;\\n}\\n\\n.spoilers .prosperity-spoilers h5 {\\n  align-self: center;\\n  margin: 0;\\n}\\n\\n.spoilers .prosperity-spoilers ul {\\n  columns: 3;\\n  -moz-columns: 3;\\n  -webkit-columns: 3;\\n}\\n\\n.spoilers-warning {\\n  border-radius: 12px;\\n  color: var(--warning);\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: 8px;\\n  padding: 12px;\\n  white-space: normal;\\n}\\n\\n.spoilers-warning span {\\n  margin-top: 12px;\\n  text-align: center;\\n}\\n\\n.spoilers .character-spoilers {\\n  columns: 2;\\n  -moz-columns: 2;\\n  -webkit-columns: 2;\\n}\\n\\n.spoilers .item-spoilers {\\n  display: flex;\\n}\\n\\n/* --- SLIDER --- */\\n.slider {\\n  align-items: center;\\n  display: flex;\\n  flex-direction: column;\\n  margin: 0 20px;\\n  margin-top: -4px;\\n  width: 240px;\\n}\\n\\n.slider span {\\n  color: var(--primary);\\n  font-size: 16px;\\n  font-weight: 500;\\n  margin-bottom: 8px;\\n}\\n\\n.slider input[type=\\\"range\\\"] {\\n  -webkit-appearance: none !important;\\n  background: var(--primary);\\n  border: none;\\n  height: 2px;\\n  max-width: 240px;\\n  outline: none;\\n  width: 80%;\\n}\\n\\n.slider input[type=\\\"range\\\"]::-webkit-slider-thumb {\\n  -webkit-appearance: none !important;\\n  background: var(--grey-light);\\n  border: 2px solid var(--primary);\\n  border-radius: 50%;\\n  cursor: pointer;\\n  height: 18px;\\n  width: 18px;\\n}\\n\\n.slider input[type=\\\"range\\\"]::-webkit-slider-thumb:hover {\\n  background: white;\\n}\\n\\n.slider input[type=\\\"range\\\"]::-moz-range-thumb {\\n  -moz-appearance: none !important;\\n  background: var(--grey-light);\\n  border: 2px solid var(--primary);\\n  border-radius: 50%;\\n  cursor: pointer;\\n  height: 14px;\\n  width: 14px;\\n}\\n\\n.slider input[type=\\\"range\\\"]::-moz-range-thumb:hover {\\n  background: white;\\n}\\n\\n/* --- TOOLBAR --- */\\n.toolbar {\\n  align-items: center;\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\\n  display: flex;\\n  min-height: 56px;\\n  margin-bottom: 16px;\\n  width: 100%;\\n}\\n\\n.toolbar-inner {\\n  align-items: center;\\n  box-sizing: border-box;\\n  display: flex;\\n  justify-content: space-between;\\n  max-width: 1100px;\\n  margin: auto;\\n  padding: 8px 12px;\\n  width: 100%;\\n}\\n\\n.toolbar-inner > div {\\n  flex: 1 1;\\n}\\n\\n.toolbar .sort {\\n  align-items: center;\\n  display: flex;\\n  flex-shrink: 0;\\n}\\n\\n.milestone-filter {\\n  align-items: center;\\n  display: flex;\\n  color: var(--primary);\\n  cursor: pointer;\\n  font-size: 14px;\\n  font-weight: 500;\\n  margin-left: 8px;\\n}\\n\\n.milestone-filter input[type=\\\"checkbox\\\"] {\\n  accent-color: var(--primary);\\n  margin-right: 4px;\\n  height: 14px;\\n  width: 14px;\\n}\\n\\n.milestone-filter-mobile {\\n  display: none;\\n}\\n\\n/* --- TOPBAR --- */\\n.topbar {\\n  background-color: var(--primary);\\n  display: flex;\\n  flex-direction: column;\\n  width: 100%;\\n}\\n\\n.topbar-inner {\\n  align-items: center;\\n  box-sizing: border-box;\\n  display: flex;\\n  height: 56px;\\n  justify-content: space-between;\\n  justify-self: center;\\n  max-width: 1100px;\\n  margin: auto;\\n  width: 100%;\\n}\\n\\n.topbar .header-links {\\n  align-items: center;\\n  display: flex;\\n  height: 100%;\\n  justify-content: space-between;\\n}\\n\\n.topbar .header-icon {\\n  color: inherit;\\n  height: 14px;\\n  margin-right: 8px;\\n  width: 14px;\\n}\\n\\n.topbar .view-more {\\n  align-items: center;\\n  color: var(--grey);\\n  cursor: pointer;\\n  display: flex;\\n  height: 100%;\\n  padding: 0 12px;\\n  -moz-user-select: none;\\n   -ms-user-select: none;\\n       user-select: none;\\n  -webkit-user-select: none;\\n}\\n\\n.topbar .view-more:hover {\\n  color: white;\\n  text-decoration: underline;\\n}\\n\\n.topbar .view-more span {\\n  align-items: center;\\n  display: flex;\\n}\\n\\n.topbar .view-more:focus {\\n  color: var(--grey-light);\\n}\\n\\n/* --- MEDIA QUERIES --- */\\n@media (max-width: 920px) {\\n  .card {\\n    flex: 1 0 26.5%;\\n  }\\n  .card-horizontal {\\n    flex: 1 0 32.75%;\\n  }\\n}\\n\\n@media (max-width: 620px) {\\n  .button-group,\\n  .button-group-left {\\n    justify-content: center;\\n  }\\n\\n  .card {\\n    flex: 1 0 32.75%;\\n  }\\n\\n  .card-horizontal {\\n    flex: 1 0 51%;\\n  }\\n\\n  .filters {\\n    justify-content: center;\\n    margin-top: 8px;\\n  }\\n\\n  .home {\\n    width: 300px;\\n  }\\n\\n  .milestone-filter-desktop {\\n    display: none;\\n  }\\n\\n  .milestone-filter-mobile {\\n    display: flex;\\n    margin-bottom: 8px;\\n  }\\n\\n  .modal-content {\\n    width: 100%;\\n  }\\n\\n  .settings {\\n    height: 100%;\\n    width: 100%;\\n  }\\n\\n  .settings-inner {\\n    height: 100%;\\n  }\\n\\n  .slider {\\n    margin-bottom: 8px;\\n    width: 240px;\\n  }\\n\\n  .topbar .desktop {\\n    display: none;\\n  }\\n\\n  .topbar .mobile {\\n    display: flex;\\n  }\\n\\n  .toolbar-inner {\\n    flex-direction: column;\\n    padding: 12px;\\n  }\\n\\n  .toolbar-inner > *:not(:nth-child(1)) {\\n    margin-top: 12px;\\n  }\\n\\n  .toolbar .sort {\\n    justify-content: center;\\n  }\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://public/global.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\":root {\\n  --primary: #432423;\\n  --grey-light: #f1f3f5;\\n  --grey: #d5d7d9;\\n  --warning: #721c24;\\n}\\n\\nhtml {\\n  background-color: var(--primary);\\n}\\n\\nbody {\\n  padding: 0;\\n  margin: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\\n    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\\n  font-size: 14px;\\n  background-image: url(\\\"/background.jpeg\\\");\\n  background-repeat: repeat;\\n}\\n\\n/* --- MISC --- */\\ninput::-webkit-outer-spin-button,\\ninput::-webkit-inner-spin-button {\\n  -webkit-appearance: none;\\n  margin: 0;\\n}\\n\\n/* Firefox */\\ninput[type=\\\"number\\\"] {\\n  -moz-appearance: textfield;\\n}\\n\\nbutton {\\n  background-color: var(--grey-light);\\n  border: 1px solid var(--primary);\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  cursor: pointer;\\n  height: 24px;\\n  padding: 2px 8px;\\n}\\n\\nbutton:hover {\\n  background-color: white;\\n}\\n\\n.button-group {\\n  align-items: center;\\n  display: flex;\\n  justify-content: flex-end;\\n  min-width: 230px;\\n}\\n\\n.button-group-left {\\n  align-items: center;\\n  display: flex;\\n  justify-content: flex-start;\\n  min-width: 230px;\\n}\\n\\n.button-group > *:not(:nth-child(1)) {\\n  margin-left: 8px;\\n}\\n\\n.button-group-left > *:not(:nth-child(1)) {\\n  margin-left: 8px;\\n}\\n\\n.empty {\\n  align-items: center;\\n  color: var(--warning);\\n  display: flex;\\n  flex-direction: column;\\n  padding: 12px;\\n  margin-top: 24px;\\n  text-align: center;\\n}\\n\\n.empty svg {\\n  margin-bottom: 16px;\\n}\\n\\n.flex {\\n  align-items: center;\\n  display: flex;\\n}\\n\\n.invisible {\\n  color: transparent;\\n  letter-spacing: 0px;\\n  margin-top: 12px;\\n  font-size: 16px;\\n  pointer-events: none;\\n  position: absolute;\\n  text-align: center;\\n  width: 100%;\\n}\\n\\n.main {\\n  align-items: center;\\n  display: flex;\\n  flex: 1;\\n  flex-direction: column;\\n  min-height: calc(100vh - 56px);\\n}\\n\\n.issues {\\n  align-self: center;\\n  margin: 12px 0;\\n}\\n\\n.issues a {\\n  color: black;\\n  font-size: 13px;\\n  text-decoration: underline;\\n}\\n\\ninput[type=\\\"checkbox\\\"],\\ninput[type=\\\"radio\\\"] {\\n  accent-color: #432423;\\n  cursor: pointer;\\n}\\n\\n/* --- CARDS --- */\\n.card-list {\\n  align-items: stretch;\\n  box-sizing: border-box;\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n  margin-top: 16px;\\n  max-width: 1100px;\\n  padding: 0 12px;\\n  width: 100%;\\n}\\n\\n.card {\\n  border-radius: 12px;\\n  box-sizing: border-box;\\n  position: relative;\\n  flex: 1 0 21%;\\n  margin: 4px;\\n}\\n\\n.card-horizontal {\\n  border-radius: 12px;\\n  box-sizing: border-box;\\n  position: relative;\\n  flex: 1 0 32%;\\n  margin: 4px;\\n}\\n\\n.card-img {\\n  border-radius: 12px;\\n  text-align: center;\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.card-inner {\\n  border-radius: 12px;\\n  background-image: repeating-linear-gradient(\\n    -55deg,\\n    #ddd,\\n    #ddd 5px,\\n    #ccc 5px,\\n    #ccc 10px\\n  );\\n  color: black;\\n  font-weight: 500;\\n  text-align: center;\\n  transition: transform 600ms, -webkit-transform 600ms;\\n  transform-style: preserve-3d;\\n  width: 100%;\\n  -webkit-transform-style: preserve-3d;\\n}\\n\\n.card-inner-flipped {\\n  transform: rotateY(180deg);\\n}\\n\\n.card-img-front,\\n.card-img-back {\\n  backface-visibility: hidden;\\n  transform-style: preserve-3d;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  -webkit-backface-visibility: hidden;\\n  -webkit-transform-style: preserve-3d;\\n}\\n\\n.card-img-back {\\n  transform: rotateY(180deg);\\n  -webkit-transform: rotateY(180deg);\\n}\\n\\n.card-id {\\n  align-items: center;\\n  background-color: white;\\n  border-radius: 100%;\\n  display: flex;\\n  font-weight: 600;\\n  font-size: 10px;\\n  justify-content: center;\\n  opacity: 0.7;\\n  position: absolute;\\n  top: 8px;\\n  left: 4px;\\n  height: 20px;\\n  width: 20px;\\n  z-index: 5;\\n}\\n\\n.card-flip-btn,\\n.card-flip-btn-back {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border-radius: 100%;\\n  opacity: 0.7;\\n  height: 40px;\\n  width: 40px;\\n  position: absolute;\\n  top: 10px;\\n  right: 10px;\\n}\\n\\n.card-flip-btn-back,\\n.card-flip-btn-back:hover {\\n  background-color: black;\\n}\\n\\n.card-flip-btn:hover,\\n.card-flip-btn-back:hover {\\n  opacity: 0.9;\\n}\\n\\n.card-flip-svg,\\n.card-flip-svg-back {\\n  border-radius: 100%;\\n  height: 20px;\\n  width: 20px;\\n}\\n\\n.card-flip-svg-back {\\n  color: white;\\n}\\n\\n.monster-stat-card {\\n  box-sizing: border-box;\\n  position: relative;\\n  margin: 0 16px;\\n  max-width: 400px;\\n  overflow: hidden;\\n  width: 90%;\\n}\\n\\n.monster-img-outer {\\n  background-image: repeating-linear-gradient(\\n    -55deg,\\n    #ddd,\\n    #ddd 5px,\\n    #ccc 5px,\\n    #ccc 10px\\n  );\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.monster-img {\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  width: 100%;\\n  position:absolute;\\n  display: none;\\n  transition: transform 500ms, -webkit-transform 500ms;\\n}\\n\\n.monster-img-active {\\n  display: block;\\n}\\n\\n.card-index-btn {\\n  border-radius: 100%;\\n  opacity: 0.7;\\n  height: 40px;\\n  width: 40px;\\n  position: absolute;\\n  font-weight: 700;\\n  font-size: 18px;\\n  top: 10px;\\n  left: 10px;\\n}\\n\\n/* --- DROPDOWN --- */\\n.dropdown {\\n  position: relative;\\n  display: inline-block;\\n  flex: 0 0 auto;\\n}\\n\\n.dropdown-anchor {\\n  align-items: center;\\n  appearance: none;\\n  background-color: var(--grey-light);\\n  border: 1px solid var(--primary);\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  cursor: pointer;\\n  display: flex;\\n  justify-content: center;\\n  height: 24px;\\n  min-width: 50px;\\n  padding: 2px 8px;\\n  margin-right: 8px;\\n}\\n\\n.dropdown-anchor:hover {\\n  background-color: white;\\n}\\n\\n.dropdown select {\\n  background-image: url(\\\"/select.svg\\\");\\n  background-position: right center;\\n  background-size: 20px 30px;\\n  background-repeat: no-repeat;\\n  padding-right: 18px;\\n}\\n\\n.dropdownnav {\\n  height: 100%;\\n  z-index: 10;\\n}\\n\\n.dropdownnav-anchor {\\n  align-items: center;\\n  border-radius: 4px;\\n  color: var(--grey);\\n  cursor: pointer;\\n  display: flex;\\n  height: 100%;\\n  padding: 0 12px;\\n}\\n\\n.dropdownnav:hover .dropdownnav-anchor {\\n  color: white;\\n  text-decoration: underline;\\n  user-select: none;\\n  -webkit-user-select: none;\\n}\\n\\n.dropdownnav-content {\\n  display: none;\\n  position: absolute;\\n  background-color: #f9f9f9;\\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\\n  z-index: 1;\\n}\\n\\n.dropdownnav-hover:hover .dropdownnav-content {\\n  display: block;\\n}\\n\\n.dropdownnav-option {\\n  color: black;\\n  cursor: pointer;\\n  display: flex;\\n  padding: 12px 12px;\\n  text-decoration: none;\\n  user-select: none;\\n  -webkit-user-select: none;\\n}\\n\\n.dropdownnav-option:hover {\\n  background-color: var(--grey);\\n}\\n\\n/* --- FILTERS --- */\\n.id-filter {\\n  background-color: var(--grey-light);\\n  border: 1px solid var(--primary);\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  cursor: pointer;\\n  height: 24px;\\n  margin: 0 8px;\\n  padding: 2px 8px;\\n  text-align: right;\\n  width: 44px;\\n}\\n\\n.filters {\\n  align-items: center;\\n  display: flex;\\n  flex-wrap: wrap;\\n  padding: 0 12px;\\n}\\n\\n.filters > *:not(:nth-child(1)) {\\n  margin-left: 8px;\\n}\\n\\n.filter-icon {\\n  align-items: center;\\n  border-bottom: 2px solid transparent;\\n  cursor: pointer;\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.filter-icon img {\\n  height: 24px;\\n  width: 24px;\\n}\\n\\n.filter-icon svg {\\n  height: 20px;\\n  width: 20px;\\n}\\n\\n.filter-icon-selected {\\n  border-bottom: 2px solid var(--primary);\\n}\\n\\n/* --- MODAL --- */\\n.modal {\\n  display: none;\\n  position: fixed;\\n  z-index: 10;\\n  left: 0;\\n  top: 0;\\n  width: 100%;\\n  height: 100%;\\n  overflow: auto;\\n  background-color: rgba(0, 0, 0, 0.75);\\n}\\n\\n.modal-content {\\n  margin: auto;\\n  position: relative;\\n  min-height: 120px;\\n  max-width: 720px;\\n  width: 80%;\\n}\\n\\n.modal-content img {\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.modal .close {\\n  align-items: center;\\n  background-color: black;\\n  border: 2px solid white;\\n  border-radius: 50%;\\n  cursor: pointer;\\n  display: flex;\\n  justify-content: center;\\n  height: 36px;\\n  opacity: 0.8;\\n  position: absolute;\\n  right: 12px;\\n  top: 12px;\\n  width: 36px;\\n}\\n\\n.modal .close:hover,\\n.modal .close:focus {\\n  opacity: 1;\\n}\\n\\n/* --- SETTINGS / SPOILERS --- */\\n.settings-overlay {\\n  background-color: black;\\n  height: 100%;\\n  left: 0;\\n  opacity: 0.3;\\n  position: fixed;\\n  top: 0;\\n  width: 100%;\\n  z-index: 15;\\n}\\n\\n.settings {\\n  background-image: url(\\\"/background.jpeg\\\");\\n  background-repeat: repeat;\\n  height: 100%;\\n  opacity: 1;\\n  overflow-x: hidden;\\n  position: fixed;\\n  right: 0;\\n  top: 0;\\n  transition: 0.5s;\\n  width: 360px;\\n  white-space: nowrap;\\n  z-index: 15;\\n}\\n\\n.settings-inner {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 16px 16px;\\n}\\n\\n.settings-header {\\n  align-items: center;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.spoilers {\\n  padding: 0 4px;\\n  margin-bottom: 16px;\\n}\\n\\n.spoilers ul {\\n  margin: 0 0 12px;\\n  padding: 0;\\n}\\n\\n.spoilers li {\\n  list-style-type: none;\\n  padding: 0;\\n}\\n\\n.spoiler-class-icon {\\n  margin-right: 4px;\\n  height: 22px;\\n  width: 22px;\\n}\\n\\n.spoilers-close-icon {\\n  align-self: flex-end;\\n  cursor: pointer;\\n  height: 24px;\\n  width: 24px;\\n}\\n\\n.spoiler-check-option {\\n  align-items: center;\\n  cursor: pointer;\\n  display: flex;\\n  min-height: 28px;\\n}\\n\\n.spoiler-check-option input {\\n  margin-right: 8px;\\n}\\n\\n.spoiler-section {\\n  align-items: center;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.spoiler-header {\\n  align-self: center;\\n}\\n\\n.spoiler-header h4 {\\n  margin: 16px 0;\\n}\\n\\n.spoilers .prosperity-spoilers {\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: 8px;\\n}\\n\\n.spoilers .prosperity-option {\\n  align-items: center;\\n  cursor: pointer;\\n  display: flex;\\n}\\n\\n.spoilers .prosperity-option input {\\n  height: 20px;\\n  margin-right: 4px;\\n}\\n\\n.spoilers .prosperity-spoilers h5 {\\n  align-self: center;\\n  margin: 0;\\n}\\n\\n.spoilers .prosperity-spoilers ul {\\n  columns: 3;\\n  -moz-columns: 3;\\n  -webkit-columns: 3;\\n}\\n\\n.spoilers-warning {\\n  border-radius: 12px;\\n  color: var(--warning);\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: 8px;\\n  padding: 12px;\\n  white-space: normal;\\n}\\n\\n.spoilers-warning span {\\n  margin-top: 12px;\\n  text-align: center;\\n}\\n\\n.spoilers .character-spoilers {\\n  columns: 2;\\n  -moz-columns: 2;\\n  -webkit-columns: 2;\\n}\\n\\n.spoilers .item-spoilers {\\n  display: flex;\\n}\\n\\n/* --- SLIDER --- */\\n.slider {\\n  align-items: center;\\n  display: flex;\\n  flex-direction: column;\\n  margin: 0 20px;\\n  margin-top: -4px;\\n  width: 240px;\\n}\\n\\n.slider span {\\n  color: var(--primary);\\n  font-size: 16px;\\n  font-weight: 500;\\n  margin-bottom: 8px;\\n}\\n\\n.slider input[type=\\\"range\\\"] {\\n  -webkit-appearance: none !important;\\n  background: var(--primary);\\n  border: none;\\n  height: 2px;\\n  max-width: 240px;\\n  outline: none;\\n  width: 80%;\\n}\\n\\n.slider input[type=\\\"range\\\"]::-webkit-slider-thumb {\\n  -webkit-appearance: none !important;\\n  background: var(--grey-light);\\n  border: 2px solid var(--primary);\\n  border-radius: 50%;\\n  cursor: pointer;\\n  height: 18px;\\n  width: 18px;\\n}\\n\\n.slider input[type=\\\"range\\\"]::-webkit-slider-thumb:hover {\\n  background: white;\\n}\\n\\n.slider input[type=\\\"range\\\"]::-moz-range-thumb {\\n  -moz-appearance: none !important;\\n  background: var(--grey-light);\\n  border: 2px solid var(--primary);\\n  border-radius: 50%;\\n  cursor: pointer;\\n  height: 14px;\\n  width: 14px;\\n}\\n\\n.slider input[type=\\\"range\\\"]::-moz-range-thumb:hover {\\n  background: white;\\n}\\n\\n/* --- TOOLBAR --- */\\n.toolbar {\\n  align-items: center;\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\\n  display: flex;\\n  min-height: 56px;\\n  margin-bottom: 16px;\\n  width: 100%;\\n}\\n\\n.toolbar-inner {\\n  align-items: center;\\n  box-sizing: border-box;\\n  display: flex;\\n  justify-content: space-between;\\n  max-width: 1100px;\\n  margin: auto;\\n  padding: 8px 12px;\\n  width: 100%;\\n}\\n\\n.toolbar-inner > div {\\n  flex: 1;\\n}\\n\\n.toolbar .sort {\\n  align-items: center;\\n  display: flex;\\n  flex-shrink: 0;\\n}\\n\\n.milestone-filter {\\n  align-items: center;\\n  display: flex;\\n  color: var(--primary);\\n  cursor: pointer;\\n  font-size: 14px;\\n  font-weight: 500;\\n  margin-left: 8px;\\n}\\n\\n.milestone-filter input[type=\\\"checkbox\\\"] {\\n  accent-color: var(--primary);\\n  margin-right: 4px;\\n  height: 14px;\\n  width: 14px;\\n}\\n\\n.milestone-filter-mobile {\\n  display: none;\\n}\\n\\n/* --- TOPBAR --- */\\n.topbar {\\n  background-color: var(--primary);\\n  display: flex;\\n  flex-direction: column;\\n  width: 100%;\\n}\\n\\n.topbar-inner {\\n  align-items: center;\\n  box-sizing: border-box;\\n  display: flex;\\n  height: 56px;\\n  justify-content: space-between;\\n  justify-self: center;\\n  max-width: 1100px;\\n  margin: auto;\\n  width: 100%;\\n}\\n\\n.topbar .header-links {\\n  align-items: center;\\n  display: flex;\\n  height: 100%;\\n  justify-content: space-between;\\n}\\n\\n.topbar .header-icon {\\n  color: inherit;\\n  height: 14px;\\n  margin-right: 8px;\\n  width: 14px;\\n}\\n\\n.topbar .view-more {\\n  align-items: center;\\n  color: var(--grey);\\n  cursor: pointer;\\n  display: flex;\\n  height: 100%;\\n  padding: 0 12px;\\n  user-select: none;\\n  -webkit-user-select: none;\\n}\\n\\n.topbar .view-more:hover {\\n  color: white;\\n  text-decoration: underline;\\n}\\n\\n.topbar .view-more span {\\n  align-items: center;\\n  display: flex;\\n}\\n\\n.topbar .view-more:focus {\\n  color: var(--grey-light);\\n}\\n\\n/* --- MEDIA QUERIES --- */\\n@media (max-width: 920px) {\\n  .card {\\n    flex: 1 0 26.5%;\\n  }\\n  .card-horizontal {\\n    flex: 1 0 32.75%;\\n  }\\n}\\n\\n@media (max-width: 620px) {\\n  .button-group,\\n  .button-group-left {\\n    justify-content: center;\\n  }\\n\\n  .card {\\n    flex: 1 0 32.75%;\\n  }\\n\\n  .card-horizontal {\\n    flex: 1 0 51%;\\n  }\\n\\n  .filters {\\n    justify-content: center;\\n    margin-top: 8px;\\n  }\\n\\n  .home {\\n    width: 300px;\\n  }\\n\\n  .milestone-filter-desktop {\\n    display: none;\\n  }\\n\\n  .milestone-filter-mobile {\\n    display: flex;\\n    margin-bottom: 8px;\\n  }\\n\\n  .modal-content {\\n    width: 100%;\\n  }\\n\\n  .settings {\\n    height: 100%;\\n    width: 100%;\\n  }\\n\\n  .settings-inner {\\n    height: 100%;\\n  }\\n\\n  .slider {\\n    margin-bottom: 8px;\\n    width: 240px;\\n  }\\n\\n  .topbar .desktop {\\n    display: none;\\n  }\\n\\n  .topbar .mobile {\\n    display: flex;\\n  }\\n\\n  .toolbar-inner {\\n    flex-direction: column;\\n    padding: 12px;\\n  }\\n\\n  .toolbar-inner > *:not(:nth-child(1)) {\\n    margin-top: 12px;\\n  }\\n\\n  .toolbar .sort {\\n    justify-content: center;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./public/global.css\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js ***!
  \************************************************************************************/
/***/ (function(module) {

"use strict";
eval("\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/ // css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function(useSourceMap) {\n    var list = [] // return the list of modules as css string\n    ;\n    list.toString = function toString() {\n        return this.map(function(item) {\n            var content = cssWithMappingToString(item, useSourceMap);\n            if (item[2]) {\n                return '@media '.concat(item[2], ' {').concat(content, '}');\n            }\n            return content;\n        }).join('');\n    } // import a list of modules into the list\n    ;\n    // eslint-disable-next-line func-names\n    list.i = function(modules, mediaQuery, dedupe) {\n        if (typeof modules === 'string') {\n            // eslint-disable-next-line no-param-reassign\n            modules = [\n                [\n                    null,\n                    modules,\n                    ''\n                ]\n            ];\n        }\n        var alreadyImportedModules = {};\n        if (dedupe) {\n            for(var i = 0; i < this.length; i++){\n                // eslint-disable-next-line prefer-destructuring\n                var id = this[i][0];\n                if (id != null) {\n                    alreadyImportedModules[id] = true;\n                }\n            }\n        }\n        for(var _i = 0; _i < modules.length; _i++){\n            var item = [].concat(modules[_i]);\n            if (dedupe && alreadyImportedModules[item[0]]) {\n                continue;\n            }\n            if (mediaQuery) {\n                if (!item[2]) {\n                    item[2] = mediaQuery;\n                } else {\n                    item[2] = ''.concat(mediaQuery, ' and ').concat(item[2]);\n                }\n            }\n            list.push(item);\n        }\n    };\n    return list;\n};\nfunction cssWithMappingToString(item, useSourceMap) {\n    var content = item[1] || '' // eslint-disable-next-line prefer-destructuring\n    ;\n    var cssMapping = item[3];\n    if (!cssMapping) {\n        return content;\n    }\n    if (useSourceMap && typeof btoa === 'function') {\n        var sourceMapping = toComment(cssMapping);\n        var sourceURLs = cssMapping.sources.map(function(source) {\n            return '/*# sourceURL='.concat(cssMapping.sourceRoot || '').concat(source, ' */');\n        });\n        return [\n            content\n        ].concat(sourceURLs).concat([\n            sourceMapping\n        ]).join('\\n');\n    }\n    return [\n        content\n    ].join('\\n');\n} // Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n    var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,'.concat(base64);\n    return '/*# '.concat(data, ' */');\n}\n\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2FwaS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxxQkFBcUI7QUFDekU7QUFDQTtBQUNBLFNBQVM7QUFDVCxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGlCQUFpQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixxQkFBcUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxjQUFjO0FBQ3JFO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9hcGkuanM/Y2E0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovIC8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgbGlzdCA9IFtdIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgICA7XG4gICAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG4gICAgICAgICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgIHJldHVybiAnQG1lZGlhICcuY29uY2F0KGl0ZW1bMl0sICcgeycpLmNvbmNhdChjb250ZW50LCAnfScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICAgIH0pLmpvaW4oJycpO1xuICAgIH0gLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgICA7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiAgICBsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICAgICAgICBtb2R1bGVzID0gW1xuICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgbW9kdWxlcyxcbiAgICAgICAgICAgICAgICAgICAgJydcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICBdO1xuICAgICAgICB9XG4gICAgICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgICAgIGlmIChkZWR1cGUpIHtcbiAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgICAgICAgICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuICAgICAgICAgICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspe1xuICAgICAgICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfaV0pO1xuICAgICAgICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICAgICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpdGVtWzJdID0gJycuY29uY2F0KG1lZGlhUXVlcnksICcgYW5kICcpLmNvbmNhdChpdGVtWzJdKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBsaXN0O1xufTtcbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG4gICAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgIDtcbiAgICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gICAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH1cbiAgICBpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuICAgICAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24oc291cmNlKSB7XG4gICAgICAgICAgICByZXR1cm4gJy8qIyBzb3VyY2VVUkw9Jy5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8ICcnKS5jb25jYXQoc291cmNlLCAnICovJyk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgY29udGVudFxuICAgICAgICBdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW1xuICAgICAgICAgICAgc291cmNlTWFwcGluZ1xuICAgICAgICBdKS5qb2luKCdcXG4nKTtcbiAgICB9XG4gICAgcmV0dXJuIFtcbiAgICAgICAgY29udGVudFxuICAgIF0uam9pbignXFxuJyk7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgICB2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnLmNvbmNhdChiYXNlNjQpO1xuICAgIHJldHVybiAnLyojICcuY29uY2F0KGRhdGEsICcgKi8nKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app! ***!
  \*******************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.tsx\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfYXBwJnBhZ2U9JTJGX2FwcCEuanMiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxpREFBeUI7QUFDaEQ7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzY3ODIiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9fYXBwXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL19hcHBcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!\n");

/***/ }),

/***/ "./public/global.css":
/*!***************************!*\
  !*** ./public/global.css ***!
  \***************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! !../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./global.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./public/global.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                // These elements should always exist. If they do not,\n                // this code should fail.\n                var anchorElement = document.querySelector('#__next_css__DO_NOT_USE__');\n                var parentNode = anchorElement.parentNode// Normally <head>\n                ;\n                // Each style tag should be placed right before our\n                // anchor. By inserting before and not after, we do not\n                // need to track the last inserted element.\n                parentNode.insertBefore(element, anchorElement);\n            };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === 'default') {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === 'default') {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./global.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./public/global.css\",\n      function () {\n        content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./global.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[3].oneOf[8].use[2]!./public/global.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvZ2xvYmFsLmNzcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsb05BQXdHO0FBQzFILDBCQUEwQixtQkFBTyxDQUFDLHFlQUE4Tzs7QUFFaFI7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7O0FBR0EsSUFBSSxJQUFVO0FBQ2QseUJBQXlCLFVBQVU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQUksaUJBQWlCO0FBQ3JCLE1BQU0scWVBQThPO0FBQ3BQO0FBQ0Esa0JBQWtCLG1CQUFPLENBQUMscWVBQThPOztBQUV4UTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsVUFBVTs7QUFFMUI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxFQUFFLFVBQVU7QUFDWjtBQUNBLEdBQUc7QUFDSDs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wdWJsaWMvZ2xvYmFsLmNzcz9iODQ0Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtc3R5bGUtbG9hZGVyL3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1szXS5vbmVPZls4XS51c2VbMV0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzNdLm9uZU9mWzhdLnVzZVsyXSEuL2dsb2JhbC5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgLy8gVGhlc2UgZWxlbWVudHMgc2hvdWxkIGFsd2F5cyBleGlzdC4gSWYgdGhleSBkbyBub3QsXG4gICAgICAgICAgICAgICAgLy8gdGhpcyBjb2RlIHNob3VsZCBmYWlsLlxuICAgICAgICAgICAgICAgIHZhciBhbmNob3JFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI19fbmV4dF9jc3NfX0RPX05PVF9VU0VfXycpO1xuICAgICAgICAgICAgICAgIHZhciBwYXJlbnROb2RlID0gYW5jaG9yRWxlbWVudC5wYXJlbnROb2RlLy8gTm9ybWFsbHkgPGhlYWQ+XG4gICAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgICAgIC8vIEVhY2ggc3R5bGUgdGFnIHNob3VsZCBiZSBwbGFjZWQgcmlnaHQgYmVmb3JlIG91clxuICAgICAgICAgICAgICAgIC8vIGFuY2hvci4gQnkgaW5zZXJ0aW5nIGJlZm9yZSBhbmQgbm90IGFmdGVyLCB3ZSBkbyBub3RcbiAgICAgICAgICAgICAgICAvLyBuZWVkIHRvIHRyYWNrIHRoZSBsYXN0IGluc2VydGVkIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZWxlbWVudCwgYW5jaG9yRWxlbWVudCk7XG4gICAgICAgICAgICB9O1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5pZiAobW9kdWxlLmhvdCkge1xuICBpZiAoIWNvbnRlbnQubG9jYWxzIHx8IG1vZHVsZS5ob3QuaW52YWxpZGF0ZSkge1xuICAgIHZhciBpc0VxdWFsTG9jYWxzID0gZnVuY3Rpb24gaXNFcXVhbExvY2FscyhhLCBiLCBpc05hbWVkRXhwb3J0KSB7XG4gICAgaWYgKCFhICYmIGIgfHwgYSAmJiAhYikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGxldCBwO1xuICAgIGZvcihwIGluIGEpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSAnZGVmYXVsdCcpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhW3BdICE9PSBiW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yKHAgaW4gYil7XG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09ICdkZWZhdWx0Jykge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFhW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuICAgIHZhciBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzNdLm9uZU9mWzhdLnVzZVsxXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbM10ub25lT2ZbOF0udXNlWzJdIS4vZ2xvYmFsLmNzc1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbM10ub25lT2ZbOF0udXNlWzFdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1szXS5vbmVPZls4XS51c2VbMl0hLi9nbG9iYWwuY3NzXCIpO1xuXG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoIWlzRXF1YWxMb2NhbHMob2xkTG9jYWxzLCBjb250ZW50LmxvY2FscykpIHtcbiAgICAgICAgICAgICAgICBtb2R1bGUuaG90LmludmFsaWRhdGUoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgICAgICAgICAgIHVwZGF0ZShjb250ZW50KTtcbiAgICAgIH1cbiAgICApXG4gIH1cblxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7XG4gICAgdXBkYXRlKCk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/global.css\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\nconst isOldIE = function isOldIE() {\n    let memo;\n    return function memorize() {\n        if (typeof memo === 'undefined') {\n            // Test for IE <= 9 as proposed by Browserhacks\n            // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n            // Tests for existence of standard globals is to allow style-loader\n            // to operate correctly into non-standard environments\n            // @see https://github.com/webpack-contrib/style-loader/issues/177\n            memo = Boolean(window && document && document.all && !window.atob);\n        }\n        return memo;\n    };\n}();\nconst getTarget = function getTarget() {\n    const memo = {};\n    return function memorize(target) {\n        if (typeof memo[target] === 'undefined') {\n            let styleTarget = document.querySelector(target);\n            // Special case to return head of iframe instead of iframe itself\n            if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n                try {\n                    // This will throw an exception if access to iframe is blocked\n                    // due to cross-origin restrictions\n                    styleTarget = styleTarget.contentDocument.head;\n                } catch (e) {\n                    // istanbul ignore next\n                    styleTarget = null;\n                }\n            }\n            memo[target] = styleTarget;\n        }\n        return memo[target];\n    };\n}();\nconst stylesInDom = [];\nfunction getIndexByIdentifier(identifier) {\n    let result = -1;\n    for(let i = 0; i < stylesInDom.length; i++){\n        if (stylesInDom[i].identifier === identifier) {\n            result = i;\n            break;\n        }\n    }\n    return result;\n}\nfunction modulesToDom(list, options) {\n    const idCountMap = {};\n    const identifiers = [];\n    for(let i = 0; i < list.length; i++){\n        const item = list[i];\n        const id = options.base ? item[0] + options.base : item[0];\n        const count = idCountMap[id] || 0;\n        const identifier = id + ' ' + count.toString();\n        idCountMap[id] = count + 1;\n        const index = getIndexByIdentifier(identifier);\n        const obj = {\n            css: item[1],\n            media: item[2],\n            sourceMap: item[3]\n        };\n        if (index !== -1) {\n            stylesInDom[index].references++;\n            stylesInDom[index].updater(obj);\n        } else {\n            stylesInDom.push({\n                identifier: identifier,\n                updater: addStyle(obj, options),\n                references: 1\n            });\n        }\n        identifiers.push(identifier);\n    }\n    return identifiers;\n}\nfunction insertStyleElement(options) {\n    const style = document.createElement('style');\n    const attributes = options.attributes || {};\n    if (typeof attributes.nonce === 'undefined') {\n        const nonce = // eslint-disable-next-line no-undef\n         true ? __webpack_require__.nc : 0;\n        if (nonce) {\n            attributes.nonce = nonce;\n        }\n    }\n    Object.keys(attributes).forEach(function(key) {\n        style.setAttribute(key, attributes[key]);\n    });\n    if (typeof options.insert === 'function') {\n        options.insert(style);\n    } else {\n        const target = getTarget(options.insert || 'head');\n        if (!target) {\n            throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n        }\n        target.appendChild(style);\n    }\n    return style;\n}\nfunction removeStyleElement(style) {\n    // istanbul ignore if\n    if (style.parentNode === null) {\n        return false;\n    }\n    style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */ const replaceText = function replaceText() {\n    const textStore = [];\n    return function replace(index, replacement) {\n        textStore[index] = replacement;\n        return textStore.filter(Boolean).join('\\n');\n    };\n}();\nfunction applyToSingletonTag(style, index, remove, obj) {\n    const css = remove ? '' : obj.media ? '@media ' + obj.media + ' {' + obj.css + '}' : obj.css;\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = replaceText(index, css);\n    } else {\n        const cssNode = document.createTextNode(css);\n        const childNodes = style.childNodes;\n        if (childNodes[index]) {\n            style.removeChild(childNodes[index]);\n        }\n        if (childNodes.length) {\n            style.insertBefore(cssNode, childNodes[index]);\n        } else {\n            style.appendChild(cssNode);\n        }\n    }\n}\nfunction applyToTag(style, options, obj) {\n    let css = obj.css;\n    const media = obj.media;\n    const sourceMap = obj.sourceMap;\n    if (media) {\n        style.setAttribute('media', media);\n    } else {\n        style.removeAttribute('media');\n    }\n    if (sourceMap && typeof btoa !== 'undefined') {\n        css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */';\n    }\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        while(style.firstChild){\n            style.removeChild(style.firstChild);\n        }\n        style.appendChild(document.createTextNode(css));\n    }\n}\nlet singleton = null;\nlet singletonCounter = 0;\nfunction addStyle(obj, options) {\n    let style;\n    let update;\n    let remove;\n    if (options.singleton) {\n        const styleIndex = singletonCounter++;\n        style = singleton || (singleton = insertStyleElement(options));\n        update = applyToSingletonTag.bind(null, style, styleIndex, false);\n        remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n    } else {\n        style = insertStyleElement(options);\n        update = applyToTag.bind(null, style, options);\n        remove = function() {\n            removeStyleElement(style);\n        };\n    }\n    update(obj);\n    return function updateStyle(newObj) {\n        if (newObj) {\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n                return;\n            }\n            update(obj = newObj);\n        } else {\n            remove();\n        }\n    };\n}\nmodule.exports = function(list, options) {\n    options = options || {};\n    // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n    // tags it will allow on a page\n    if (!options.singleton && typeof options.singleton !== 'boolean') {\n        options.singleton = isOldIE();\n    }\n    list = list || [];\n    let lastIdentifiers = modulesToDom(list, options);\n    return function update(newList) {\n        newList = newList || [];\n        if (Object.prototype.toString.call(newList) !== '[object Array]') {\n            return;\n        }\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            stylesInDom[index].references--;\n        }\n        const newLastIdentifiers = modulesToDom(newList, options);\n        for(let i1 = 0; i1 < lastIdentifiers.length; i1++){\n            const identifier = lastIdentifiers[i1];\n            const index = getIndexByIdentifier(identifier);\n            if (stylesInDom[index].references === 0) {\n                stylesInDom[index].updater();\n                stylesInDom.splice(index, 1);\n            }\n        }\n        lastIdentifiers = newLastIdentifiers;\n    };\n};\n\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n");

/***/ }),

/***/ "./hooks/useSpoilers.tsx":
/*!*******************************!*\
  !*** ./hooks/useSpoilers.tsx ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SpoilersProvider\": function() { return /* binding */ SpoilersProvider; },\n/* harmony export */   \"defaultSpoilersContextValue\": function() { return /* binding */ defaultSpoilersContextValue; },\n/* harmony export */   \"useSpoilers\": function() { return /* binding */ useSpoilers; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _data_item_unlocks_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/item_unlocks.json */ \"./data/item_unlocks.json\");\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\nvar _this = undefined;\n\n\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\nvar defaultSpoilersContextValue = {\n    items: _data_item_unlocks_json__WEBPACK_IMPORTED_MODULE_2__.items\n};\nvar SpoilersContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    spoilers: defaultSpoilersContextValue,\n    setSpoilers: function() {}\n});\nvar SpoilersProvider = function(param) {\n    var children = param.children;\n    _s();\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(defaultSpoilersContextValue), spoilers1 = ref[0], setSpoilers = ref[1];\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        var storageSpoilers = localStorage.getItem(\"spoilers\");\n        if (!storageSpoilers) {\n            setSpoilers(function(spoilers) {\n                return _objectSpread({}, spoilers, {\n                    loading: false\n                });\n            });\n            return;\n        }\n        var parsedSpoilers = JSON.parse(storageSpoilers);\n        if (!parsedSpoilers) {\n            localStorage.delete(\"spoilers\");\n            setSpoilers(function(spoilers) {\n                return _objectSpread({}, spoilers, {\n                    loading: false\n                });\n            });\n            return;\n        }\n        parsedSpoilers.characters = new Set(parsedSpoilers === null || parsedSpoilers === void 0 ? void 0 : parsedSpoilers.characters);\n        setSpoilers(_objectSpread({}, parsedSpoilers, {\n            loading: false\n        }));\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(SpoilersContext.Provider, {\n        value: {\n            spoilers: spoilers1,\n            setSpoilers: setSpoilers\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/home/nrichman/projects/fh-party-items/hooks/useSpoilers.tsx\",\n        lineNumber: 43,\n        columnNumber: 5\n    }, _this);\n};\n_s(SpoilersProvider, \"vgYw/ZWb4qdkaKgdheMB5BKNW5Q=\");\n_c = SpoilersProvider;\nvar useSpoilers = function() {\n    _s1();\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(SpoilersContext), spoilers = ref.spoilers, setSpoilers = ref.setSpoilers;\n    var updateSpoilers = function(newSpoilers) {\n        localStorage.setItem(\"spoilers\", JSON.stringify(_objectSpread({}, newSpoilers)));\n        setSpoilers(newSpoilers);\n    };\n    return {\n        spoilers: spoilers,\n        updateSpoilers: updateSpoilers\n    };\n};\n_s1(useSpoilers, \"unEWfFLYchKJm+hj2n3D15VsdNw=\");\nvar _c;\n$RefreshReg$(_c, \"SpoilersProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ob29rcy91c2VTcG9pbGVycy50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXVFO0FBRWhCOztBQU9oRCxJQUFNSywyQkFBMkIsR0FBYTtJQUNuREMsS0FBSyxFQUFFRiwwREFBcUI7Q0FDN0IsQ0FBQztBQUVGLElBQU1HLGVBQWUsaUJBQUdQLG9EQUFhLENBQTJCO0lBQzlEUSxRQUFRLEVBQUVILDJCQUEyQjtJQUNyQ0ksV0FBVyxFQUFFLFdBQU0sRUFBRztDQUN2QixDQUFDO0FBRUssSUFBTUMsZ0JBQWdCLEdBQUcsZ0JBQWtCO1FBQWZDLFFBQVEsU0FBUkEsUUFBUTs7SUFDekMsSUFBZ0NSLEdBRS9CLEdBRitCQSwrQ0FBUSxDQUN0Q0UsMkJBQTJCLENBQzVCLEVBckJILFNBbUJpQixHQUFpQkYsR0FFL0IsR0FGYyxFQW5CakIsV0FtQjhCLEdBQUlBLEdBRS9CLEdBRjJCO0lBSTVCRCxnREFBUyxDQUFDLFdBQU07UUFDZCxJQUFNVSxlQUFlLEdBQUdDLFlBQVksQ0FBQ0MsT0FBTyxDQUFDLFVBQVUsQ0FBQztRQUN4RCxJQUFJLENBQUNGLGVBQWUsRUFBRTtZQUNwQkgsV0FBVyxDQUFDLFNBQUNELFFBQVE7dUJBQU0sa0JBQUtBLFFBQVE7b0JBQUVPLE9BQU8sRUFBRSxLQUFLO2tCQUFFO2FBQUMsQ0FBQyxDQUFDO1lBQzdELE9BQU87U0FDUjtRQUVELElBQU1DLGNBQWMsR0FBR0MsSUFBSSxDQUFDQyxLQUFLLENBQUNOLGVBQWUsQ0FBQztRQUNsRCxJQUFJLENBQUNJLGNBQWMsRUFBRTtZQUNuQkgsWUFBWSxDQUFDTSxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7WUFDaENWLFdBQVcsQ0FBQyxTQUFDRCxRQUFRO3VCQUFNLGtCQUFLQSxRQUFRO29CQUFFTyxPQUFPLEVBQUUsS0FBSztrQkFBRTthQUFDLENBQUMsQ0FBQztZQUM3RCxPQUFPO1NBQ1I7UUFFREMsY0FBYyxDQUFDSSxVQUFVLEdBQUcsSUFBSUMsR0FBRyxDQUFDTCxjQUFjLGFBQWRBLGNBQWMsV0FBWSxHQUExQkEsS0FBQUEsQ0FBMEIsR0FBMUJBLGNBQWMsQ0FBRUksVUFBVSxDQUFDLENBQUM7UUFDaEVYLFdBQVcsQ0FBQyxrQkFBS08sY0FBYztZQUFFRCxPQUFPLEVBQUUsS0FBSztVQUFFLENBQUMsQ0FBQztLQUNwRCxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBRVAscUJBQ0UsOERBQUNSLGVBQWUsQ0FBQ2UsUUFBUTtRQUFDQyxLQUFLLEVBQUU7WUFBRWYsUUFBUSxFQUFSQSxTQUFRO1lBQUVDLFdBQVcsRUFBRUEsV0FBVztTQUFFO2tCQUNwRUUsUUFBUTs7Ozs7YUFDZ0IsQ0FDM0I7Q0FDSCxDQUFDO0dBNUJXRCxnQkFBZ0I7QUFBaEJBLEtBQUFBLGdCQUFnQjtBQThCdEIsSUFBTWMsV0FBVyxHQUFHLFdBQU07O0lBQy9CLElBQWtDdkIsR0FBMkIsR0FBM0JBLGlEQUFVLENBQUNNLGVBQWUsQ0FBQyxFQUFyREMsUUFBUSxHQUFrQlAsR0FBMkIsQ0FBckRPLFFBQVEsRUFBRUMsV0FBVyxHQUFLUixHQUEyQixDQUEzQ1EsV0FBVztJQUU3QixJQUFNZ0IsY0FBYyxHQUFHLFNBQUNDLFdBQXFCLEVBQUs7UUFDaERiLFlBQVksQ0FBQ2MsT0FBTyxDQUNsQixVQUFVLEVBQ1ZWLElBQUksQ0FBQ1csU0FBUyxDQUFDLGtCQUNWRixXQUFXLENBQ2YsQ0FBQyxDQUNILENBQUM7UUFDRmpCLFdBQVcsQ0FBQ2lCLFdBQVcsQ0FBQyxDQUFDO0tBQzFCO0lBRUQsT0FBTztRQUFFbEIsUUFBUSxFQUFSQSxRQUFRO1FBQUVpQixjQUFjLEVBQWRBLGNBQWM7S0FBRSxDQUFDO0NBQ3JDLENBQUM7SUFkV0QsV0FBVyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ob29rcy91c2VTcG9pbGVycy50c3g/OTlmMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDb250ZXh0LCB1c2VDb250ZXh0LCB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBTcG9pbGVycyB9IGZyb20gXCIuLi9jb21tb24vdHlwZXNcIjtcbmltcG9ydCBkZWZhdWx0U3BvaWxlcnMgZnJvbSBcIi4uL2RhdGEvaXRlbV91bmxvY2tzLmpzb25cIlxuXG5pbnRlcmZhY2UgU3BvaWxlcnNDb250ZXh0SW50ZXJmYWNlIHtcbiAgc3BvaWxlcnM6IFNwb2lsZXJzO1xuICBzZXRTcG9pbGVyczogKHNjOiBTcG9pbGVycykgPT4gdm9pZDtcbn1cblxuZXhwb3J0IGNvbnN0IGRlZmF1bHRTcG9pbGVyc0NvbnRleHRWYWx1ZTogU3BvaWxlcnMgPSB7XG4gIGl0ZW1zOiBkZWZhdWx0U3BvaWxlcnMuaXRlbXMsXG59O1xuXG5jb25zdCBTcG9pbGVyc0NvbnRleHQgPSBjcmVhdGVDb250ZXh0PFNwb2lsZXJzQ29udGV4dEludGVyZmFjZT4oe1xuICBzcG9pbGVyczogZGVmYXVsdFNwb2lsZXJzQ29udGV4dFZhbHVlLFxuICBzZXRTcG9pbGVyczogKCkgPT4geyB9LFxufSk7XG5cbmV4cG9ydCBjb25zdCBTcG9pbGVyc1Byb3ZpZGVyID0gKHsgY2hpbGRyZW4gfSkgPT4ge1xuICBjb25zdCBbc3BvaWxlcnMsIHNldFNwb2lsZXJzXSA9IHVzZVN0YXRlPFNwb2lsZXJzPihcbiAgICBkZWZhdWx0U3BvaWxlcnNDb250ZXh0VmFsdWVcbiAgKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHN0b3JhZ2VTcG9pbGVycyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwic3BvaWxlcnNcIik7XG4gICAgaWYgKCFzdG9yYWdlU3BvaWxlcnMpIHtcbiAgICAgIHNldFNwb2lsZXJzKChzcG9pbGVycykgPT4gKHsgLi4uc3BvaWxlcnMsIGxvYWRpbmc6IGZhbHNlIH0pKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBwYXJzZWRTcG9pbGVycyA9IEpTT04ucGFyc2Uoc3RvcmFnZVNwb2lsZXJzKTtcbiAgICBpZiAoIXBhcnNlZFNwb2lsZXJzKSB7XG4gICAgICBsb2NhbFN0b3JhZ2UuZGVsZXRlKFwic3BvaWxlcnNcIik7XG4gICAgICBzZXRTcG9pbGVycygoc3BvaWxlcnMpID0+ICh7IC4uLnNwb2lsZXJzLCBsb2FkaW5nOiBmYWxzZSB9KSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgcGFyc2VkU3BvaWxlcnMuY2hhcmFjdGVycyA9IG5ldyBTZXQocGFyc2VkU3BvaWxlcnM/LmNoYXJhY3RlcnMpO1xuICAgIHNldFNwb2lsZXJzKHsgLi4ucGFyc2VkU3BvaWxlcnMsIGxvYWRpbmc6IGZhbHNlIH0pO1xuICB9LCBbXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8U3BvaWxlcnNDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt7IHNwb2lsZXJzLCBzZXRTcG9pbGVyczogc2V0U3BvaWxlcnMgfX0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9TcG9pbGVyc0NvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59O1xuXG5leHBvcnQgY29uc3QgdXNlU3BvaWxlcnMgPSAoKSA9PiB7XG4gIGNvbnN0IHsgc3BvaWxlcnMsIHNldFNwb2lsZXJzIH0gPSB1c2VDb250ZXh0KFNwb2lsZXJzQ29udGV4dCk7XG5cbiAgY29uc3QgdXBkYXRlU3BvaWxlcnMgPSAobmV3U3BvaWxlcnM6IFNwb2lsZXJzKSA9PiB7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXG4gICAgICBcInNwb2lsZXJzXCIsXG4gICAgICBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIC4uLm5ld1Nwb2lsZXJzLFxuICAgICAgfSlcbiAgICApO1xuICAgIHNldFNwb2lsZXJzKG5ld1Nwb2lsZXJzKTtcbiAgfTtcblxuICByZXR1cm4geyBzcG9pbGVycywgdXBkYXRlU3BvaWxlcnMgfTtcbn07XG4iXSwibmFtZXMiOlsiY3JlYXRlQ29udGV4dCIsInVzZUNvbnRleHQiLCJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsImRlZmF1bHRTcG9pbGVycyIsImRlZmF1bHRTcG9pbGVyc0NvbnRleHRWYWx1ZSIsIml0ZW1zIiwiU3BvaWxlcnNDb250ZXh0Iiwic3BvaWxlcnMiLCJzZXRTcG9pbGVycyIsIlNwb2lsZXJzUHJvdmlkZXIiLCJjaGlsZHJlbiIsInN0b3JhZ2VTcG9pbGVycyIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJsb2FkaW5nIiwicGFyc2VkU3BvaWxlcnMiLCJKU09OIiwicGFyc2UiLCJkZWxldGUiLCJjaGFyYWN0ZXJzIiwiU2V0IiwiUHJvdmlkZXIiLCJ2YWx1ZSIsInVzZVNwb2lsZXJzIiwidXBkYXRlU3BvaWxlcnMiLCJuZXdTcG9pbGVycyIsInNldEl0ZW0iLCJzdHJpbmdpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./hooks/useSpoilers.tsx\n");

/***/ }),

/***/ "./pages/_app.tsx":
/*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _public_global_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../public/global.css */ \"./public/global.css\");\n/* harmony import */ var _public_global_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_public_global_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _hooks_useSpoilers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks/useSpoilers */ \"./hooks/useSpoilers.tsx\");\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\n\n\n\nfunction MyApp(param) {\n    var Component = param.Component, pageProps = param.pageProps;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_hooks_useSpoilers__WEBPACK_IMPORTED_MODULE_2__.SpoilersProvider, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, _objectSpread({}, pageProps), void 0, false, {\n            fileName: \"/home/nrichman/projects/fh-party-items/pages/_app.tsx\",\n            lineNumber: 7,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/home/nrichman/projects/fh-party-items/pages/_app.tsx\",\n        lineNumber: 6,\n        columnNumber: 5\n    }, this);\n}\n_c = MyApp;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MyApp);\nvar _c;\n$RefreshReg$(_c, \"MyApp\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBOEI7QUFDMEI7QUFFeEQsU0FBU0MsS0FBSyxDQUFDLEtBQXdCLEVBQUU7UUFBeEJDLFNBQVMsR0FBWCxLQUF3QixDQUF0QkEsU0FBUyxFQUFFQyxTQUFTLEdBQXRCLEtBQXdCLENBQVhBLFNBQVM7SUFDbkMscUJBQ0UsOERBQUNILGdFQUFnQjtrQkFDZiw0RUFBQ0UsU0FBUyxvQkFBS0MsU0FBUzs7OztnQkFBSTs7Ozs7WUFDWCxDQUNuQjtDQUNIO0FBTlFGLEtBQUFBLEtBQUs7QUFRZCwrREFBZUEsS0FBSyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3BhZ2VzL19hcHAudHN4PzJmYmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi4vcHVibGljL2dsb2JhbC5jc3NcIjtcbmltcG9ydCB7IFNwb2lsZXJzUHJvdmlkZXIgfSBmcm9tIFwiLi4vaG9va3MvdXNlU3BvaWxlcnNcIjtcblxuZnVuY3Rpb24gTXlBcHAoeyBDb21wb25lbnQsIHBhZ2VQcm9wcyB9KSB7XG4gIHJldHVybiAoXG4gICAgPFNwb2lsZXJzUHJvdmlkZXI+XG4gICAgICA8Q29tcG9uZW50IHsuLi5wYWdlUHJvcHN9IC8+XG4gICAgPC9TcG9pbGVyc1Byb3ZpZGVyPlxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBNeUFwcDtcbiJdLCJuYW1lcyI6WyJTcG9pbGVyc1Byb3ZpZGVyIiwiTXlBcHAiLCJDb21wb25lbnQiLCJwYWdlUHJvcHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/_app.tsx\n");

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\n// ATTENTION\n\nvar REACT_ELEMENT_TYPE =  Symbol.for('react.element');\nvar REACT_PORTAL_TYPE =  Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE =  Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE =  Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE =  Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE =  Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE =  Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE =  Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE =  Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE =  Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE =  Symbol.for('react.memo');\nvar REACT_LAZY_TYPE =  Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE =  Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL =  Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n");

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz81Nzc3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n");

/***/ }),

/***/ "./data/item_unlocks.json":
/*!********************************!*\
  !*** ./data/item_unlocks.json ***!
  \********************************/
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"items":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,51,54,56,65,66,68,76,77,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,104,105,106,109,112,113,117,119,120,121,122,123,124,125,126,127,156,159,174,175,181,185,187,188,189,191,195,212,223,232,236,244,245]}');

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!"), __webpack_exec__("./node_modules/next/dist/client/router.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);